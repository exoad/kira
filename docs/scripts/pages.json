[
  {
    "name": "ADD",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.ADD",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-a-d-d/index.html",
    "searchKeys": [
      "ADD",
      "ADD",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.ADD"
    ]
  },
  {
    "name": "AMPERSAND",
    "description": "net.exoad.kira.core.Symbols.AMPERSAND",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-a-m-p-e-r-s-a-n-d/index.html",
    "searchKeys": [
      "AMPERSAND",
      "AMPERSAND",
      "net.exoad.kira.core.Symbols.AMPERSAND"
    ]
  },
  {
    "name": "AND",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.AND",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-a-n-d/index.html",
    "searchKeys": [
      "AND",
      "AND",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.AND"
    ]
  },
  {
    "name": "ASTERISK",
    "description": "net.exoad.kira.core.Symbols.ASTERISK",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-a-s-t-e-r-i-s-k/index.html",
    "searchKeys": [
      "ASTERISK",
      "ASTERISK",
      "net.exoad.kira.core.Symbols.ASTERISK"
    ]
  },
  {
    "name": "AT",
    "description": "net.exoad.kira.core.Symbols.AT",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-a-t/index.html",
    "searchKeys": [
      "AT",
      "AT",
      "net.exoad.kira.core.Symbols.AT"
    ]
  },
  {
    "name": "BACK_SLASH",
    "description": "net.exoad.kira.core.Symbols.BACK_SLASH",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-b-a-c-k_-s-l-a-s-h/index.html",
    "searchKeys": [
      "BACK_SLASH",
      "BACK_SLASH",
      "net.exoad.kira.core.Symbols.BACK_SLASH"
    ]
  },
  {
    "name": "BIT_NOT",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.BIT_NOT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/-b-i-t_-n-o-t/index.html",
    "searchKeys": [
      "BIT_NOT",
      "BIT_NOT",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.BIT_NOT"
    ]
  },
  {
    "name": "CARET",
    "description": "net.exoad.kira.core.Symbols.CARET",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-a-r-e-t/index.html",
    "searchKeys": [
      "CARET",
      "CARET",
      "net.exoad.kira.core.Symbols.CARET"
    ]
  },
  {
    "name": "CLASS",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.CLASS",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/-c-l-a-s-s/index.html",
    "searchKeys": [
      "CLASS",
      "CLASS",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.CLASS"
    ]
  },
  {
    "name": "CLASS",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.CLASS",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-c-l-a-s-s/index.html",
    "searchKeys": [
      "CLASS",
      "CLASS",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.CLASS"
    ]
  },
  {
    "name": "CLASS",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.CLASS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-c-l-a-s-s/index.html",
    "searchKeys": [
      "CLASS",
      "CLASS",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.CLASS"
    ]
  },
  {
    "name": "CLASS_MEMBER",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.CLASS_MEMBER",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-c-l-a-s-s_-m-e-m-b-e-r/index.html",
    "searchKeys": [
      "CLASS_MEMBER",
      "CLASS_MEMBER",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.CLASS_MEMBER"
    ]
  },
  {
    "name": "CLOSE_ANGLE",
    "description": "net.exoad.kira.core.Symbols.CLOSE_ANGLE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-l-o-s-e_-a-n-g-l-e/index.html",
    "searchKeys": [
      "CLOSE_ANGLE",
      "CLOSE_ANGLE",
      "net.exoad.kira.core.Symbols.CLOSE_ANGLE"
    ]
  },
  {
    "name": "CLOSE_BRACE",
    "description": "net.exoad.kira.core.Symbols.CLOSE_BRACE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-l-o-s-e_-b-r-a-c-e/index.html",
    "searchKeys": [
      "CLOSE_BRACE",
      "CLOSE_BRACE",
      "net.exoad.kira.core.Symbols.CLOSE_BRACE"
    ]
  },
  {
    "name": "CLOSE_BRACKET",
    "description": "net.exoad.kira.core.Symbols.CLOSE_BRACKET",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-l-o-s-e_-b-r-a-c-k-e-t/index.html",
    "searchKeys": [
      "CLOSE_BRACKET",
      "CLOSE_BRACKET",
      "net.exoad.kira.core.Symbols.CLOSE_BRACKET"
    ]
  },
  {
    "name": "CLOSE_PARENTHESIS",
    "description": "net.exoad.kira.core.Symbols.CLOSE_PARENTHESIS",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-l-o-s-e_-p-a-r-e-n-t-h-e-s-i-s/index.html",
    "searchKeys": [
      "CLOSE_PARENTHESIS",
      "CLOSE_PARENTHESIS",
      "net.exoad.kira.core.Symbols.CLOSE_PARENTHESIS"
    ]
  },
  {
    "name": "COLON",
    "description": "net.exoad.kira.core.Symbols.COLON",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-o-l-o-n/index.html",
    "searchKeys": [
      "COLON",
      "COLON",
      "net.exoad.kira.core.Symbols.COLON"
    ]
  },
  {
    "name": "COMMA",
    "description": "net.exoad.kira.core.Symbols.COMMA",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-c-o-m-m-a/index.html",
    "searchKeys": [
      "COMMA",
      "COMMA",
      "net.exoad.kira.core.Symbols.COMMA"
    ]
  },
  {
    "name": "CONJUNCTIVE_AND",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.CONJUNCTIVE_AND",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-c-o-n-j-u-n-c-t-i-v-e_-a-n-d/index.html",
    "searchKeys": [
      "CONJUNCTIVE_AND",
      "CONJUNCTIVE_AND",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.CONJUNCTIVE_AND"
    ]
  },
  {
    "name": "CONJUNCTIVE_DOT",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.CONJUNCTIVE_DOT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-c-o-n-j-u-n-c-t-i-v-e_-d-o-t/index.html",
    "searchKeys": [
      "CONJUNCTIVE_DOT",
      "CONJUNCTIVE_DOT",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.CONJUNCTIVE_DOT"
    ]
  },
  {
    "name": "CONJUNCTIVE_OR",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.CONJUNCTIVE_OR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-c-o-n-j-u-n-c-t-i-v-e_-o-r/index.html",
    "searchKeys": [
      "CONJUNCTIVE_OR",
      "CONJUNCTIVE_OR",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.CONJUNCTIVE_OR"
    ]
  },
  {
    "name": "C_99",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.C_99",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/-c_99/index.html",
    "searchKeys": [
      "C_99",
      "C_99",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.C_99"
    ]
  },
  {
    "name": "DIV",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.DIV",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-d-i-v/index.html",
    "searchKeys": [
      "DIV",
      "DIV",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.DIV"
    ]
  },
  {
    "name": "DOUBLE_QUOTE",
    "description": "net.exoad.kira.core.Symbols.DOUBLE_QUOTE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-d-o-u-b-l-e_-q-u-o-t-e/index.html",
    "searchKeys": [
      "DOUBLE_QUOTE",
      "DOUBLE_QUOTE",
      "net.exoad.kira.core.Symbols.DOUBLE_QUOTE"
    ]
  },
  {
    "name": "ENUM",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.ENUM",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/-e-n-u-m/index.html",
    "searchKeys": [
      "ENUM",
      "ENUM",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.ENUM"
    ]
  },
  {
    "name": "ENUM",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.ENUM",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-e-n-u-m/index.html",
    "searchKeys": [
      "ENUM",
      "ENUM",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.ENUM"
    ]
  },
  {
    "name": "ENUM",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.ENUM",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-e-n-u-m/index.html",
    "searchKeys": [
      "ENUM",
      "ENUM",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.ENUM"
    ]
  },
  {
    "name": "EQUALS",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.EQUALS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-e-q-u-a-l-s/index.html",
    "searchKeys": [
      "EQUALS",
      "EQUALS",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.EQUALS"
    ]
  },
  {
    "name": "EQUALS",
    "description": "net.exoad.kira.core.Symbols.EQUALS",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-e-q-u-a-l-s/index.html",
    "searchKeys": [
      "EQUALS",
      "EQUALS",
      "net.exoad.kira.core.Symbols.EQUALS"
    ]
  },
  {
    "name": "EXCLAMATION",
    "description": "net.exoad.kira.core.Symbols.EXCLAMATION",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-e-x-c-l-a-m-a-t-i-o-n/index.html",
    "searchKeys": [
      "EXCLAMATION",
      "EXCLAMATION",
      "net.exoad.kira.core.Symbols.EXCLAMATION"
    ]
  },
  {
    "name": "FUNCTION",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.FUNCTION",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/-f-u-n-c-t-i-o-n/index.html",
    "searchKeys": [
      "FUNCTION",
      "FUNCTION",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.FUNCTION"
    ]
  },
  {
    "name": "FUNCTION",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.FUNCTION",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-f-u-n-c-t-i-o-n/index.html",
    "searchKeys": [
      "FUNCTION",
      "FUNCTION",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.FUNCTION"
    ]
  },
  {
    "name": "FUNCTION",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.FUNCTION",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-f-u-n-c-t-i-o-n/index.html",
    "searchKeys": [
      "FUNCTION",
      "FUNCTION",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.FUNCTION"
    ]
  },
  {
    "name": "FUNCTION_PARAMETER",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.FUNCTION_PARAMETER",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-f-u-n-c-t-i-o-n_-p-a-r-a-m-e-t-e-r/index.html",
    "searchKeys": [
      "FUNCTION_PARAMETER",
      "FUNCTION_PARAMETER",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.FUNCTION_PARAMETER"
    ]
  },
  {
    "name": "GREATER_THAN",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.GREATER_THAN",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-g-r-e-a-t-e-r_-t-h-a-n/index.html",
    "searchKeys": [
      "GREATER_THAN",
      "GREATER_THAN",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.GREATER_THAN"
    ]
  },
  {
    "name": "GREATER_THAN_OR_EQUAL",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.GREATER_THAN_OR_EQUAL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-g-r-e-a-t-e-r_-t-h-a-n_-o-r_-e-q-u-a-l/index.html",
    "searchKeys": [
      "GREATER_THAN_OR_EQUAL",
      "GREATER_THAN_OR_EQUAL",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.GREATER_THAN_OR_EQUAL"
    ]
  },
  {
    "name": "HYPHEN",
    "description": "net.exoad.kira.core.Symbols.HYPHEN",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-h-y-p-h-e-n/index.html",
    "searchKeys": [
      "HYPHEN",
      "HYPHEN",
      "net.exoad.kira.core.Symbols.HYPHEN"
    ]
  },
  {
    "name": "IDENTIFIER",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.IDENTIFIER",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-i-d-e-n-t-i-f-i-e-r/index.html",
    "searchKeys": [
      "IDENTIFIER",
      "IDENTIFIER",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.IDENTIFIER"
    ]
  },
  {
    "name": "K_AS",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_AS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-a-s/index.html",
    "searchKeys": [
      "K_AS",
      "K_AS",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_AS"
    ]
  },
  {
    "name": "K_BREAK",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_BREAK",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-b-r-e-a-k/index.html",
    "searchKeys": [
      "K_BREAK",
      "K_BREAK",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_BREAK"
    ]
  },
  {
    "name": "K_CLASS",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_CLASS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-c-l-a-s-s/index.html",
    "searchKeys": [
      "K_CLASS",
      "K_CLASS",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_CLASS"
    ]
  },
  {
    "name": "K_CONTINUE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_CONTINUE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-c-o-n-t-i-n-u-e/index.html",
    "searchKeys": [
      "K_CONTINUE",
      "K_CONTINUE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_CONTINUE"
    ]
  },
  {
    "name": "K_DO",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_DO",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-d-o/index.html",
    "searchKeys": [
      "K_DO",
      "K_DO",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_DO"
    ]
  },
  {
    "name": "K_ELSE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_ELSE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-e-l-s-e/index.html",
    "searchKeys": [
      "K_ELSE",
      "K_ELSE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_ELSE"
    ]
  },
  {
    "name": "K_ENUM",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_ENUM",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-e-n-u-m/index.html",
    "searchKeys": [
      "K_ENUM",
      "K_ENUM",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_ENUM"
    ]
  },
  {
    "name": "K_FOR",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_FOR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-f-o-r/index.html",
    "searchKeys": [
      "K_FOR",
      "K_FOR",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_FOR"
    ]
  },
  {
    "name": "K_IF",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_IF",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-i-f/index.html",
    "searchKeys": [
      "K_IF",
      "K_IF",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_IF"
    ]
  },
  {
    "name": "K_IS",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_IS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-i-s/index.html",
    "searchKeys": [
      "K_IS",
      "K_IS",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_IS"
    ]
  },
  {
    "name": "K_MODIFIER_MUTABLE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_MUTABLE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-m-o-d-i-f-i-e-r_-m-u-t-a-b-l-e/index.html",
    "searchKeys": [
      "K_MODIFIER_MUTABLE",
      "K_MODIFIER_MUTABLE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_MUTABLE"
    ]
  },
  {
    "name": "K_MODIFIER_PUBLIC",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_PUBLIC",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-m-o-d-i-f-i-e-r_-p-u-b-l-i-c/index.html",
    "searchKeys": [
      "K_MODIFIER_PUBLIC",
      "K_MODIFIER_PUBLIC",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_PUBLIC"
    ]
  },
  {
    "name": "K_MODIFIER_REQUIRE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_REQUIRE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-m-o-d-i-f-i-e-r_-r-e-q-u-i-r-e/index.html",
    "searchKeys": [
      "K_MODIFIER_REQUIRE",
      "K_MODIFIER_REQUIRE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_REQUIRE"
    ]
  },
  {
    "name": "K_MODIFIER_WEAK",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_WEAK",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-m-o-d-i-f-i-e-r_-w-e-a-k/index.html",
    "searchKeys": [
      "K_MODIFIER_WEAK",
      "K_MODIFIER_WEAK",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODIFIER_WEAK"
    ]
  },
  {
    "name": "K_MODULE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODULE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-m-o-d-u-l-e/index.html",
    "searchKeys": [
      "K_MODULE",
      "K_MODULE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_MODULE"
    ]
  },
  {
    "name": "K_OBJECT",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_OBJECT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-o-b-j-e-c-t/index.html",
    "searchKeys": [
      "K_OBJECT",
      "K_OBJECT",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_OBJECT"
    ]
  },
  {
    "name": "K_RETURN",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_RETURN",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-r-e-t-u-r-n/index.html",
    "searchKeys": [
      "K_RETURN",
      "K_RETURN",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_RETURN"
    ]
  },
  {
    "name": "K_THIS",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_THIS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-t-h-i-s/index.html",
    "searchKeys": [
      "K_THIS",
      "K_THIS",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_THIS"
    ]
  },
  {
    "name": "K_USE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_USE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-u-s-e/index.html",
    "searchKeys": [
      "K_USE",
      "K_USE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_USE"
    ]
  },
  {
    "name": "K_WHILE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_WHILE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-w-h-i-l-e/index.html",
    "searchKeys": [
      "K_WHILE",
      "K_WHILE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_WHILE"
    ]
  },
  {
    "name": "K_WITH",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_WITH",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-k_-w-i-t-h/index.html",
    "searchKeys": [
      "K_WITH",
      "K_WITH",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.K_WITH"
    ]
  },
  {
    "name": "LESS_THAN",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.LESS_THAN",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-l-e-s-s_-t-h-a-n/index.html",
    "searchKeys": [
      "LESS_THAN",
      "LESS_THAN",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.LESS_THAN"
    ]
  },
  {
    "name": "LESS_THAN_OR_EQUAL",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.LESS_THAN_OR_EQUAL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-l-e-s-s_-t-h-a-n_-o-r_-e-q-u-a-l/index.html",
    "searchKeys": [
      "LESS_THAN_OR_EQUAL",
      "LESS_THAN_OR_EQUAL",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.LESS_THAN_OR_EQUAL"
    ]
  },
  {
    "name": "LOWERCASE_A",
    "description": "net.exoad.kira.core.Symbols.LOWERCASE_A",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-l-o-w-e-r-c-a-s-e_-a/index.html",
    "searchKeys": [
      "LOWERCASE_A",
      "LOWERCASE_A",
      "net.exoad.kira.core.Symbols.LOWERCASE_A"
    ]
  },
  {
    "name": "LOWERCASE_I",
    "description": "net.exoad.kira.core.Symbols.LOWERCASE_I",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-l-o-w-e-r-c-a-s-e_-i/index.html",
    "searchKeys": [
      "LOWERCASE_I",
      "LOWERCASE_I",
      "net.exoad.kira.core.Symbols.LOWERCASE_I"
    ]
  },
  {
    "name": "LOWERCASE_S",
    "description": "net.exoad.kira.core.Symbols.LOWERCASE_S",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-l-o-w-e-r-c-a-s-e_-s/index.html",
    "searchKeys": [
      "LOWERCASE_S",
      "LOWERCASE_S",
      "net.exoad.kira.core.Symbols.LOWERCASE_S"
    ]
  },
  {
    "name": "L_FALSE_BOOL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_FALSE_BOOL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-l_-f-a-l-s-e_-b-o-o-l/index.html",
    "searchKeys": [
      "L_FALSE_BOOL",
      "L_FALSE_BOOL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_FALSE_BOOL"
    ]
  },
  {
    "name": "L_FLOAT",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_FLOAT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-l_-f-l-o-a-t/index.html",
    "searchKeys": [
      "L_FLOAT",
      "L_FLOAT",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_FLOAT"
    ]
  },
  {
    "name": "L_INTEGER",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_INTEGER",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-l_-i-n-t-e-g-e-r/index.html",
    "searchKeys": [
      "L_INTEGER",
      "L_INTEGER",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_INTEGER"
    ]
  },
  {
    "name": "L_NULL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_NULL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-l_-n-u-l-l/index.html",
    "searchKeys": [
      "L_NULL",
      "L_NULL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_NULL"
    ]
  },
  {
    "name": "L_STRING",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_STRING",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-l_-s-t-r-i-n-g/index.html",
    "searchKeys": [
      "L_STRING",
      "L_STRING",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_STRING"
    ]
  },
  {
    "name": "L_TRUE_BOOL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_TRUE_BOOL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-l_-t-r-u-e_-b-o-o-l/index.html",
    "searchKeys": [
      "L_TRUE_BOOL",
      "L_TRUE_BOOL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.L_TRUE_BOOL"
    ]
  },
  {
    "name": "MOD",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.MOD",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-m-o-d/index.html",
    "searchKeys": [
      "MOD",
      "MOD",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.MOD"
    ]
  },
  {
    "name": "MODULE",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.MODULE",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/-m-o-d-u-l-e/index.html",
    "searchKeys": [
      "MODULE",
      "MODULE",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.MODULE"
    ]
  },
  {
    "name": "MODULE",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.MODULE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-m-o-d-u-l-e/index.html",
    "searchKeys": [
      "MODULE",
      "MODULE",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.MODULE"
    ]
  },
  {
    "name": "MUL",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.MUL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-m-u-l/index.html",
    "searchKeys": [
      "MUL",
      "MUL",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.MUL"
    ]
  },
  {
    "name": "MUTABLE",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.MUTABLE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-m-u-t-a-b-l-e/index.html",
    "searchKeys": [
      "MUTABLE",
      "MUTABLE",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.MUTABLE"
    ]
  },
  {
    "name": "NEG",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.NEG",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/-n-e-g/index.html",
    "searchKeys": [
      "NEG",
      "NEG",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.NEG"
    ]
  },
  {
    "name": "NEKO",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.NEKO",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/-output-target/-n-e-k-o/index.html",
    "searchKeys": [
      "NEKO",
      "NEKO",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.NEKO"
    ]
  },
  {
    "name": "NEKO_VM",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.NEKO_VM",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/-n-e-k-o_-v-m/index.html",
    "searchKeys": [
      "NEKO_VM",
      "NEKO_VM",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.NEKO_VM"
    ]
  },
  {
    "name": "NEWLINE",
    "description": "net.exoad.kira.core.Symbols.NEWLINE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-n-e-w-l-i-n-e/index.html",
    "searchKeys": [
      "NEWLINE",
      "NEWLINE",
      "net.exoad.kira.core.Symbols.NEWLINE"
    ]
  },
  {
    "name": "NONE",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.NONE",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/-output-target/-n-o-n-e/index.html",
    "searchKeys": [
      "NONE",
      "NONE",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.NONE"
    ]
  },
  {
    "name": "NOT",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.NOT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/-n-o-t/index.html",
    "searchKeys": [
      "NOT",
      "NOT",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.NOT"
    ]
  },
  {
    "name": "NOT_EQUAL",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.NOT_EQUAL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-n-o-t_-e-q-u-a-l/index.html",
    "searchKeys": [
      "NOT_EQUAL",
      "NOT_EQUAL",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.NOT_EQUAL"
    ]
  },
  {
    "name": "NULL",
    "description": "net.exoad.kira.core.Symbols.NULL",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-n-u-l-l/index.html",
    "searchKeys": [
      "NULL",
      "NULL",
      "net.exoad.kira.core.Symbols.NULL"
    ]
  },
  {
    "name": "OBJECT",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.OBJECT",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/-o-b-j-e-c-t/index.html",
    "searchKeys": [
      "OBJECT",
      "OBJECT",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.OBJECT"
    ]
  },
  {
    "name": "OBJECT",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.OBJECT",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-o-b-j-e-c-t/index.html",
    "searchKeys": [
      "OBJECT",
      "OBJECT",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.OBJECT"
    ]
  },
  {
    "name": "OBJECT",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.OBJECT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-o-b-j-e-c-t/index.html",
    "searchKeys": [
      "OBJECT",
      "OBJECT",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.OBJECT"
    ]
  },
  {
    "name": "OBJECT_MEMBER",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.OBJECT_MEMBER",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-o-b-j-e-c-t_-m-e-m-b-e-r/index.html",
    "searchKeys": [
      "OBJECT_MEMBER",
      "OBJECT_MEMBER",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.OBJECT_MEMBER"
    ]
  },
  {
    "name": "OPEN_ANGLE",
    "description": "net.exoad.kira.core.Symbols.OPEN_ANGLE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-o-p-e-n_-a-n-g-l-e/index.html",
    "searchKeys": [
      "OPEN_ANGLE",
      "OPEN_ANGLE",
      "net.exoad.kira.core.Symbols.OPEN_ANGLE"
    ]
  },
  {
    "name": "OPEN_BRACE",
    "description": "net.exoad.kira.core.Symbols.OPEN_BRACE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-o-p-e-n_-b-r-a-c-e/index.html",
    "searchKeys": [
      "OPEN_BRACE",
      "OPEN_BRACE",
      "net.exoad.kira.core.Symbols.OPEN_BRACE"
    ]
  },
  {
    "name": "OPEN_BRACKET",
    "description": "net.exoad.kira.core.Symbols.OPEN_BRACKET",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-o-p-e-n_-b-r-a-c-k-e-t/index.html",
    "searchKeys": [
      "OPEN_BRACKET",
      "OPEN_BRACKET",
      "net.exoad.kira.core.Symbols.OPEN_BRACKET"
    ]
  },
  {
    "name": "OPEN_PARENTHESIS",
    "description": "net.exoad.kira.core.Symbols.OPEN_PARENTHESIS",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-o-p-e-n_-p-a-r-e-n-t-h-e-s-i-s/index.html",
    "searchKeys": [
      "OPEN_PARENTHESIS",
      "OPEN_PARENTHESIS",
      "net.exoad.kira.core.Symbols.OPEN_PARENTHESIS"
    ]
  },
  {
    "name": "OP_ADD",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ADD",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-d-d/index.html",
    "searchKeys": [
      "OP_ADD",
      "OP_ADD",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ADD"
    ]
  },
  {
    "name": "OP_ASSIGN_ADD",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_ADD",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-a-d-d/index.html",
    "searchKeys": [
      "OP_ASSIGN_ADD",
      "OP_ASSIGN_ADD",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_ADD"
    ]
  },
  {
    "name": "OP_ASSIGN_BIT_AND",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_AND",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-b-i-t_-a-n-d/index.html",
    "searchKeys": [
      "OP_ASSIGN_BIT_AND",
      "OP_ASSIGN_BIT_AND",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_AND"
    ]
  },
  {
    "name": "OP_ASSIGN_BIT_OR",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_OR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-b-i-t_-o-r/index.html",
    "searchKeys": [
      "OP_ASSIGN_BIT_OR",
      "OP_ASSIGN_BIT_OR",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_OR"
    ]
  },
  {
    "name": "OP_ASSIGN_BIT_SHL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_SHL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-b-i-t_-s-h-l/index.html",
    "searchKeys": [
      "OP_ASSIGN_BIT_SHL",
      "OP_ASSIGN_BIT_SHL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_SHL"
    ]
  },
  {
    "name": "OP_ASSIGN_BIT_XOR",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_XOR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-b-i-t_-x-o-r/index.html",
    "searchKeys": [
      "OP_ASSIGN_BIT_XOR",
      "OP_ASSIGN_BIT_XOR",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_BIT_XOR"
    ]
  },
  {
    "name": "OP_ASSIGN_DIV",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_DIV",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-d-i-v/index.html",
    "searchKeys": [
      "OP_ASSIGN_DIV",
      "OP_ASSIGN_DIV",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_DIV"
    ]
  },
  {
    "name": "OP_ASSIGN_MOD",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_MOD",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-m-o-d/index.html",
    "searchKeys": [
      "OP_ASSIGN_MOD",
      "OP_ASSIGN_MOD",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_MOD"
    ]
  },
  {
    "name": "OP_ASSIGN_MUL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_MUL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-m-u-l/index.html",
    "searchKeys": [
      "OP_ASSIGN_MUL",
      "OP_ASSIGN_MUL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_MUL"
    ]
  },
  {
    "name": "OP_ASSIGN_SUB",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_SUB",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-a-s-s-i-g-n_-s-u-b/index.html",
    "searchKeys": [
      "OP_ASSIGN_SUB",
      "OP_ASSIGN_SUB",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_ASSIGN_SUB"
    ]
  },
  {
    "name": "OP_BIT_SHL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_BIT_SHL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-b-i-t_-s-h-l/index.html",
    "searchKeys": [
      "OP_BIT_SHL",
      "OP_BIT_SHL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_BIT_SHL"
    ]
  },
  {
    "name": "OP_BIT_XOR",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_BIT_XOR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-b-i-t_-x-o-r/index.html",
    "searchKeys": [
      "OP_BIT_XOR",
      "OP_BIT_XOR",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_BIT_XOR"
    ]
  },
  {
    "name": "OP_CMP_AND",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_AND",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-c-m-p_-a-n-d/index.html",
    "searchKeys": [
      "OP_CMP_AND",
      "OP_CMP_AND",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_AND"
    ]
  },
  {
    "name": "OP_CMP_EQL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_EQL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-c-m-p_-e-q-l/index.html",
    "searchKeys": [
      "OP_CMP_EQL",
      "OP_CMP_EQL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_EQL"
    ]
  },
  {
    "name": "OP_CMP_LEQ",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_LEQ",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-c-m-p_-l-e-q/index.html",
    "searchKeys": [
      "OP_CMP_LEQ",
      "OP_CMP_LEQ",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_LEQ"
    ]
  },
  {
    "name": "OP_CMP_NEQ",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_NEQ",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-c-m-p_-n-e-q/index.html",
    "searchKeys": [
      "OP_CMP_NEQ",
      "OP_CMP_NEQ",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_NEQ"
    ]
  },
  {
    "name": "OP_CMP_OR",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_OR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-c-m-p_-o-r/index.html",
    "searchKeys": [
      "OP_CMP_OR",
      "OP_CMP_OR",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_CMP_OR"
    ]
  },
  {
    "name": "OP_DIV",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_DIV",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-d-i-v/index.html",
    "searchKeys": [
      "OP_DIV",
      "OP_DIV",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_DIV"
    ]
  },
  {
    "name": "OP_MOD",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_MOD",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-m-o-d/index.html",
    "searchKeys": [
      "OP_MOD",
      "OP_MOD",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_MOD"
    ]
  },
  {
    "name": "OP_MUL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_MUL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-m-u-l/index.html",
    "searchKeys": [
      "OP_MUL",
      "OP_MUL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_MUL"
    ]
  },
  {
    "name": "OP_RANGE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_RANGE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-r-a-n-g-e/index.html",
    "searchKeys": [
      "OP_RANGE",
      "OP_RANGE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_RANGE"
    ]
  },
  {
    "name": "OP_SCOPE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_SCOPE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-s-c-o-p-e/index.html",
    "searchKeys": [
      "OP_SCOPE",
      "OP_SCOPE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_SCOPE"
    ]
  },
  {
    "name": "OP_SUB",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_SUB",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-o-p_-s-u-b/index.html",
    "searchKeys": [
      "OP_SUB",
      "OP_SUB",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.OP_SUB"
    ]
  },
  {
    "name": "OR",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.OR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-o-r/index.html",
    "searchKeys": [
      "OR",
      "OR",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.OR"
    ]
  },
  {
    "name": "PARAMETER",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.PARAMETER",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-p-a-r-a-m-e-t-e-r/index.html",
    "searchKeys": [
      "PARAMETER",
      "PARAMETER",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.PARAMETER"
    ]
  },
  {
    "name": "PERCENT",
    "description": "net.exoad.kira.core.Symbols.PERCENT",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-p-e-r-c-e-n-t/index.html",
    "searchKeys": [
      "PERCENT",
      "PERCENT",
      "net.exoad.kira.core.Symbols.PERCENT"
    ]
  },
  {
    "name": "PERIOD",
    "description": "net.exoad.kira.core.Symbols.PERIOD",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-p-e-r-i-o-d/index.html",
    "searchKeys": [
      "PERIOD",
      "PERIOD",
      "net.exoad.kira.core.Symbols.PERIOD"
    ]
  },
  {
    "name": "PIPE",
    "description": "net.exoad.kira.core.Symbols.PIPE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-p-i-p-e/index.html",
    "searchKeys": [
      "PIPE",
      "PIPE",
      "net.exoad.kira.core.Symbols.PIPE"
    ]
  },
  {
    "name": "PLUS",
    "description": "net.exoad.kira.core.Symbols.PLUS",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-p-l-u-s/index.html",
    "searchKeys": [
      "PLUS",
      "PLUS",
      "net.exoad.kira.core.Symbols.PLUS"
    ]
  },
  {
    "name": "POS",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.POS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/-p-o-s/index.html",
    "searchKeys": [
      "POS",
      "POS",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.POS"
    ]
  },
  {
    "name": "PUBLIC",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.PUBLIC",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-p-u-b-l-i-c/index.html",
    "searchKeys": [
      "PUBLIC",
      "PUBLIC",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.PUBLIC"
    ]
  },
  {
    "name": "QUESTION_MARK",
    "description": "net.exoad.kira.core.Symbols.QUESTION_MARK",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-q-u-e-s-t-i-o-n_-m-a-r-k/index.html",
    "searchKeys": [
      "QUESTION_MARK",
      "QUESTION_MARK",
      "net.exoad.kira.core.Symbols.QUESTION_MARK"
    ]
  },
  {
    "name": "RANGE",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.RANGE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-r-a-n-g-e/index.html",
    "searchKeys": [
      "RANGE",
      "RANGE",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.RANGE"
    ]
  },
  {
    "name": "REQUIRE",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.REQUIRE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-r-e-q-u-i-r-e/index.html",
    "searchKeys": [
      "REQUIRE",
      "REQUIRE",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.REQUIRE"
    ]
  },
  {
    "name": "SHL",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.SHL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-s-h-l/index.html",
    "searchKeys": [
      "SHL",
      "SHL",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.SHL"
    ]
  },
  {
    "name": "SHR",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.SHR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-s-h-r/index.html",
    "searchKeys": [
      "SHR",
      "SHR",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.SHR"
    ]
  },
  {
    "name": "SLASH",
    "description": "net.exoad.kira.core.Symbols.SLASH",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-s-l-a-s-h/index.html",
    "searchKeys": [
      "SLASH",
      "SLASH",
      "net.exoad.kira.core.Symbols.SLASH"
    ]
  },
  {
    "name": "STATEMENT_DELIMITER",
    "description": "net.exoad.kira.core.Symbols.STATEMENT_DELIMITER",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-s-t-a-t-e-m-e-n-t_-d-e-l-i-m-i-t-e-r/index.html",
    "searchKeys": [
      "STATEMENT_DELIMITER",
      "STATEMENT_DELIMITER",
      "net.exoad.kira.core.Symbols.STATEMENT_DELIMITER"
    ]
  },
  {
    "name": "SUB",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.SUB",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-s-u-b/index.html",
    "searchKeys": [
      "SUB",
      "SUB",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.SUB"
    ]
  },
  {
    "name": "S_AND",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_AND",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-a-n-d/index.html",
    "searchKeys": [
      "S_AND",
      "S_AND",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_AND"
    ]
  },
  {
    "name": "S_AT",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_AT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-a-t/index.html",
    "searchKeys": [
      "S_AT",
      "S_AT",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_AT"
    ]
  },
  {
    "name": "S_BANG",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_BANG",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-b-a-n-g/index.html",
    "searchKeys": [
      "S_BANG",
      "S_BANG",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_BANG"
    ]
  },
  {
    "name": "S_CLOSE_ANGLE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_ANGLE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-c-l-o-s-e_-a-n-g-l-e/index.html",
    "searchKeys": [
      "S_CLOSE_ANGLE",
      "S_CLOSE_ANGLE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_ANGLE"
    ]
  },
  {
    "name": "S_CLOSE_BRACE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_BRACE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-c-l-o-s-e_-b-r-a-c-e/index.html",
    "searchKeys": [
      "S_CLOSE_BRACE",
      "S_CLOSE_BRACE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_BRACE"
    ]
  },
  {
    "name": "S_CLOSE_BRACKET",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_BRACKET",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-c-l-o-s-e_-b-r-a-c-k-e-t/index.html",
    "searchKeys": [
      "S_CLOSE_BRACKET",
      "S_CLOSE_BRACKET",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_BRACKET"
    ]
  },
  {
    "name": "S_CLOSE_PARENTHESIS",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_PARENTHESIS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-c-l-o-s-e_-p-a-r-e-n-t-h-e-s-i-s/index.html",
    "searchKeys": [
      "S_CLOSE_PARENTHESIS",
      "S_CLOSE_PARENTHESIS",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_CLOSE_PARENTHESIS"
    ]
  },
  {
    "name": "S_COLON",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_COLON",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-c-o-l-o-n/index.html",
    "searchKeys": [
      "S_COLON",
      "S_COLON",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_COLON"
    ]
  },
  {
    "name": "S_COMMA",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_COMMA",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-c-o-m-m-a/index.html",
    "searchKeys": [
      "S_COMMA",
      "S_COMMA",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_COMMA"
    ]
  },
  {
    "name": "S_DOT",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_DOT",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-d-o-t/index.html",
    "searchKeys": [
      "S_DOT",
      "S_DOT",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_DOT"
    ]
  },
  {
    "name": "S_EOF",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_EOF",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-e-o-f/index.html",
    "searchKeys": [
      "S_EOF",
      "S_EOF",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_EOF"
    ]
  },
  {
    "name": "S_EQUAL",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_EQUAL",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-e-q-u-a-l/index.html",
    "searchKeys": [
      "S_EQUAL",
      "S_EQUAL",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_EQUAL"
    ]
  },
  {
    "name": "S_OPEN_ANGLE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_ANGLE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-o-p-e-n_-a-n-g-l-e/index.html",
    "searchKeys": [
      "S_OPEN_ANGLE",
      "S_OPEN_ANGLE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_ANGLE"
    ]
  },
  {
    "name": "S_OPEN_BRACE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_BRACE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-o-p-e-n_-b-r-a-c-e/index.html",
    "searchKeys": [
      "S_OPEN_BRACE",
      "S_OPEN_BRACE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_BRACE"
    ]
  },
  {
    "name": "S_OPEN_BRACKET",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_BRACKET",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-o-p-e-n_-b-r-a-c-k-e-t/index.html",
    "searchKeys": [
      "S_OPEN_BRACKET",
      "S_OPEN_BRACKET",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_BRACKET"
    ]
  },
  {
    "name": "S_OPEN_PARENTHESIS",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_PARENTHESIS",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-o-p-e-n_-p-a-r-e-n-t-h-e-s-i-s/index.html",
    "searchKeys": [
      "S_OPEN_PARENTHESIS",
      "S_OPEN_PARENTHESIS",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_OPEN_PARENTHESIS"
    ]
  },
  {
    "name": "S_PIPE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_PIPE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-p-i-p-e/index.html",
    "searchKeys": [
      "S_PIPE",
      "S_PIPE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_PIPE"
    ]
  },
  {
    "name": "S_QUESTION_MARK",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_QUESTION_MARK",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-q-u-e-s-t-i-o-n_-m-a-r-k/index.html",
    "searchKeys": [
      "S_QUESTION_MARK",
      "S_QUESTION_MARK",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_QUESTION_MARK"
    ]
  },
  {
    "name": "S_SEMICOLON",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_SEMICOLON",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-s-e-m-i-c-o-l-o-n/index.html",
    "searchKeys": [
      "S_SEMICOLON",
      "S_SEMICOLON",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_SEMICOLON"
    ]
  },
  {
    "name": "S_TILDE",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_TILDE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-s_-t-i-l-d-e/index.html",
    "searchKeys": [
      "S_TILDE",
      "S_TILDE",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.S_TILDE"
    ]
  },
  {
    "name": "TILDE",
    "description": "net.exoad.kira.core.Symbols.TILDE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-t-i-l-d-e/index.html",
    "searchKeys": [
      "TILDE",
      "TILDE",
      "net.exoad.kira.core.Symbols.TILDE"
    ]
  },
  {
    "name": "TRACE",
    "description": "net.exoad.kira.core.Builtin.Intrinsics.TRACE",
    "location": "kira_lang/net.exoad.kira.core/-builtin/-intrinsics/-t-r-a-c-e/index.html",
    "searchKeys": [
      "TRACE",
      "TRACE",
      "net.exoad.kira.core.Builtin.Intrinsics.TRACE"
    ]
  },
  {
    "name": "TYPE_CAST",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.TYPE_CAST",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-t-y-p-e_-c-a-s-t/index.html",
    "searchKeys": [
      "TYPE_CAST",
      "TYPE_CAST",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.TYPE_CAST"
    ]
  },
  {
    "name": "TYPE_CHECK",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.TYPE_CHECK",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-t-y-p-e_-c-h-e-c-k/index.html",
    "searchKeys": [
      "TYPE_CHECK",
      "TYPE_CHECK",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.TYPE_CHECK"
    ]
  },
  {
    "name": "TYPE_SPECIFIER",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.TYPE_SPECIFIER",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-t-y-p-e_-s-p-e-c-i-f-i-e-r/index.html",
    "searchKeys": [
      "TYPE_SPECIFIER",
      "TYPE_SPECIFIER",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.TYPE_SPECIFIER"
    ]
  },
  {
    "name": "UNDERSCORE",
    "description": "net.exoad.kira.core.Symbols.UNDERSCORE",
    "location": "kira_lang/net.exoad.kira.core/-symbols/-u-n-d-e-r-s-c-o-r-e/index.html",
    "searchKeys": [
      "UNDERSCORE",
      "UNDERSCORE",
      "net.exoad.kira.core.Symbols.UNDERSCORE"
    ]
  },
  {
    "name": "USHR",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.USHR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-u-s-h-r/index.html",
    "searchKeys": [
      "USHR",
      "USHR",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.USHR"
    ]
  },
  {
    "name": "VALIDATE",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.VALIDATE",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/-v-a-l-i-d-a-t-e/index.html",
    "searchKeys": [
      "VALIDATE",
      "VALIDATE",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.VALIDATE"
    ]
  },
  {
    "name": "VARIABLE",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.VARIABLE",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/-v-a-r-i-a-b-l-e/index.html",
    "searchKeys": [
      "VARIABLE",
      "VARIABLE",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.VARIABLE"
    ]
  },
  {
    "name": "VARIABLE",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.VARIABLE",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/-v-a-r-i-a-b-l-e/index.html",
    "searchKeys": [
      "VARIABLE",
      "VARIABLE",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.VARIABLE"
    ]
  },
  {
    "name": "WEAK",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.WEAK",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-w-e-a-k/index.html",
    "searchKeys": [
      "WEAK",
      "WEAK",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.WEAK"
    ]
  },
  {
    "name": "XOR",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.XOR",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-x-o-r/index.html",
    "searchKeys": [
      "XOR",
      "XOR",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.XOR"
    ]
  },
  {
    "name": "X_ANY",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.X_ANY",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-x_-a-n-y/index.html",
    "searchKeys": [
      "X_ANY",
      "X_ANY",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.X_ANY"
    ]
  },
  {
    "name": "abstract class ASTNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTNode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-node/index.html",
    "searchKeys": [
      "ASTNode",
      "abstract class ASTNode",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTNode"
    ]
  },
  {
    "name": "abstract class ASTVisitor",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/index.html",
    "searchKeys": [
      "ASTVisitor",
      "abstract class ASTVisitor",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor"
    ]
  },
  {
    "name": "abstract class DataLiteral<T>(val value: T) : Literal",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.DataLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-data-literal/index.html",
    "searchKeys": [
      "DataLiteral",
      "abstract class DataLiteral<T>(val value: T) : Literal",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.DataLiteral"
    ]
  },
  {
    "name": "abstract class Decl(val name: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.Decl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-decl/index.html",
    "searchKeys": [
      "Decl",
      "abstract class Decl(val name: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.Decl"
    ]
  },
  {
    "name": "abstract class Expr : ASTNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.Expr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-expr/index.html",
    "searchKeys": [
      "Expr",
      "abstract class Expr : ASTNode",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.Expr"
    ]
  },
  {
    "name": "abstract class FirstClassDecl(val name: Identifier, val modifiers: List<Modifiers>) : Decl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-first-class-decl/index.html",
    "searchKeys": [
      "FirstClassDecl",
      "abstract class FirstClassDecl(val name: Identifier, val modifiers: List<Modifiers>) : Decl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl"
    ]
  },
  {
    "name": "abstract class ForIterationTargetExpr : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationTargetExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-target-expr/index.html",
    "searchKeys": [
      "ForIterationTargetExpr",
      "abstract class ForIterationTargetExpr : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationTargetExpr"
    ]
  },
  {
    "name": "abstract class Literal : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Literal",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-literal/index.html",
    "searchKeys": [
      "Literal",
      "abstract class Literal : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Literal"
    ]
  },
  {
    "name": "abstract fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTNode.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-node/accept.html",
    "searchKeys": [
      "accept",
      "abstract fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTNode.accept"
    ]
  },
  {
    "name": "abstract fun isStub(): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.isStub",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-first-class-decl/is-stub.html",
    "searchKeys": [
      "isStub",
      "abstract fun isStub(): Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.isStub"
    ]
  },
  {
    "name": "abstract fun visitArrayLiteral(arrayLiteral: ArrayLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitArrayLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-array-literal.html",
    "searchKeys": [
      "visitArrayLiteral",
      "abstract fun visitArrayLiteral(arrayLiteral: ArrayLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitArrayLiteral"
    ]
  },
  {
    "name": "abstract fun visitAssignmentExpr(assignmentExpr: AssignmentExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-assignment-expr.html",
    "searchKeys": [
      "visitAssignmentExpr",
      "abstract fun visitAssignmentExpr(assignmentExpr: AssignmentExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitAssignmentExpr"
    ]
  },
  {
    "name": "abstract fun visitBinaryExpr(binaryExpr: BinaryExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitBinaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-binary-expr.html",
    "searchKeys": [
      "visitBinaryExpr",
      "abstract fun visitBinaryExpr(binaryExpr: BinaryExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitBinaryExpr"
    ]
  },
  {
    "name": "abstract fun visitBoolLiteral(boolLiteral: BoolLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitBoolLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-bool-literal.html",
    "searchKeys": [
      "visitBoolLiteral",
      "abstract fun visitBoolLiteral(boolLiteral: BoolLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitBoolLiteral"
    ]
  },
  {
    "name": "abstract fun visitBreakStatement(breakStatement: BreakStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitBreakStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-break-statement.html",
    "searchKeys": [
      "visitBreakStatement",
      "abstract fun visitBreakStatement(breakStatement: BreakStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitBreakStatement"
    ]
  },
  {
    "name": "abstract fun visitClassDecl(classDecl: ClassDecl)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-class-decl.html",
    "searchKeys": [
      "visitClassDecl",
      "abstract fun visitClassDecl(classDecl: ClassDecl)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitClassDecl"
    ]
  },
  {
    "name": "abstract fun visitCompoundAssignmentExpr(compoundAssignmentExpr: CompoundAssignmentExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitCompoundAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-compound-assignment-expr.html",
    "searchKeys": [
      "visitCompoundAssignmentExpr",
      "abstract fun visitCompoundAssignmentExpr(compoundAssignmentExpr: CompoundAssignmentExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitCompoundAssignmentExpr"
    ]
  },
  {
    "name": "abstract fun visitContinueStatement(continueStatement: ContinueStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitContinueStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-continue-statement.html",
    "searchKeys": [
      "visitContinueStatement",
      "abstract fun visitContinueStatement(continueStatement: ContinueStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitContinueStatement"
    ]
  },
  {
    "name": "abstract fun visitDoWhileIterationStatement(doWhileIterationStatement: DoWhileIterationStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitDoWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-do-while-iteration-statement.html",
    "searchKeys": [
      "visitDoWhileIterationStatement",
      "abstract fun visitDoWhileIterationStatement(doWhileIterationStatement: DoWhileIterationStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitDoWhileIterationStatement"
    ]
  },
  {
    "name": "abstract fun visitElseBranchStatement(elseBranchNode: ElseBranchStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitElseBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-else-branch-statement.html",
    "searchKeys": [
      "visitElseBranchStatement",
      "abstract fun visitElseBranchStatement(elseBranchNode: ElseBranchStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitElseBranchStatement"
    ]
  },
  {
    "name": "abstract fun visitEnumDecl(enumDecl: EnumDecl)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitEnumDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-enum-decl.html",
    "searchKeys": [
      "visitEnumDecl",
      "abstract fun visitEnumDecl(enumDecl: EnumDecl)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitEnumDecl"
    ]
  },
  {
    "name": "abstract fun visitEnumMemberExpr(enumMemberExpr: EnumMemberExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitEnumMemberExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-enum-member-expr.html",
    "searchKeys": [
      "visitEnumMemberExpr",
      "abstract fun visitEnumMemberExpr(enumMemberExpr: EnumMemberExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitEnumMemberExpr"
    ]
  },
  {
    "name": "abstract fun visitFloatLiteral(floatLiteral: FloatLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFloatLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-float-literal.html",
    "searchKeys": [
      "visitFloatLiteral",
      "abstract fun visitFloatLiteral(floatLiteral: FloatLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFloatLiteral"
    ]
  },
  {
    "name": "abstract fun visitForIterationExpr(forIterationExpr: ForIterationExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitForIterationExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-for-iteration-expr.html",
    "searchKeys": [
      "visitForIterationExpr",
      "abstract fun visitForIterationExpr(forIterationExpr: ForIterationExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitForIterationExpr"
    ]
  },
  {
    "name": "abstract fun visitForIterationStatement(forIterationStatement: ForIterationStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitForIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-for-iteration-statement.html",
    "searchKeys": [
      "visitForIterationStatement",
      "abstract fun visitForIterationStatement(forIterationStatement: ForIterationStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitForIterationStatement"
    ]
  },
  {
    "name": "abstract fun visitFunctionCallExpr(functionCallExpr: FunctionCallExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-function-call-expr.html",
    "searchKeys": [
      "visitFunctionCallExpr",
      "abstract fun visitFunctionCallExpr(functionCallExpr: FunctionCallExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionCallExpr"
    ]
  },
  {
    "name": "abstract fun visitFunctionCallNamedParameterExpr(functionCallNamedParameterExpr: FunctionCallNamedParameterExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionCallNamedParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-function-call-named-parameter-expr.html",
    "searchKeys": [
      "visitFunctionCallNamedParameterExpr",
      "abstract fun visitFunctionCallNamedParameterExpr(functionCallNamedParameterExpr: FunctionCallNamedParameterExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionCallNamedParameterExpr"
    ]
  },
  {
    "name": "abstract fun visitFunctionCallPositionalParameterExpr(functionCallPositionalParameterExpr: FunctionCallPositionalParameterExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionCallPositionalParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-function-call-positional-parameter-expr.html",
    "searchKeys": [
      "visitFunctionCallPositionalParameterExpr",
      "abstract fun visitFunctionCallPositionalParameterExpr(functionCallPositionalParameterExpr: FunctionCallPositionalParameterExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionCallPositionalParameterExpr"
    ]
  },
  {
    "name": "abstract fun visitFunctionDecl(functionDecl: FunctionDecl)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-function-decl.html",
    "searchKeys": [
      "visitFunctionDecl",
      "abstract fun visitFunctionDecl(functionDecl: FunctionDecl)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionDecl"
    ]
  },
  {
    "name": "abstract fun visitFunctionLiteral(functionLiteral: AnonymousFunction)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-function-literal.html",
    "searchKeys": [
      "visitFunctionLiteral",
      "abstract fun visitFunctionLiteral(functionLiteral: AnonymousFunction)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionLiteral"
    ]
  },
  {
    "name": "abstract fun visitFunctionParameterExpr(functionParameterExpr: FunctionParameterExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-function-parameter-expr.html",
    "searchKeys": [
      "visitFunctionParameterExpr",
      "abstract fun visitFunctionParameterExpr(functionParameterExpr: FunctionParameterExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitFunctionParameterExpr"
    ]
  },
  {
    "name": "abstract fun visitIdentifier(identifier: Identifier)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIdentifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-identifier.html",
    "searchKeys": [
      "visitIdentifier",
      "abstract fun visitIdentifier(identifier: Identifier)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIdentifier"
    ]
  },
  {
    "name": "abstract fun visitIfElseIfBranchStatement(ifElseIfBranchNode: ElseIfBranchStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIfElseIfBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-if-else-if-branch-statement.html",
    "searchKeys": [
      "visitIfElseIfBranchStatement",
      "abstract fun visitIfElseIfBranchStatement(ifElseIfBranchNode: ElseIfBranchStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIfElseIfBranchStatement"
    ]
  },
  {
    "name": "abstract fun visitIfSelectionStatement(ifSelectionStatement: IfSelectionStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIfSelectionStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-if-selection-statement.html",
    "searchKeys": [
      "visitIfSelectionStatement",
      "abstract fun visitIfSelectionStatement(ifSelectionStatement: IfSelectionStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIfSelectionStatement"
    ]
  },
  {
    "name": "abstract fun visitIntegerLiteral(integerLiteral: IntegerLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIntegerLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-integer-literal.html",
    "searchKeys": [
      "visitIntegerLiteral",
      "abstract fun visitIntegerLiteral(integerLiteral: IntegerLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIntegerLiteral"
    ]
  },
  {
    "name": "abstract fun visitIntrinsicCallExpr(intrinsicCallExpr: IntrinsicCallExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIntrinsicCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-intrinsic-call-expr.html",
    "searchKeys": [
      "visitIntrinsicCallExpr",
      "abstract fun visitIntrinsicCallExpr(intrinsicCallExpr: IntrinsicCallExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitIntrinsicCallExpr"
    ]
  },
  {
    "name": "abstract fun visitListLiteral(listLiteral: ListLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitListLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-list-literal.html",
    "searchKeys": [
      "visitListLiteral",
      "abstract fun visitListLiteral(listLiteral: ListLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitListLiteral"
    ]
  },
  {
    "name": "abstract fun visitMapLiteral(mapLiteral: MapLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitMapLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-map-literal.html",
    "searchKeys": [
      "visitMapLiteral",
      "abstract fun visitMapLiteral(mapLiteral: MapLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitMapLiteral"
    ]
  },
  {
    "name": "abstract fun visitMemberAccessExpr(memberAccessExpr: MemberAccessExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitMemberAccessExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-member-access-expr.html",
    "searchKeys": [
      "visitMemberAccessExpr",
      "abstract fun visitMemberAccessExpr(memberAccessExpr: MemberAccessExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitMemberAccessExpr"
    ]
  },
  {
    "name": "abstract fun visitModuleDecl(moduleDecl: ModuleDecl)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitModuleDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-module-decl.html",
    "searchKeys": [
      "visitModuleDecl",
      "abstract fun visitModuleDecl(moduleDecl: ModuleDecl)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitModuleDecl"
    ]
  },
  {
    "name": "abstract fun visitNoExpr(noExpr: NoExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitNoExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-no-expr.html",
    "searchKeys": [
      "visitNoExpr",
      "abstract fun visitNoExpr(noExpr: NoExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitNoExpr"
    ]
  },
  {
    "name": "abstract fun visitNullLiteral(nullLiteral: NullLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitNullLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-null-literal.html",
    "searchKeys": [
      "visitNullLiteral",
      "abstract fun visitNullLiteral(nullLiteral: NullLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitNullLiteral"
    ]
  },
  {
    "name": "abstract fun visitObjectDecl(objectDecl: ObjectDecl)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitObjectDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-object-decl.html",
    "searchKeys": [
      "visitObjectDecl",
      "abstract fun visitObjectDecl(objectDecl: ObjectDecl)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitObjectDecl"
    ]
  },
  {
    "name": "abstract fun visitRangeExpr(rangeExpr: RangeExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitRangeExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-range-expr.html",
    "searchKeys": [
      "visitRangeExpr",
      "abstract fun visitRangeExpr(rangeExpr: RangeExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitRangeExpr"
    ]
  },
  {
    "name": "abstract fun visitReturnStatement(returnStatement: ReturnStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitReturnStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-return-statement.html",
    "searchKeys": [
      "visitReturnStatement",
      "abstract fun visitReturnStatement(returnStatement: ReturnStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitReturnStatement"
    ]
  },
  {
    "name": "abstract fun visitStatement(statement: Statement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-statement.html",
    "searchKeys": [
      "visitStatement",
      "abstract fun visitStatement(statement: Statement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitStatement"
    ]
  },
  {
    "name": "abstract fun visitStringLiteral(stringLiteral: StringLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitStringLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-string-literal.html",
    "searchKeys": [
      "visitStringLiteral",
      "abstract fun visitStringLiteral(stringLiteral: StringLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitStringLiteral"
    ]
  },
  {
    "name": "abstract fun visitTypeCastExpr(typeCastExpr: TypeCastExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitTypeCastExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-type-cast-expr.html",
    "searchKeys": [
      "visitTypeCastExpr",
      "abstract fun visitTypeCastExpr(typeCastExpr: TypeCastExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitTypeCastExpr"
    ]
  },
  {
    "name": "abstract fun visitTypeCheckExpr(typeCheckExpr: TypeCheckExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitTypeCheckExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-type-check-expr.html",
    "searchKeys": [
      "visitTypeCheckExpr",
      "abstract fun visitTypeCheckExpr(typeCheckExpr: TypeCheckExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitTypeCheckExpr"
    ]
  },
  {
    "name": "abstract fun visitTypeSpecifier(typeSpecifier: TypeSpecifier)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitTypeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-type-specifier.html",
    "searchKeys": [
      "visitTypeSpecifier",
      "abstract fun visitTypeSpecifier(typeSpecifier: TypeSpecifier)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitTypeSpecifier"
    ]
  },
  {
    "name": "abstract fun visitUnaryExpr(unaryExpr: UnaryExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitUnaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-unary-expr.html",
    "searchKeys": [
      "visitUnaryExpr",
      "abstract fun visitUnaryExpr(unaryExpr: UnaryExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitUnaryExpr"
    ]
  },
  {
    "name": "abstract fun visitUseStatement(useStatement: UseStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitUseStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-use-statement.html",
    "searchKeys": [
      "visitUseStatement",
      "abstract fun visitUseStatement(useStatement: UseStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitUseStatement"
    ]
  },
  {
    "name": "abstract fun visitVariableDecl(variableDecl: VariableDecl)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitVariableDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-variable-decl.html",
    "searchKeys": [
      "visitVariableDecl",
      "abstract fun visitVariableDecl(variableDecl: VariableDecl)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitVariableDecl"
    ]
  },
  {
    "name": "abstract fun visitWhileIterationStatement(whileIterationStatement: WhileIterationStatement)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-while-iteration-statement.html",
    "searchKeys": [
      "visitWhileIterationStatement",
      "abstract fun visitWhileIterationStatement(whileIterationStatement: WhileIterationStatement)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitWhileIterationStatement"
    ]
  },
  {
    "name": "abstract fun visitWithExpr(withExpr: WithExpr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitWithExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-with-expr.html",
    "searchKeys": [
      "visitWithExpr",
      "abstract fun visitWithExpr(withExpr: WithExpr)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitWithExpr"
    ]
  },
  {
    "name": "abstract fun visitWithExprMember(withExprMember: WithExprMember)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitWithExprMember",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/visit-with-expr-member.html",
    "searchKeys": [
      "visitWithExprMember",
      "abstract fun visitWithExprMember(withExprMember: WithExprMember)",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.visitWithExprMember"
    ]
  },
  {
    "name": "class ArgsParser(args: Array<String>)",
    "description": "net.exoad.kira.cli.ArgsParser",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/index.html",
    "searchKeys": [
      "ArgsParser",
      "class ArgsParser(args: Array<String>)",
      "net.exoad.kira.cli.ArgsParser"
    ]
  },
  {
    "name": "class BinaryExpr(val leftExpr: Expr, val rightExpr: Expr, val operator: BinaryOp) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/index.html",
    "searchKeys": [
      "BinaryExpr",
      "class BinaryExpr(val leftExpr: Expr, val rightExpr: Expr, val operator: BinaryOp) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr"
    ]
  },
  {
    "name": "class CharacterBuffer(content: String)",
    "description": "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-character-buffer/index.html",
    "searchKeys": [
      "CharacterBuffer",
      "class CharacterBuffer(content: String)",
      "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer"
    ]
  },
  {
    "name": "class CompilationUnit",
    "description": "net.exoad.kira.compiler.CompilationUnit",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/index.html",
    "searchKeys": [
      "CompilationUnit",
      "class CompilationUnit",
      "net.exoad.kira.compiler.CompilationUnit"
    ]
  },
  {
    "name": "class CompoundAssignmentExpr(val left: Expr, val operator: BinaryOp, val right: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/index.html",
    "searchKeys": [
      "CompoundAssignmentExpr",
      "class CompoundAssignmentExpr(val left: Expr, val operator: BinaryOp, val right: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr"
    ]
  },
  {
    "name": "class DoWhileIterationStatement(val condition: Expr, val statements: List<Statement>) : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-do-while-iteration-statement/index.html",
    "searchKeys": [
      "DoWhileIterationStatement",
      "class DoWhileIterationStatement(val condition: Expr, val statements: List<Statement>) : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement"
    ]
  },
  {
    "name": "class ElseBranchStatement(val statements: List<Statement>) : IfElseBranchStatementNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-branch-statement/index.html",
    "searchKeys": [
      "ElseBranchStatement",
      "class ElseBranchStatement(val statements: List<Statement>) : IfElseBranchStatementNode",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement"
    ]
  },
  {
    "name": "class ElseIfBranchStatement(val condition: Expr, val statements: List<Statement>) : IfElseBranchStatementNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-if-branch-statement/index.html",
    "searchKeys": [
      "ElseIfBranchStatement",
      "class ElseIfBranchStatement(val condition: Expr, val statements: List<Statement>) : IfElseBranchStatementNode",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement"
    ]
  },
  {
    "name": "class EnumDecl(val name: Identifier, val members: Array<EnumMemberExpr>, val modifiers: List<Modifiers> = emptyList()) : Decl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/index.html",
    "searchKeys": [
      "EnumDecl",
      "class EnumDecl(val name: Identifier, val members: Array<EnumMemberExpr>, val modifiers: List<Modifiers> = emptyList()) : Decl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl"
    ]
  },
  {
    "name": "class ForIterationStatement(val forIterationExpr: ForIterationExpr, val body: List<Statement>) : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-for-iteration-statement/index.html",
    "searchKeys": [
      "ForIterationStatement",
      "class ForIterationStatement(val forIterationExpr: ForIterationExpr, val body: List<Statement>) : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement"
    ]
  },
  {
    "name": "class KiraLexer(context: SourceContext)",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/index.html",
    "searchKeys": [
      "KiraLexer",
      "class KiraLexer(context: SourceContext)",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer"
    ]
  },
  {
    "name": "class KiraParser(context: SourceContext)",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/index.html",
    "searchKeys": [
      "KiraParser",
      "class KiraParser(context: SourceContext)",
      "net.exoad.kira.compiler.frontend.parser.KiraParser"
    ]
  },
  {
    "name": "class KiraPreprocessor(rawContent: String)",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.KiraPreprocessor",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-kira-preprocessor/index.html",
    "searchKeys": [
      "KiraPreprocessor",
      "class KiraPreprocessor(rawContent: String)",
      "net.exoad.kira.compiler.frontend.preprocessor.KiraPreprocessor"
    ]
  },
  {
    "name": "class KiraRuntimeException(val message: String, val cause: Throwable? = null) : RuntimeException",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-runtime-exception/index.html",
    "searchKeys": [
      "KiraRuntimeException",
      "class KiraRuntimeException(val message: String, val cause: Throwable? = null) : RuntimeException",
      "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException"
    ]
  },
  {
    "name": "class KiraSemanticAnalyzer(compilationUnit: CompilationUnit) : ASTVisitor",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/index.html",
    "searchKeys": [
      "KiraSemanticAnalyzer",
      "class KiraSemanticAnalyzer(compilationUnit: CompilationUnit) : ASTVisitor",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer"
    ]
  },
  {
    "name": "class KiraVisualViewer(context: SourceContext) : JFrame",
    "description": "net.exoad.kira.ui.KiraVisualViewer",
    "location": "kira_lang/net.exoad.kira.ui/-kira-visual-viewer/index.html",
    "searchKeys": [
      "KiraVisualViewer",
      "class KiraVisualViewer(context: SourceContext) : JFrame",
      "net.exoad.kira.ui.KiraVisualViewer"
    ]
  },
  {
    "name": "class LinkedSymbols(val type: Token.Type, symbols: Array<Symbols>, val pointerPosition: Int, val canonicalLocation: FileLocation) : Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.LinkedSymbols",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-linked-symbols/index.html",
    "searchKeys": [
      "LinkedSymbols",
      "class LinkedSymbols(val type: Token.Type, symbols: Array<Symbols>, val pointerPosition: Int, val canonicalLocation: FileLocation) : Token",
      "net.exoad.kira.compiler.frontend.lexer.Token.LinkedSymbols"
    ]
  },
  {
    "name": "class ModuleDecl(val uri: StringLiteral) : Decl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-module-decl/index.html",
    "searchKeys": [
      "ModuleDecl",
      "class ModuleDecl(val uri: StringLiteral) : Decl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl"
    ]
  },
  {
    "name": "class Raw(val type: Token.Type, rawString: String, val pointerPosition: Int, val canonicalLocation: FileLocation) : Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Raw",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-raw/index.html",
    "searchKeys": [
      "Raw",
      "class Raw(val type: Token.Type, rawString: String, val pointerPosition: Int, val canonicalLocation: FileLocation) : Token",
      "net.exoad.kira.compiler.frontend.lexer.Token.Raw"
    ]
  },
  {
    "name": "class RootASTNode(val statements: List<ASTNode>) : ASTNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-root-a-s-t-node/index.html",
    "searchKeys": [
      "RootASTNode",
      "class RootASTNode(val statements: List<ASTNode>) : ASTNode",
      "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode"
    ]
  },
  {
    "name": "class SourceContext(val content: String, val file: String, val tokens: List<Token>)",
    "description": "net.exoad.kira.source.SourceContext",
    "location": "kira_lang/net.exoad.kira.source/-source-context/index.html",
    "searchKeys": [
      "SourceContext",
      "class SourceContext(val content: String, val file: String, val tokens: List<Token>)",
      "net.exoad.kira.source.SourceContext"
    ]
  },
  {
    "name": "class Symbol(val type: Token.Type, symbol: Symbols, val pointerPosition: Int, val canonicalLocation: FileLocation) : Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Symbol",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-symbol/index.html",
    "searchKeys": [
      "Symbol",
      "class Symbol(val type: Token.Type, symbol: Symbols, val pointerPosition: Int, val canonicalLocation: FileLocation) : Token",
      "net.exoad.kira.compiler.frontend.lexer.Token.Symbol"
    ]
  },
  {
    "name": "class SymbolTable",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/index.html",
    "searchKeys": [
      "SymbolTable",
      "class SymbolTable",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable"
    ]
  },
  {
    "name": "class TokenBuffer(tokens: List<Token>, windowSize: Int = 16)",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/index.html",
    "searchKeys": [
      "TokenBuffer",
      "class TokenBuffer(tokens: List<Token>, windowSize: Int = 16)",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer"
    ]
  },
  {
    "name": "class TypeCastExpr(val value: Expr, val type: TypeSpecifier) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-cast-expr/index.html",
    "searchKeys": [
      "TypeCastExpr",
      "class TypeCastExpr(val value: Expr, val type: TypeSpecifier) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr"
    ]
  },
  {
    "name": "class TypeCheckExpr(val value: Expr, val type: TypeSpecifier) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-check-expr/index.html",
    "searchKeys": [
      "TypeCheckExpr",
      "class TypeCheckExpr(val value: Expr, val type: TypeSpecifier) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr"
    ]
  },
  {
    "name": "class UnaryExpr(val operator: UnaryOp, val operand: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-unary-expr/index.html",
    "searchKeys": [
      "UnaryExpr",
      "class UnaryExpr(val operator: UnaryOp, val operand: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr"
    ]
  },
  {
    "name": "class WhileIterationStatement(val condition: Expr, val statements: List<Statement>) : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-while-iteration-statement/index.html",
    "searchKeys": [
      "WhileIterationStatement",
      "class WhileIterationStatement(val condition: Expr, val statements: List<Statement>) : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement"
    ]
  },
  {
    "name": "const val NOT_REPRESENTABLE: String",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsSymbols.NOT_REPRESENTABLE",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-symbols/-n-o-t_-r-e-p-r-e-s-e-n-t-a-b-l-e.html",
    "searchKeys": [
      "NOT_REPRESENTABLE",
      "const val NOT_REPRESENTABLE: String",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsSymbols.NOT_REPRESENTABLE"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.CompilationUnit.CompilationUnit",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/-compilation-unit.html",
    "searchKeys": [
      "CompilationUnit",
      "constructor()",
      "net.exoad.kira.compiler.CompilationUnit.CompilationUnit"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.SymbolTable",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/-symbol-table.html",
    "searchKeys": [
      "SymbolTable",
      "constructor()",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.SymbolTable"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTNode.ASTNode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-node/-a-s-t-node.html",
    "searchKeys": [
      "ASTNode",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTNode.ASTNode"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.ASTVisitor",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-a-s-t-visitor/-a-s-t-visitor.html",
    "searchKeys": [
      "ASTVisitor",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.ASTVisitor.ASTVisitor"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.AnonymousIdentifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-identifier/-anonymous-identifier.html",
    "searchKeys": [
      "AnonymousIdentifier",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.AnonymousIdentifier"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Literal.Literal",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-literal/-literal.html",
    "searchKeys": [
      "Literal",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Literal.Literal"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.Expr.Expr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-expr/-expr.html",
    "searchKeys": [
      "Expr",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.Expr.Expr"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationTargetExpr.ForIterationTargetExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-target-expr/-for-iteration-target-expr.html",
    "searchKeys": [
      "ForIterationTargetExpr",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationTargetExpr.ForIterationTargetExpr"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement.BreakStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-break-statement/-break-statement.html",
    "searchKeys": [
      "BreakStatement",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement.BreakStatement"
    ]
  },
  {
    "name": "constructor()",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement.ContinueStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-continue-statement/-continue-statement.html",
    "searchKeys": [
      "ContinueStatement",
      "constructor()",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement.ContinueStatement"
    ]
  },
  {
    "name": "constructor(args: Array<String>)",
    "description": "net.exoad.kira.cli.ArgsParser.ArgsParser",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/-args-parser.html",
    "searchKeys": [
      "ArgsParser",
      "constructor(args: Array<String>)",
      "net.exoad.kira.cli.ArgsParser.ArgsParser"
    ]
  },
  {
    "name": "constructor(begin: Expr, end: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.RangeExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-range-expr/-range-expr.html",
    "searchKeys": [
      "RangeExpr",
      "constructor(begin: Expr, end: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.RangeExpr"
    ]
  },
  {
    "name": "constructor(compilationUnit: CompilationUnit)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.KiraSemanticAnalyzer",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/-kira-semantic-analyzer.html",
    "searchKeys": [
      "KiraSemanticAnalyzer",
      "constructor(compilationUnit: CompilationUnit)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.KiraSemanticAnalyzer"
    ]
  },
  {
    "name": "constructor(condition: Expr, statements: List<Statement>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.DoWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-do-while-iteration-statement/-do-while-iteration-statement.html",
    "searchKeys": [
      "DoWhileIterationStatement",
      "constructor(condition: Expr, statements: List<Statement>)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.DoWhileIterationStatement"
    ]
  },
  {
    "name": "constructor(condition: Expr, statements: List<Statement>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.ElseIfBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-if-branch-statement/-else-if-branch-statement.html",
    "searchKeys": [
      "ElseIfBranchStatement",
      "constructor(condition: Expr, statements: List<Statement>)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.ElseIfBranchStatement"
    ]
  },
  {
    "name": "constructor(condition: Expr, statements: List<Statement>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.WhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-while-iteration-statement/-while-iteration-statement.html",
    "searchKeys": [
      "WhileIterationStatement",
      "constructor(condition: Expr, statements: List<Statement>)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.WhileIterationStatement"
    ]
  },
  {
    "name": "constructor(condition: Expr, thenStatements: List<Statement>, elseBranches: List<IfElseBranchStatementNode> = emptyList())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.IfSelectionStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-selection-statement/-if-selection-statement.html",
    "searchKeys": [
      "IfSelectionStatement",
      "constructor(condition: Expr, thenStatements: List<Statement>, elseBranches: List<IfElseBranchStatementNode> = emptyList())",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.IfSelectionStatement"
    ]
  },
  {
    "name": "constructor(content: String)",
    "description": "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.CharacterBuffer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-character-buffer/-character-buffer.html",
    "searchKeys": [
      "CharacterBuffer",
      "constructor(content: String)",
      "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.CharacterBuffer"
    ]
  },
  {
    "name": "constructor(content: String, file: String, tokens: List<Token>)",
    "description": "net.exoad.kira.source.SourceContext.SourceContext",
    "location": "kira_lang/net.exoad.kira.source/-source-context/-source-context.html",
    "searchKeys": [
      "SourceContext",
      "constructor(content: String, file: String, tokens: List<Token>)",
      "net.exoad.kira.source.SourceContext.SourceContext"
    ]
  },
  {
    "name": "constructor(context: SourceContext)",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.KiraLexer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/-kira-lexer.html",
    "searchKeys": [
      "KiraLexer",
      "constructor(context: SourceContext)",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.KiraLexer"
    ]
  },
  {
    "name": "constructor(context: SourceContext)",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.KiraParser",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/-kira-parser.html",
    "searchKeys": [
      "KiraParser",
      "constructor(context: SourceContext)",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.KiraParser"
    ]
  },
  {
    "name": "constructor(context: SourceContext)",
    "description": "net.exoad.kira.ui.KiraVisualViewer.KiraVisualViewer",
    "location": "kira_lang/net.exoad.kira.ui/-kira-visual-viewer/-kira-visual-viewer.html",
    "searchKeys": [
      "KiraVisualViewer",
      "constructor(context: SourceContext)",
      "net.exoad.kira.ui.KiraVisualViewer.KiraVisualViewer"
    ]
  },
  {
    "name": "constructor(diagnostics: List<DiagnosticsException>, symbolTable: SymbolTable, isHealthy: Boolean)",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.SemanticAnalyzerResults",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-analyzer-results/-semantic-analyzer-results.html",
    "searchKeys": [
      "SemanticAnalyzerResults",
      "constructor(diagnostics: List<DiagnosticsException>, symbolTable: SymbolTable, isHealthy: Boolean)",
      "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.SemanticAnalyzerResults"
    ]
  },
  {
    "name": "constructor(expr: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.ReturnStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-return-statement/-return-statement.html",
    "searchKeys": [
      "ReturnStatement",
      "constructor(expr: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.ReturnStatement"
    ]
  },
  {
    "name": "constructor(expr: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.Statement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-statement/-statement.html",
    "searchKeys": [
      "Statement",
      "constructor(expr: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.Statement"
    ]
  },
  {
    "name": "constructor(forIterationExpr: ForIterationExpr, body: List<Statement>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.ForIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-for-iteration-statement/-for-iteration-statement.html",
    "searchKeys": [
      "ForIterationStatement",
      "constructor(forIterationExpr: ForIterationExpr, body: List<Statement>)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.ForIterationStatement"
    ]
  },
  {
    "name": "constructor(initializer: Identifier, target: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.ForIterationExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-expr/-for-iteration-expr.html",
    "searchKeys": [
      "ForIterationExpr",
      "constructor(initializer: Identifier, target: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.ForIterationExpr"
    ]
  },
  {
    "name": "constructor(intrinsicKey: Builtin.Intrinsics, absoluteFileLocation: AbsoluteFileLocation)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic.Intrinsic",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-intrinsic/-intrinsic.html",
    "searchKeys": [
      "Intrinsic",
      "constructor(intrinsicKey: Builtin.Intrinsics, absoluteFileLocation: AbsoluteFileLocation)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic.Intrinsic"
    ]
  },
  {
    "name": "constructor(left: Expr, operator: BinaryOp, right: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.CompoundAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/-compound-assignment-expr.html",
    "searchKeys": [
      "CompoundAssignmentExpr",
      "constructor(left: Expr, operator: BinaryOp, right: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.CompoundAssignmentExpr"
    ]
  },
  {
    "name": "constructor(leftExpr: Expr, rightExpr: Expr, operator: BinaryOp)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.BinaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/-binary-expr.html",
    "searchKeys": [
      "BinaryExpr",
      "constructor(leftExpr: Expr, rightExpr: Expr, operator: BinaryOp)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.BinaryExpr"
    ]
  },
  {
    "name": "constructor(lineNumber: Int, column: Int)",
    "description": "net.exoad.kira.source.FileLocation.FileLocation",
    "location": "kira_lang/net.exoad.kira.source/-file-location/-file-location.html",
    "searchKeys": [
      "FileLocation",
      "constructor(lineNumber: Int, column: Int)",
      "net.exoad.kira.source.FileLocation.FileLocation"
    ]
  },
  {
    "name": "constructor(lineNumber: Int, column: Int, srcFile: String)",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.AbsoluteFileLocation",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/-absolute-file-location.html",
    "searchKeys": [
      "AbsoluteFileLocation",
      "constructor(lineNumber: Int, column: Int, srcFile: String)",
      "net.exoad.kira.source.AbsoluteFileLocation.AbsoluteFileLocation"
    ]
  },
  {
    "name": "constructor(members: List<WithExprMember>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.WithExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr/-with-expr.html",
    "searchKeys": [
      "WithExpr",
      "constructor(members: List<WithExprMember>)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.WithExpr"
    ]
  },
  {
    "name": "constructor(message: String, cause: Throwable? = null)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException.KiraRuntimeException",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-runtime-exception/-kira-runtime-exception.html",
    "searchKeys": [
      "KiraRuntimeException",
      "constructor(message: String, cause: Throwable? = null)",
      "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException.KiraRuntimeException"
    ]
  },
  {
    "name": "constructor(name: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.Decl.Decl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-decl/-decl.html",
    "searchKeys": [
      "Decl",
      "constructor(name: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.Decl.Decl"
    ]
  },
  {
    "name": "constructor(name: Identifier, members: Array<EnumMemberExpr>, modifiers: List<Modifiers> = emptyList())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.EnumDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/-enum-decl.html",
    "searchKeys": [
      "EnumDecl",
      "constructor(name: Identifier, members: Array<EnumMemberExpr>, modifiers: List<Modifiers> = emptyList())",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.EnumDecl"
    ]
  },
  {
    "name": "constructor(name: Identifier, modifiers: List<Modifiers> = emptyList(), members: List<Decl> = emptyList())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.ObjectDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/-object-decl.html",
    "searchKeys": [
      "ObjectDecl",
      "constructor(name: Identifier, modifiers: List<Modifiers> = emptyList(), members: List<Decl> = emptyList())",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.ObjectDecl"
    ]
  },
  {
    "name": "constructor(name: Identifier, modifiers: List<Modifiers>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.FirstClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-first-class-decl/-first-class-decl.html",
    "searchKeys": [
      "FirstClassDecl",
      "constructor(name: Identifier, modifiers: List<Modifiers>)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.FirstClassDecl"
    ]
  },
  {
    "name": "constructor(name: Identifier, positionalParameters: List<FunctionCallPositionalParameterExpr>, namedParameters: List<FunctionCallNamedParameterExpr>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.FunctionCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/-function-call-expr.html",
    "searchKeys": [
      "FunctionCallExpr",
      "constructor(name: Identifier, positionalParameters: List<FunctionCallPositionalParameterExpr>, namedParameters: List<FunctionCallNamedParameterExpr>)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.FunctionCallExpr"
    ]
  },
  {
    "name": "constructor(name: Identifier, typeSpecifier: TypeSpecifier, modifiers: List<Modifiers> = emptyList())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.FunctionParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/-function-parameter-expr.html",
    "searchKeys": [
      "FunctionParameterExpr",
      "constructor(name: Identifier, typeSpecifier: TypeSpecifier, modifiers: List<Modifiers> = emptyList())",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.FunctionParameterExpr"
    ]
  },
  {
    "name": "constructor(name: Identifier, typeSpecifier: TypeSpecifier, value: Expr?, modifiers: List<Modifiers> = emptyList())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.VariableDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/-variable-decl.html",
    "searchKeys": [
      "VariableDecl",
      "constructor(name: Identifier, typeSpecifier: TypeSpecifier, value: Expr?, modifiers: List<Modifiers> = emptyList())",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.VariableDecl"
    ]
  },
  {
    "name": "constructor(name: Identifier, value: AnonymousFunction, modifiers: List<Modifiers> = emptyList())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.FunctionDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/-function-decl.html",
    "searchKeys": [
      "FunctionDecl",
      "constructor(name: Identifier, value: AnonymousFunction, modifiers: List<Modifiers> = emptyList())",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.FunctionDecl"
    ]
  },
  {
    "name": "constructor(name: Identifier, value: DataLiteral<*>?)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.EnumMemberExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-enum-member-expr/-enum-member-expr.html",
    "searchKeys": [
      "EnumMemberExpr",
      "constructor(name: Identifier, value: DataLiteral<*>?)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.EnumMemberExpr"
    ]
  },
  {
    "name": "constructor(name: Identifier, value: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.FunctionCallNamedParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-named-parameter-expr/-function-call-named-parameter-expr.html",
    "searchKeys": [
      "FunctionCallNamedParameterExpr",
      "constructor(name: Identifier, value: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.FunctionCallNamedParameterExpr"
    ]
  },
  {
    "name": "constructor(name: Identifier, value: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.WithExprMember",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr-member/-with-expr-member.html",
    "searchKeys": [
      "WithExprMember",
      "constructor(name: Identifier, value: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.WithExprMember"
    ]
  },
  {
    "name": "constructor(name: Intrinsic, parameters: List<Expr>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.IntrinsicCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-intrinsic-call-expr/-intrinsic-call-expr.html",
    "searchKeys": [
      "IntrinsicCallExpr",
      "constructor(name: Intrinsic, parameters: List<Expr>)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.IntrinsicCallExpr"
    ]
  },
  {
    "name": "constructor(name: String)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.Identifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/-identifier.html",
    "searchKeys": [
      "Identifier",
      "constructor(name: String)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.Identifier"
    ]
  },
  {
    "name": "constructor(name: String, childGenericTypeSpecifier: Array<TypeSpecifier> = emptyArray())",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.TypeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-type-specifier/-type-specifier.html",
    "searchKeys": [
      "TypeSpecifier",
      "constructor(name: String, childGenericTypeSpecifier: Array<TypeSpecifier> = emptyArray())",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.TypeSpecifier"
    ]
  },
  {
    "name": "constructor(name: String, kind: SemanticSymbolKind, type: Token.Type, declaredAt: AbsoluteFileLocation)",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.SemanticSymbol",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol/-semantic-symbol.html",
    "searchKeys": [
      "SemanticSymbol",
      "constructor(name: String, kind: SemanticSymbolKind, type: Token.Type, declaredAt: AbsoluteFileLocation)",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.SemanticSymbol"
    ]
  },
  {
    "name": "constructor(name: TypeSpecifier, modifiers: List<Modifiers> = emptyList(), members: List<FirstClassDecl> = emptyList(), parent: TypeSpecifier? = null)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.ClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/-class-decl.html",
    "searchKeys": [
      "ClassDecl",
      "constructor(name: TypeSpecifier, modifiers: List<Modifiers> = emptyList(), members: List<FirstClassDecl> = emptyList(), parent: TypeSpecifier? = null)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.ClassDecl"
    ]
  },
  {
    "name": "constructor(operator: UnaryOp, operand: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.UnaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-unary-expr/-unary-expr.html",
    "searchKeys": [
      "UnaryExpr",
      "constructor(operator: UnaryOp, operand: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.UnaryExpr"
    ]
  },
  {
    "name": "constructor(origin: Expr, member: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.MemberAccessExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-member-access-expr/-member-access-expr.html",
    "searchKeys": [
      "MemberAccessExpr",
      "constructor(origin: Expr, member: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.MemberAccessExpr"
    ]
  },
  {
    "name": "constructor(position: Int)",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBufferCheckpoint.TokenBufferCheckpoint",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer-checkpoint/-token-buffer-checkpoint.html",
    "searchKeys": [
      "TokenBufferCheckpoint",
      "constructor(position: Int)",
      "net.exoad.kira.compiler.frontend.parser.TokenBufferCheckpoint.TokenBufferCheckpoint"
    ]
  },
  {
    "name": "constructor(position: Int, value: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.FunctionCallPositionalParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-positional-parameter-expr/-function-call-positional-parameter-expr.html",
    "searchKeys": [
      "FunctionCallPositionalParameterExpr",
      "constructor(position: Int, value: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.FunctionCallPositionalParameterExpr"
    ]
  },
  {
    "name": "constructor(processedContent: String, lineComments: List<Int>)",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult.PreprocessorResult",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-preprocessor-result/-preprocessor-result.html",
    "searchKeys": [
      "PreprocessorResult",
      "constructor(processedContent: String, lineComments: List<Int>)",
      "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult.PreprocessorResult"
    ]
  },
  {
    "name": "constructor(rawContent: String)",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.KiraPreprocessor.KiraPreprocessor",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-kira-preprocessor/-kira-preprocessor.html",
    "searchKeys": [
      "KiraPreprocessor",
      "constructor(rawContent: String)",
      "net.exoad.kira.compiler.frontend.preprocessor.KiraPreprocessor.KiraPreprocessor"
    ]
  },
  {
    "name": "constructor(returnTypeSpecifier: TypeSpecifier, parameters: List<<Error class: unknown class>>, body: List<Statement>?)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.AnonymousFunction",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/-anonymous-function.html",
    "searchKeys": [
      "AnonymousFunction",
      "constructor(returnTypeSpecifier: TypeSpecifier, parameters: List<<Error class: unknown class>>, body: List<Statement>?)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.AnonymousFunction"
    ]
  },
  {
    "name": "constructor(statements: List<ASTNode>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode.RootASTNode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-root-a-s-t-node/-root-a-s-t-node.html",
    "searchKeys": [
      "RootASTNode",
      "constructor(statements: List<ASTNode>)",
      "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode.RootASTNode"
    ]
  },
  {
    "name": "constructor(statements: List<Statement>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement.ElseBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-branch-statement/-else-branch-statement.html",
    "searchKeys": [
      "ElseBranchStatement",
      "constructor(statements: List<Statement>)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement.ElseBranchStatement"
    ]
  },
  {
    "name": "constructor(tag: String, message: String, cause: Throwable? = null, location: FileLocation? = null, context: SourceContext, selectorLength: Int)",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.DiagnosticsException",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/-diagnostics-exception.html",
    "searchKeys": [
      "DiagnosticsException",
      "constructor(tag: String, message: String, cause: Throwable? = null, location: FileLocation? = null, context: SourceContext, selectorLength: Int)",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.DiagnosticsException"
    ]
  },
  {
    "name": "constructor(target: Identifier, value: Expr)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.AssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-assignment-expr/-assignment-expr.html",
    "searchKeys": [
      "AssignmentExpr",
      "constructor(target: Identifier, value: Expr)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.AssignmentExpr"
    ]
  },
  {
    "name": "constructor(tokens: List<Token>, windowSize: Int = 16)",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.TokenBuffer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/-token-buffer.html",
    "searchKeys": [
      "TokenBuffer",
      "constructor(tokens: List<Token>, windowSize: Int = 16)",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.TokenBuffer"
    ]
  },
  {
    "name": "constructor(type: Token.Type, rawString: String, pointerPosition: Int, canonicalLocation: FileLocation)",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Raw.Raw",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-raw/-raw.html",
    "searchKeys": [
      "Raw",
      "constructor(type: Token.Type, rawString: String, pointerPosition: Int, canonicalLocation: FileLocation)",
      "net.exoad.kira.compiler.frontend.lexer.Token.Raw.Raw"
    ]
  },
  {
    "name": "constructor(type: Token.Type, symbol: Symbols, pointerPosition: Int, canonicalLocation: FileLocation)",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Symbol.Symbol",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-symbol/-symbol.html",
    "searchKeys": [
      "Symbol",
      "constructor(type: Token.Type, symbol: Symbols, pointerPosition: Int, canonicalLocation: FileLocation)",
      "net.exoad.kira.compiler.frontend.lexer.Token.Symbol.Symbol"
    ]
  },
  {
    "name": "constructor(type: Token.Type, symbols: Array<Symbols>, pointerPosition: Int, canonicalLocation: FileLocation)",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.LinkedSymbols.LinkedSymbols",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-linked-symbols/-linked-symbols.html",
    "searchKeys": [
      "LinkedSymbols",
      "constructor(type: Token.Type, symbols: Array<Symbols>, pointerPosition: Int, canonicalLocation: FileLocation)",
      "net.exoad.kira.compiler.frontend.lexer.Token.LinkedSymbols.LinkedSymbols"
    ]
  },
  {
    "name": "constructor(uri: StringLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.ModuleDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-module-decl/-module-decl.html",
    "searchKeys": [
      "ModuleDecl",
      "constructor(uri: StringLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.ModuleDecl"
    ]
  },
  {
    "name": "constructor(uri: StringLiteral)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.UseStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-use-statement/-use-statement.html",
    "searchKeys": [
      "UseStatement",
      "constructor(uri: StringLiteral)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.UseStatement"
    ]
  },
  {
    "name": "constructor(useDiagnostics: Boolean, src: Array<String>, dumpLexerTokens: String?, dumpAST: String?)",
    "description": "net.exoad.kira.cli.ArgumentOptions.ArgumentOptions",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/-argument-options.html",
    "searchKeys": [
      "ArgumentOptions",
      "constructor(useDiagnostics: Boolean, src: Array<String>, dumpLexerTokens: String?, dumpAST: String?)",
      "net.exoad.kira.cli.ArgumentOptions.ArgumentOptions"
    ]
  },
  {
    "name": "constructor(value: Array<Expr>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.ArrayLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-array-literal/-array-literal.html",
    "searchKeys": [
      "ArrayLiteral",
      "constructor(value: Array<Expr>)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.ArrayLiteral"
    ]
  },
  {
    "name": "constructor(value: Boolean)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.BoolLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-bool-literal/-bool-literal.html",
    "searchKeys": [
      "BoolLiteral",
      "constructor(value: Boolean)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.BoolLiteral"
    ]
  },
  {
    "name": "constructor(value: Double)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.FloatLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-float-literal/-float-literal.html",
    "searchKeys": [
      "FloatLiteral",
      "constructor(value: Double)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.FloatLiteral"
    ]
  },
  {
    "name": "constructor(value: Expr, type: TypeSpecifier)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.TypeCastExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-cast-expr/-type-cast-expr.html",
    "searchKeys": [
      "TypeCastExpr",
      "constructor(value: Expr, type: TypeSpecifier)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.TypeCastExpr"
    ]
  },
  {
    "name": "constructor(value: Expr, type: TypeSpecifier)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.TypeCheckExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-check-expr/-type-check-expr.html",
    "searchKeys": [
      "TypeCheckExpr",
      "constructor(value: Expr, type: TypeSpecifier)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.TypeCheckExpr"
    ]
  },
  {
    "name": "constructor(value: List<Expr>)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.ListLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-list-literal/-list-literal.html",
    "searchKeys": [
      "ListLiteral",
      "constructor(value: List<Expr>)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.ListLiteral"
    ]
  },
  {
    "name": "constructor(value: Long)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.IntegerLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-integer-literal/-integer-literal.html",
    "searchKeys": [
      "IntegerLiteral",
      "constructor(value: Long)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.IntegerLiteral"
    ]
  },
  {
    "name": "constructor(value: Map<Expr, Expr>, mutable: Boolean)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.MapLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-map-literal/-map-literal.html",
    "searchKeys": [
      "MapLiteral",
      "constructor(value: Map<Expr, Expr>, mutable: Boolean)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.MapLiteral"
    ]
  },
  {
    "name": "constructor(value: String)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.StringLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-string-literal/-string-literal.html",
    "searchKeys": [
      "StringLiteral",
      "constructor(value: String)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.StringLiteral"
    ]
  },
  {
    "name": "constructor(value: T)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.DataLiteral.DataLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-data-literal/-data-literal.html",
    "searchKeys": [
      "DataLiteral",
      "constructor(value: T)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.DataLiteral.DataLiteral"
    ]
  },
  {
    "name": "data class ArgumentOptions(val useDiagnostics: Boolean, val src: Array<String>, val dumpLexerTokens: String?, val dumpAST: String?)",
    "description": "net.exoad.kira.cli.ArgumentOptions",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/index.html",
    "searchKeys": [
      "ArgumentOptions",
      "data class ArgumentOptions(val useDiagnostics: Boolean, val src: Array<String>, val dumpLexerTokens: String?, val dumpAST: String?)",
      "net.exoad.kira.cli.ArgumentOptions"
    ]
  },
  {
    "name": "data class DiagnosticsException(val tag: String, val message: String, val cause: Throwable? = null, val location: FileLocation? = null, val context: SourceContext, val selectorLength: Int) : RuntimeException",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/index.html",
    "searchKeys": [
      "DiagnosticsException",
      "data class DiagnosticsException(val tag: String, val message: String, val cause: Throwable? = null, val location: FileLocation? = null, val context: SourceContext, val selectorLength: Int) : RuntimeException",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException"
    ]
  },
  {
    "name": "data class FileLocation(val lineNumber: Int, val column: Int)",
    "description": "net.exoad.kira.source.FileLocation",
    "location": "kira_lang/net.exoad.kira.source/-file-location/index.html",
    "searchKeys": [
      "FileLocation",
      "data class FileLocation(val lineNumber: Int, val column: Int)",
      "net.exoad.kira.source.FileLocation"
    ]
  },
  {
    "name": "data class Intrinsic(val intrinsicKey: Builtin.Intrinsics, val absoluteFileLocation: AbsoluteFileLocation)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-intrinsic/index.html",
    "searchKeys": [
      "Intrinsic",
      "data class Intrinsic(val intrinsicKey: Builtin.Intrinsics, val absoluteFileLocation: AbsoluteFileLocation)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic"
    ]
  },
  {
    "name": "data class PreprocessorResult(val processedContent: String, val lineComments: List<Int>)",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-preprocessor-result/index.html",
    "searchKeys": [
      "PreprocessorResult",
      "data class PreprocessorResult(val processedContent: String, val lineComments: List<Int>)",
      "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult"
    ]
  },
  {
    "name": "data class SemanticAnalyzerResults(val diagnostics: List<DiagnosticsException>, val symbolTable: SymbolTable, val isHealthy: Boolean)",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-analyzer-results/index.html",
    "searchKeys": [
      "SemanticAnalyzerResults",
      "data class SemanticAnalyzerResults(val diagnostics: List<DiagnosticsException>, val symbolTable: SymbolTable, val isHealthy: Boolean)",
      "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults"
    ]
  },
  {
    "name": "data class SemanticSymbol(val name: String, val kind: SemanticSymbolKind, val type: Token.Type, val declaredAt: AbsoluteFileLocation)",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol/index.html",
    "searchKeys": [
      "SemanticSymbol",
      "data class SemanticSymbol(val name: String, val kind: SemanticSymbolKind, val type: Token.Type, val declaredAt: AbsoluteFileLocation)",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol"
    ]
  },
  {
    "name": "data class TokenBufferCheckpoint(val position: Int)",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBufferCheckpoint",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer-checkpoint/index.html",
    "searchKeys": [
      "TokenBufferCheckpoint",
      "data class TokenBufferCheckpoint(val position: Int)",
      "net.exoad.kira.compiler.frontend.parser.TokenBufferCheckpoint"
    ]
  },
  {
    "name": "enum BinaryOp : Enum<BinaryOp> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/index.html",
    "searchKeys": [
      "BinaryOp",
      "enum BinaryOp : Enum<BinaryOp> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp"
    ]
  },
  {
    "name": "enum Context : Enum<Modifiers.Context> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/index.html",
    "searchKeys": [
      "Context",
      "enum Context : Enum<Modifiers.Context> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context"
    ]
  },
  {
    "name": "enum Intrinsics : Enum<Builtin.Intrinsics> ",
    "description": "net.exoad.kira.core.Builtin.Intrinsics",
    "location": "kira_lang/net.exoad.kira.core/-builtin/-intrinsics/index.html",
    "searchKeys": [
      "Intrinsics",
      "enum Intrinsics : Enum<Builtin.Intrinsics> ",
      "net.exoad.kira.core.Builtin.Intrinsics"
    ]
  },
  {
    "name": "enum Modifiers : Enum<Modifiers> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/index.html",
    "searchKeys": [
      "Modifiers",
      "enum Modifiers : Enum<Modifiers> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers"
    ]
  },
  {
    "name": "enum OutputTarget : Enum<GeneratedProvider.OutputTarget> ",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/-output-target/index.html",
    "searchKeys": [
      "OutputTarget",
      "enum OutputTarget : Enum<GeneratedProvider.OutputTarget> ",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget"
    ]
  },
  {
    "name": "enum OutputTargets : Enum<OutputTargets> ",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/index.html",
    "searchKeys": [
      "OutputTargets",
      "enum OutputTargets : Enum<OutputTargets> ",
      "net.exoad.kira.compiler.backend.targets.OutputTargets"
    ]
  },
  {
    "name": "enum SemanticScope : Enum<SemanticScope> ",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/index.html",
    "searchKeys": [
      "SemanticScope",
      "enum SemanticScope : Enum<SemanticScope> ",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope"
    ]
  },
  {
    "name": "enum SemanticSymbolKind : Enum<SemanticSymbolKind> ",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/index.html",
    "searchKeys": [
      "SemanticSymbolKind",
      "enum SemanticSymbolKind : Enum<SemanticSymbolKind> ",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind"
    ]
  },
  {
    "name": "enum Symbols : Enum<Symbols> ",
    "description": "net.exoad.kira.core.Symbols",
    "location": "kira_lang/net.exoad.kira.core/-symbols/index.html",
    "searchKeys": [
      "Symbols",
      "enum Symbols : Enum<Symbols> ",
      "net.exoad.kira.core.Symbols"
    ]
  },
  {
    "name": "enum Type : Enum<Token.Type> ",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/index.html",
    "searchKeys": [
      "Type",
      "enum Type : Enum<Token.Type> ",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type"
    ]
  },
  {
    "name": "enum UnaryOp : Enum<UnaryOp> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/index.html",
    "searchKeys": [
      "UnaryOp",
      "enum UnaryOp : Enum<UnaryOp> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp"
    ]
  },
  {
    "name": "fun <K, V> Map<K, V>.reversed(): HashMap<V, K>",
    "description": "net.exoad.kira.core.reversed",
    "location": "kira_lang/net.exoad.kira.core/reversed.html",
    "searchKeys": [
      "reversed",
      "fun <K, V> Map<K, V>.reversed(): HashMap<V, K>",
      "net.exoad.kira.core.reversed"
    ]
  },
  {
    "name": "fun <T : ASTNode> putOrigin(node: T, location: FileLocation = peek().canonicalLocation): T",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.putOrigin",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/put-origin.html",
    "searchKeys": [
      "putOrigin",
      "fun <T : ASTNode> putOrigin(node: T, location: FileLocation = peek().canonicalLocation): T",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.putOrigin"
    ]
  },
  {
    "name": "fun <T : ASTNode> relativeOriginOf(node: T): FileLocation",
    "description": "net.exoad.kira.source.SourceContext.relativeOriginOf",
    "location": "kira_lang/net.exoad.kira.source/-source-context/relative-origin-of.html",
    "searchKeys": [
      "relativeOriginOf",
      "fun <T : ASTNode> relativeOriginOf(node: T): FileLocation",
      "net.exoad.kira.source.SourceContext.relativeOriginOf"
    ]
  },
  {
    "name": "fun Char.isHexChar(): Boolean",
    "description": "net.exoad.kira.core.isHexChar",
    "location": "kira_lang/net.exoad.kira.core/is-hex-char.html",
    "searchKeys": [
      "isHexChar",
      "fun Char.isHexChar(): Boolean",
      "net.exoad.kira.core.isHexChar"
    ]
  },
  {
    "name": "fun String.isNotRepresentableDiagnosticsSymbol(): Boolean",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.isNotRepresentableDiagnosticsSymbol",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/is-not-representable-diagnostics-symbol.html",
    "searchKeys": [
      "isNotRepresentableDiagnosticsSymbol",
      "fun String.isNotRepresentableDiagnosticsSymbol(): Boolean",
      "net.exoad.kira.compiler.analysis.diagnostics.isNotRepresentableDiagnosticsSymbol"
    ]
  },
  {
    "name": "fun addSource(file: String, content: String, tokens: List<Token>): SourceContext",
    "description": "net.exoad.kira.compiler.CompilationUnit.addSource",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/add-source.html",
    "searchKeys": [
      "addSource",
      "fun addSource(file: String, content: String, tokens: List<Token>): SourceContext",
      "net.exoad.kira.compiler.CompilationUnit.addSource"
    ]
  },
  {
    "name": "fun advance(): Char",
    "description": "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.advance",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-character-buffer/advance.html",
    "searchKeys": [
      "advance",
      "fun advance(): Char",
      "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.advance"
    ]
  },
  {
    "name": "fun advance(): Token",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.advance",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/advance.html",
    "searchKeys": [
      "advance",
      "fun advance(): Token",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.advance"
    ]
  },
  {
    "name": "fun advance(count: Int): Token",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.advance",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/advance.html",
    "searchKeys": [
      "advance",
      "fun advance(count: Int): Token",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.advance"
    ]
  },
  {
    "name": "fun advancePointer()",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.advancePointer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/advance-pointer.html",
    "searchKeys": [
      "advancePointer",
      "fun advancePointer()",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.advancePointer"
    ]
  },
  {
    "name": "fun allBuiltinTypes(): Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.allBuiltinTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/all-builtin-types.html",
    "searchKeys": [
      "allBuiltinTypes",
      "fun allBuiltinTypes(): Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.allBuiltinTypes"
    ]
  },
  {
    "name": "fun allSources(): Collection<SourceContext>",
    "description": "net.exoad.kira.compiler.CompilationUnit.allSources",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/all-sources.html",
    "searchKeys": [
      "allSources",
      "fun allSources(): Collection<SourceContext>",
      "net.exoad.kira.compiler.CompilationUnit.allSources"
    ]
  },
  {
    "name": "fun bakedIn(): AbsoluteFileLocation",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.Companion.bakedIn",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/-companion/baked-in.html",
    "searchKeys": [
      "bakedIn",
      "fun bakedIn(): AbsoluteFileLocation",
      "net.exoad.kira.source.AbsoluteFileLocation.Companion.bakedIn"
    ]
  },
  {
    "name": "fun build(node: ASTNode): String",
    "description": "net.exoad.kira.utils.XMLASTVisitor.build",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/build.html",
    "searchKeys": [
      "build",
      "fun build(node: ASTNode): String",
      "net.exoad.kira.utils.XMLASTVisitor.build"
    ]
  },
  {
    "name": "fun byTokenTypeMaybe(tokenType: Array<Token.Type>, onBad: () -> Unit? = null): BinaryOp?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.Companion.byTokenTypeMaybe",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-companion/by-token-type-maybe.html",
    "searchKeys": [
      "byTokenTypeMaybe",
      "fun byTokenTypeMaybe(tokenType: Array<Token.Type>, onBad: () -> Unit? = null): BinaryOp?",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.Companion.byTokenTypeMaybe"
    ]
  },
  {
    "name": "fun byTokenTypeMaybe(tokenType: Token.Type, onBad: () -> Unit? = null): Modifiers?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Companion.byTokenTypeMaybe",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-companion/by-token-type-maybe.html",
    "searchKeys": [
      "byTokenTypeMaybe",
      "fun byTokenTypeMaybe(tokenType: Token.Type, onBad: () -> Unit? = null): Modifiers?",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Companion.byTokenTypeMaybe"
    ]
  },
  {
    "name": "fun byTokenTypeMaybe(tokenType: Token.Type, onBad: () -> Unit? = null): UnaryOp?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.Companion.byTokenTypeMaybe",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/-companion/by-token-type-maybe.html",
    "searchKeys": [
      "byTokenTypeMaybe",
      "fun byTokenTypeMaybe(tokenType: Token.Type, onBad: () -> Unit? = null): UnaryOp?",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.Companion.byTokenTypeMaybe"
    ]
  },
  {
    "name": "fun clean()",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.clean",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/clean.html",
    "searchKeys": [
      "clean",
      "fun clean()",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.clean"
    ]
  },
  {
    "name": "fun containsInCurrentScope(identifier: String): Boolean",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.containsInCurrentScope",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/contains-in-current-scope.html",
    "searchKeys": [
      "containsInCurrentScope",
      "fun containsInCurrentScope(identifier: String): Boolean",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.containsInCurrentScope"
    ]
  },
  {
    "name": "fun createCheckpoint(): TokenBufferCheckpoint",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.createCheckpoint",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/create-checkpoint.html",
    "searchKeys": [
      "createCheckpoint",
      "fun createCheckpoint(): TokenBufferCheckpoint",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.createCheckpoint"
    ]
  },
  {
    "name": "fun current(): Token",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.current",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/current.html",
    "searchKeys": [
      "current",
      "fun current(): Token",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.current"
    ]
  },
  {
    "name": "fun declare(identifier: String, symbol: SemanticSymbol): Boolean",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.declare",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/declare.html",
    "searchKeys": [
      "declare",
      "fun declare(identifier: String, symbol: SemanticSymbol): Boolean",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.declare"
    ]
  },
  {
    "name": "fun declareGlobal(identifier: String, symbol: SemanticSymbol): Boolean",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.declareGlobal",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/declare-global.html",
    "searchKeys": [
      "declareGlobal",
      "fun declareGlobal(identifier: String, symbol: SemanticSymbol): Boolean",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.declareGlobal"
    ]
  },
  {
    "name": "fun diagnosticsName(): String",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.diagnosticsName",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/diagnostics-name.html",
    "searchKeys": [
      "diagnosticsName",
      "fun diagnosticsName(): String",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.diagnosticsName"
    ]
  },
  {
    "name": "fun enter(kind: SemanticScope)",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.enter",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/enter.html",
    "searchKeys": [
      "enter",
      "fun enter(kind: SemanticScope)",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.enter"
    ]
  },
  {
    "name": "fun exit()",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.exit",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/exit.html",
    "searchKeys": [
      "exit",
      "fun exit()",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.exit"
    ]
  },
  {
    "name": "fun expectDeclared(symbolName: String, location: FileLocation?, helpMessage: String = \"'\")",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectDeclared",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/expect-declared.html",
    "searchKeys": [
      "expectDeclared",
      "fun expectDeclared(symbolName: String, location: FileLocation?, helpMessage: String = \"'\")",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectDeclared"
    ]
  },
  {
    "name": "fun expectNotDeclared(symbolName: String, location: FileLocation?, helpMessage: String = \"Shadowing is not allowed. Rename this or the previous declaration.\")",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectNotDeclared",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/expect-not-declared.html",
    "searchKeys": [
      "expectNotDeclared",
      "fun expectNotDeclared(symbolName: String, location: FileLocation?, helpMessage: String = \"Shadowing is not allowed. Rename this or the previous declaration.\")",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectNotDeclared"
    ]
  },
  {
    "name": "fun expectSymbol(symbolName: String, symbolKind: SemanticSymbolKind)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectSymbol",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/expect-symbol.html",
    "searchKeys": [
      "expectSymbol",
      "fun expectSymbol(symbolName: String, symbolKind: SemanticSymbolKind)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectSymbol"
    ]
  },
  {
    "name": "fun expectType(symbolName: String, typeName: String)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectType",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/expect-type.html",
    "searchKeys": [
      "expectType",
      "fun expectType(symbolName: String, typeName: String)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.expectType"
    ]
  },
  {
    "name": "fun findBinaryOp(tokenType: Array<Token.Type>): BinaryOp?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.Companion.findBinaryOp",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/-companion/find-binary-op.html",
    "searchKeys": [
      "findBinaryOp",
      "fun findBinaryOp(tokenType: Array<Token.Type>): BinaryOp?",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.Companion.findBinaryOp"
    ]
  },
  {
    "name": "fun findCanonicalLine(lineNumber: Int): String",
    "description": "net.exoad.kira.source.SourceContext.findCanonicalLine",
    "location": "kira_lang/net.exoad.kira.source/-source-context/find-canonical-line.html",
    "searchKeys": [
      "findCanonicalLine",
      "fun findCanonicalLine(lineNumber: Int): String",
      "net.exoad.kira.source.SourceContext.findCanonicalLine"
    ]
  },
  {
    "name": "fun findFlag(flag: String): Boolean",
    "description": "net.exoad.kira.cli.ArgsParser.findFlag",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/find-flag.html",
    "searchKeys": [
      "findFlag",
      "fun findFlag(flag: String): Boolean",
      "net.exoad.kira.cli.ArgsParser.findFlag"
    ]
  },
  {
    "name": "fun findOption(option: String, defaultValue: String? = null): String?",
    "description": "net.exoad.kira.cli.ArgsParser.findOption",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/find-option.html",
    "searchKeys": [
      "findOption",
      "fun findOption(option: String, defaultValue: String? = null): String?",
      "net.exoad.kira.cli.ArgsParser.findOption"
    ]
  },
  {
    "name": "fun finer(tag: String, message: Any)",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging.finer",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/-logging/finer.html",
    "searchKeys": [
      "finer",
      "fun finer(tag: String, message: Any)",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging.finer"
    ]
  },
  {
    "name": "fun formCanonicalLocatorString(fileLocation: FileLocation, trailingText: String? = null, locatorLength: Int = 1): String",
    "description": "net.exoad.kira.source.SourceContext.formCanonicalLocatorString",
    "location": "kira_lang/net.exoad.kira.source/-source-context/form-canonical-locator-string.html",
    "searchKeys": [
      "formCanonicalLocatorString",
      "fun formCanonicalLocatorString(fileLocation: FileLocation, trailingText: String? = null, locatorLength: Int = 1): String",
      "net.exoad.kira.source.SourceContext.formCanonicalLocatorString"
    ]
  },
  {
    "name": "fun formattedPanicMessage(): String",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.formattedPanicMessage",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/formatted-panic-message.html",
    "searchKeys": [
      "formattedPanicMessage",
      "fun formattedPanicMessage(): String",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.formattedPanicMessage"
    ]
  },
  {
    "name": "fun fromRelative(location: FileLocation, file: String): AbsoluteFileLocation",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.Companion.fromRelative",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/-companion/from-relative.html",
    "searchKeys": [
      "fromRelative",
      "fun fromRelative(location: FileLocation, file: String): AbsoluteFileLocation",
      "net.exoad.kira.source.AbsoluteFileLocation.Companion.fromRelative"
    ]
  },
  {
    "name": "fun getCurrentPosition(): Int",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.getCurrentPosition",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/get-current-position.html",
    "searchKeys": [
      "getCurrentPosition",
      "fun getCurrentPosition(): Int",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.getCurrentPosition"
    ]
  },
  {
    "name": "fun getDebugInfo(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.getDebugInfo",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/get-debug-info.html",
    "searchKeys": [
      "getDebugInfo",
      "fun getDebugInfo(): String",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.getDebugInfo"
    ]
  },
  {
    "name": "fun getLines(): List<String>",
    "description": "net.exoad.kira.source.SourceContext.getLines",
    "location": "kira_lang/net.exoad.kira.source/-source-context/get-lines.html",
    "searchKeys": [
      "getLines",
      "fun getLines(): List<String>",
      "net.exoad.kira.source.SourceContext.getLines"
    ]
  },
  {
    "name": "fun getPluralSuffix(count: Int, uppercase: Boolean = false): String",
    "description": "net.exoad.kira.utils.LocaleUtils.getPluralSuffix",
    "location": "kira_lang/net.exoad.kira.utils/-locale-utils/get-plural-suffix.html",
    "searchKeys": [
      "getPluralSuffix",
      "fun getPluralSuffix(count: Int, uppercase: Boolean = false): String",
      "net.exoad.kira.utils.LocaleUtils.getPluralSuffix"
    ]
  },
  {
    "name": "fun getPossessivePluralSuffix(count: Int, uppercase: Boolean = false, useSmartQuotes: Boolean = false): String",
    "description": "net.exoad.kira.utils.LocaleUtils.getPossessivePluralSuffix",
    "location": "kira_lang/net.exoad.kira.utils/-locale-utils/get-possessive-plural-suffix.html",
    "searchKeys": [
      "getPossessivePluralSuffix",
      "fun getPossessivePluralSuffix(count: Int, uppercase: Boolean = false, useSmartQuotes: Boolean = false): String",
      "net.exoad.kira.utils.LocaleUtils.getPossessivePluralSuffix"
    ]
  },
  {
    "name": "fun getSource(file: String): SourceContext?",
    "description": "net.exoad.kira.compiler.CompilationUnit.getSource",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/get-source.html",
    "searchKeys": [
      "getSource",
      "fun getSource(file: String): SourceContext?",
      "net.exoad.kira.compiler.CompilationUnit.getSource"
    ]
  },
  {
    "name": "fun info(tag: String, message: Any)",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging.info",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/-logging/info.html",
    "searchKeys": [
      "info",
      "fun info(tag: String, message: Any)",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging.info"
    ]
  },
  {
    "name": "fun isAtEnd(): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.isAtEnd",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/is-at-end.html",
    "searchKeys": [
      "isAtEnd",
      "fun isAtEnd(): Boolean",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.isAtEnd"
    ]
  },
  {
    "name": "fun isBinaryOperator(vararg token: Token.Type): Boolean",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion.isBinaryOperator",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-companion/is-binary-operator.html",
    "searchKeys": [
      "isBinaryOperator",
      "fun isBinaryOperator(vararg token: Token.Type): Boolean",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion.isBinaryOperator"
    ]
  },
  {
    "name": "fun lexIdentifier(): Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.lexIdentifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/lex-identifier.html",
    "searchKeys": [
      "lexIdentifier",
      "fun lexIdentifier(): Token",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.lexIdentifier"
    ]
  },
  {
    "name": "fun lexNumberLiteral(): Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.lexNumberLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/lex-number-literal.html",
    "searchKeys": [
      "lexNumberLiteral",
      "fun lexNumberLiteral(): Token",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.lexNumberLiteral"
    ]
  },
  {
    "name": "fun lexStringLiteral(): Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.lexStringLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/lex-string-literal.html",
    "searchKeys": [
      "lexStringLiteral",
      "fun lexStringLiteral(): Token",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.lexStringLiteral"
    ]
  },
  {
    "name": "fun look(k: Int): Token",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.look",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/look.html",
    "searchKeys": [
      "look",
      "fun look(k: Int): Token",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.look"
    ]
  },
  {
    "name": "fun main(args: Array<String>)",
    "description": "net.exoad.kira.cli.main",
    "location": "kira_lang/net.exoad.kira.cli/main.html",
    "searchKeys": [
      "main",
      "fun main(args: Array<String>)",
      "net.exoad.kira.cli.main"
    ]
  },
  {
    "name": "fun nextToken(): Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.nextToken",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/next-token.html",
    "searchKeys": [
      "nextToken",
      "fun nextToken(): Token",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.nextToken"
    ]
  },
  {
    "name": "fun panic(message: String): Nothing",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.panic",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/panic.html",
    "searchKeys": [
      "panic",
      "fun panic(message: String): Nothing",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.panic"
    ]
  },
  {
    "name": "fun panic(tag: String, message: Any, cause: Throwable? = null, location: FileLocation? = null, selectorLength: Int = 1, context: SourceContext): Nothing",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.panic",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/panic.html",
    "searchKeys": [
      "panic",
      "fun panic(tag: String, message: Any, cause: Throwable? = null, location: FileLocation? = null, selectorLength: Int = 1, context: SourceContext): Nothing",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.panic"
    ]
  },
  {
    "name": "fun parse()",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parse",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse.html",
    "searchKeys": [
      "parse",
      "fun parse()",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parse"
    ]
  },
  {
    "name": "fun parseArgs(): ArgumentOptions",
    "description": "net.exoad.kira.cli.parseArgs",
    "location": "kira_lang/net.exoad.kira.cli/parse-args.html",
    "searchKeys": [
      "parseArgs",
      "fun parseArgs(): ArgumentOptions",
      "net.exoad.kira.cli.parseArgs"
    ]
  },
  {
    "name": "fun parseArrayLiteral(): ArrayLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseArrayLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-array-literal.html",
    "searchKeys": [
      "parseArrayLiteral",
      "fun parseArrayLiteral(): ArrayLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseArrayLiteral"
    ]
  },
  {
    "name": "fun parseAssignmentExpr(): AssignmentExpr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-assignment-expr.html",
    "searchKeys": [
      "parseAssignmentExpr",
      "fun parseAssignmentExpr(): AssignmentExpr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseAssignmentExpr"
    ]
  },
  {
    "name": "fun parseBinaryExpr(): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseBinaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-binary-expr.html",
    "searchKeys": [
      "parseBinaryExpr",
      "fun parseBinaryExpr(): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseBinaryExpr"
    ]
  },
  {
    "name": "fun parseBoolLiteral(): BoolLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseBoolLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-bool-literal.html",
    "searchKeys": [
      "parseBoolLiteral",
      "fun parseBoolLiteral(): BoolLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseBoolLiteral"
    ]
  },
  {
    "name": "fun parseBreakStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseBreakStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-break-statement.html",
    "searchKeys": [
      "parseBreakStatement",
      "fun parseBreakStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseBreakStatement"
    ]
  },
  {
    "name": "fun parseClassDecl(modifiers: Map<Modifiers, FileLocation>?): ClassDecl",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-class-decl.html",
    "searchKeys": [
      "parseClassDecl",
      "fun parseClassDecl(modifiers: Map<Modifiers, FileLocation>?): ClassDecl",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseClassDecl"
    ]
  },
  {
    "name": "fun parseCompoundAssignmentExpr(): CompoundAssignmentExpr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseCompoundAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-compound-assignment-expr.html",
    "searchKeys": [
      "parseCompoundAssignmentExpr",
      "fun parseCompoundAssignmentExpr(): CompoundAssignmentExpr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseCompoundAssignmentExpr"
    ]
  },
  {
    "name": "fun parseContinueStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseContinueStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-continue-statement.html",
    "searchKeys": [
      "parseContinueStatement",
      "fun parseContinueStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseContinueStatement"
    ]
  },
  {
    "name": "fun parseDoWhileIterationStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseDoWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-do-while-iteration-statement.html",
    "searchKeys": [
      "parseDoWhileIterationStatement",
      "fun parseDoWhileIterationStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseDoWhileIterationStatement"
    ]
  },
  {
    "name": "fun parseEnumDecl(modifiers: Map<Modifiers, FileLocation>?): EnumDecl",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseEnumDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-enum-decl.html",
    "searchKeys": [
      "parseEnumDecl",
      "fun parseEnumDecl(modifiers: Map<Modifiers, FileLocation>?): EnumDecl",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseEnumDecl"
    ]
  },
  {
    "name": "fun parseEnumMemberExpr(): EnumMemberExpr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseEnumMemberExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-enum-member-expr.html",
    "searchKeys": [
      "parseEnumMemberExpr",
      "fun parseEnumMemberExpr(): EnumMemberExpr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseEnumMemberExpr"
    ]
  },
  {
    "name": "fun parseExpr(minPrecedence: Int = 0): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-expr.html",
    "searchKeys": [
      "parseExpr",
      "fun parseExpr(minPrecedence: Int = 0): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseExpr"
    ]
  },
  {
    "name": "fun parseFloatLiteral(): FloatLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFloatLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-float-literal.html",
    "searchKeys": [
      "parseFloatLiteral",
      "fun parseFloatLiteral(): FloatLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFloatLiteral"
    ]
  },
  {
    "name": "fun parseForIterationStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseForIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-for-iteration-statement.html",
    "searchKeys": [
      "parseForIterationStatement",
      "fun parseForIterationStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseForIterationStatement"
    ]
  },
  {
    "name": "fun parseFunctionCallOrDeclExpr(modifiers: Map<Modifiers, FileLocation>?): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFunctionCallOrDeclExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-function-call-or-decl-expr.html",
    "searchKeys": [
      "parseFunctionCallOrDeclExpr",
      "fun parseFunctionCallOrDeclExpr(modifiers: Map<Modifiers, FileLocation>?): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFunctionCallOrDeclExpr"
    ]
  },
  {
    "name": "fun parseFunctionLiteral(): AnonymousFunction",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFunctionLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-function-literal.html",
    "searchKeys": [
      "parseFunctionLiteral",
      "fun parseFunctionLiteral(): AnonymousFunction",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFunctionLiteral"
    ]
  },
  {
    "name": "fun parseFunctionParameters(): List<FunctionParameterExpr>",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFunctionParameters",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-function-parameters.html",
    "searchKeys": [
      "parseFunctionParameters",
      "fun parseFunctionParameters(): List<FunctionParameterExpr>",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseFunctionParameters"
    ]
  },
  {
    "name": "fun parseIdentifier(): Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIdentifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-identifier.html",
    "searchKeys": [
      "parseIdentifier",
      "fun parseIdentifier(): Identifier",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIdentifier"
    ]
  },
  {
    "name": "fun parseIfSelectionStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIfSelectionStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-if-selection-statement.html",
    "searchKeys": [
      "parseIfSelectionStatement",
      "fun parseIfSelectionStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIfSelectionStatement"
    ]
  },
  {
    "name": "fun parseIntegerLiteral(): IntegerLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIntegerLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-integer-literal.html",
    "searchKeys": [
      "parseIntegerLiteral",
      "fun parseIntegerLiteral(): IntegerLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIntegerLiteral"
    ]
  },
  {
    "name": "fun parseIntrinsicCallExpr(): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIntrinsicCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-intrinsic-call-expr.html",
    "searchKeys": [
      "parseIntrinsicCallExpr",
      "fun parseIntrinsicCallExpr(): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseIntrinsicCallExpr"
    ]
  },
  {
    "name": "fun parseListLiteral(): ListLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseListLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-list-literal.html",
    "searchKeys": [
      "parseListLiteral",
      "fun parseListLiteral(): ListLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseListLiteral"
    ]
  },
  {
    "name": "fun parseMapLiteral(mutable: Boolean): MapLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseMapLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-map-literal.html",
    "searchKeys": [
      "parseMapLiteral",
      "fun parseMapLiteral(mutable: Boolean): MapLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseMapLiteral"
    ]
  },
  {
    "name": "fun parseModifiers(): Map<Modifiers, FileLocation>",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseModifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-modifiers.html",
    "searchKeys": [
      "parseModifiers",
      "fun parseModifiers(): Map<Modifiers, FileLocation>",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseModifiers"
    ]
  },
  {
    "name": "fun parseModuleDecl(): Decl",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseModuleDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-module-decl.html",
    "searchKeys": [
      "parseModuleDecl",
      "fun parseModuleDecl(): Decl",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseModuleDecl"
    ]
  },
  {
    "name": "fun parseNullLiteral(): NullLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseNullLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-null-literal.html",
    "searchKeys": [
      "parseNullLiteral",
      "fun parseNullLiteral(): NullLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseNullLiteral"
    ]
  },
  {
    "name": "fun parseObjectDecl(modifiers: Map<Modifiers, FileLocation>?): ObjectDecl",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseObjectDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-object-decl.html",
    "searchKeys": [
      "parseObjectDecl",
      "fun parseObjectDecl(modifiers: Map<Modifiers, FileLocation>?): ObjectDecl",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseObjectDecl"
    ]
  },
  {
    "name": "fun parsePrimaryExpr(modifiers: Map<Modifiers, FileLocation>?): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parsePrimaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-primary-expr.html",
    "searchKeys": [
      "parsePrimaryExpr",
      "fun parsePrimaryExpr(modifiers: Map<Modifiers, FileLocation>?): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parsePrimaryExpr"
    ]
  },
  {
    "name": "fun parsePublicFlags()",
    "description": "net.exoad.kira.cli.parsePublicFlags",
    "location": "kira_lang/net.exoad.kira.cli/parse-public-flags.html",
    "searchKeys": [
      "parsePublicFlags",
      "fun parsePublicFlags()",
      "net.exoad.kira.cli.parsePublicFlags"
    ]
  },
  {
    "name": "fun parseReturnStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseReturnStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-return-statement.html",
    "searchKeys": [
      "parseReturnStatement",
      "fun parseReturnStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseReturnStatement"
    ]
  },
  {
    "name": "fun parseStatement(modifiers: Map<Modifiers, FileLocation>?): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-statement.html",
    "searchKeys": [
      "parseStatement",
      "fun parseStatement(modifiers: Map<Modifiers, FileLocation>?): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseStatement"
    ]
  },
  {
    "name": "fun parseStringLiteral(): StringLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseStringLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-string-literal.html",
    "searchKeys": [
      "parseStringLiteral",
      "fun parseStringLiteral(): StringLiteral",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseStringLiteral"
    ]
  },
  {
    "name": "fun parseType(trace: Int = 0): TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseType",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-type.html",
    "searchKeys": [
      "parseType",
      "fun parseType(trace: Int = 0): TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseType"
    ]
  },
  {
    "name": "fun parseUnaryExpr(): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseUnaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-unary-expr.html",
    "searchKeys": [
      "parseUnaryExpr",
      "fun parseUnaryExpr(): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseUnaryExpr"
    ]
  },
  {
    "name": "fun parseUseStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseUseStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-use-statement.html",
    "searchKeys": [
      "parseUseStatement",
      "fun parseUseStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseUseStatement"
    ]
  },
  {
    "name": "fun parseVariableDecl(modifiers: Map<Modifiers, FileLocation>?): VariableDecl",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseVariableDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-variable-decl.html",
    "searchKeys": [
      "parseVariableDecl",
      "fun parseVariableDecl(modifiers: Map<Modifiers, FileLocation>?): VariableDecl",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseVariableDecl"
    ]
  },
  {
    "name": "fun parseWhileIterationStatement(): Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-while-iteration-statement.html",
    "searchKeys": [
      "parseWhileIterationStatement",
      "fun parseWhileIterationStatement(): Statement",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseWhileIterationStatement"
    ]
  },
  {
    "name": "fun parseWithExpr(): Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.parseWithExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/parse-with-expr.html",
    "searchKeys": [
      "parseWithExpr",
      "fun parseWithExpr(): Expr",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.parseWithExpr"
    ]
  },
  {
    "name": "fun peek(): Map<String, SemanticSymbol>",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.peek",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/peek.html",
    "searchKeys": [
      "peek",
      "fun peek(): Map<String, SemanticSymbol>",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.peek"
    ]
  },
  {
    "name": "fun peek(k: Int = 0): Char",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.peek",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/peek.html",
    "searchKeys": [
      "peek",
      "fun peek(k: Int = 0): Char",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.peek"
    ]
  },
  {
    "name": "fun peek(offset: Int = 0): Char",
    "description": "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.peek",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-character-buffer/peek.html",
    "searchKeys": [
      "peek",
      "fun peek(offset: Int = 0): Char",
      "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.peek"
    ]
  },
  {
    "name": "fun peek(offset: Int = 0): Token",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.peek",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/peek.html",
    "searchKeys": [
      "peek",
      "fun peek(offset: Int = 0): Token",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.peek"
    ]
  },
  {
    "name": "fun peekScope(): SemanticScope",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.peekScope",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/peek-scope.html",
    "searchKeys": [
      "peekScope",
      "fun peekScope(): SemanticScope",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.peekScope"
    ]
  },
  {
    "name": "fun process(): PreprocessorResult",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.KiraPreprocessor.process",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-kira-preprocessor/process.html",
    "searchKeys": [
      "process",
      "fun process(): PreprocessorResult",
      "net.exoad.kira.compiler.frontend.preprocessor.KiraPreprocessor.process"
    ]
  },
  {
    "name": "fun pumpOnTrue(expr: Boolean, message: String, location: FileLocation?, selectorLength: Int = 1, help: String = \"\")",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.pumpOnTrue",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/pump-on-true.html",
    "searchKeys": [
      "pumpOnTrue",
      "fun pumpOnTrue(expr: Boolean, message: String, location: FileLocation?, selectorLength: Int = 1, help: String = \"\")",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.pumpOnTrue"
    ]
  },
  {
    "name": "fun recordDiagnostics(exception: DiagnosticsException): String",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.recordDiagnostics",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/record-diagnostics.html",
    "searchKeys": [
      "recordDiagnostics",
      "fun recordDiagnostics(exception: DiagnosticsException): String",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.recordDiagnostics"
    ]
  },
  {
    "name": "fun recordPanic(tag: String, message: Any, cause: Throwable? = null, location: FileLocation? = null, selectorLength: Int = 1, context: SourceContext): DiagnosticsException",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.recordPanic",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/record-panic.html",
    "searchKeys": [
      "recordPanic",
      "fun recordPanic(tag: String, message: Any, cause: Throwable? = null, location: FileLocation? = null, selectorLength: Int = 1, context: SourceContext): DiagnosticsException",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.recordPanic"
    ]
  },
  {
    "name": "fun resolve(identifier: String): SemanticSymbol?",
    "description": "net.exoad.kira.compiler.analysis.semantic.SymbolTable.resolve",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-symbol-table/resolve.html",
    "searchKeys": [
      "resolve",
      "fun resolve(identifier: String): SemanticSymbol?",
      "net.exoad.kira.compiler.analysis.semantic.SymbolTable.resolve"
    ]
  },
  {
    "name": "fun resolveSymbol(name: String): SemanticSymbol?",
    "description": "net.exoad.kira.compiler.CompilationUnit.resolveSymbol",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/resolve-symbol.html",
    "searchKeys": [
      "resolveSymbol",
      "fun resolveSymbol(name: String): SemanticSymbol?",
      "net.exoad.kira.compiler.CompilationUnit.resolveSymbol"
    ]
  },
  {
    "name": "fun restoreCheckpoint(checkpoint: TokenBufferCheckpoint): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBuffer.restoreCheckpoint",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer/restore-checkpoint.html",
    "searchKeys": [
      "restoreCheckpoint",
      "fun restoreCheckpoint(checkpoint: TokenBufferCheckpoint): Boolean",
      "net.exoad.kira.compiler.frontend.parser.TokenBuffer.restoreCheckpoint"
    ]
  },
  {
    "name": "fun run()",
    "description": "net.exoad.kira.ui.KiraVisualViewer.run",
    "location": "kira_lang/net.exoad.kira.ui/-kira-visual-viewer/run.html",
    "searchKeys": [
      "run",
      "fun run()",
      "net.exoad.kira.ui.KiraVisualViewer.run"
    ]
  },
  {
    "name": "fun silenceDiagnostics()",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.silenceDiagnostics",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/silence-diagnostics.html",
    "searchKeys": [
      "silenceDiagnostics",
      "fun silenceDiagnostics()",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.silenceDiagnostics"
    ]
  },
  {
    "name": "fun skipWhitespace()",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.skipWhitespace",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/skip-whitespace.html",
    "searchKeys": [
      "skipWhitespace",
      "fun skipWhitespace()",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.skipWhitespace"
    ]
  },
  {
    "name": "fun toRelative(): FileLocation",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.toRelative",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/to-relative.html",
    "searchKeys": [
      "toRelative",
      "fun toRelative(): FileLocation",
      "net.exoad.kira.source.AbsoluteFileLocation.toRelative"
    ]
  },
  {
    "name": "fun tokenize(): List<Token>",
    "description": "net.exoad.kira.compiler.frontend.lexer.KiraLexer.tokenize",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-kira-lexer/tokenize.html",
    "searchKeys": [
      "tokenize",
      "fun tokenize(): List<Token>",
      "net.exoad.kira.compiler.frontend.lexer.KiraLexer.tokenize"
    ]
  },
  {
    "name": "fun tryCompoundAssignmentOperators(peekOffset: Int = 0): Array<Token.Type>?",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.tryCompoundAssignmentOperators",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/try-compound-assignment-operators.html",
    "searchKeys": [
      "tryCompoundAssignmentOperators",
      "fun tryCompoundAssignmentOperators(peekOffset: Int = 0): Array<Token.Type>?",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.tryCompoundAssignmentOperators"
    ]
  },
  {
    "name": "fun tryInOrder(candidates: Array<Array<Token.Type>>, peekOffset: Int = 0): Array<Token.Type>?",
    "description": "net.exoad.kira.compiler.frontend.parser.KiraParser.tryInOrder",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-kira-parser/try-in-order.html",
    "searchKeys": [
      "tryInOrder",
      "fun tryInOrder(candidates: Array<Array<Token.Type>>, peekOffset: Int = 0): Array<Token.Type>?",
      "net.exoad.kira.compiler.frontend.parser.KiraParser.tryInOrder"
    ]
  },
  {
    "name": "fun useDiagnostics()",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.useDiagnostics",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/use-diagnostics.html",
    "searchKeys": [
      "useDiagnostics",
      "fun useDiagnostics()",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.useDiagnostics"
    ]
  },
  {
    "name": "fun validateAST(): SemanticAnalyzerResults",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.validateAST",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/validate-a-s-t.html",
    "searchKeys": [
      "validateAST",
      "fun validateAST(): SemanticAnalyzerResults",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.validateAST"
    ]
  },
  {
    "name": "fun valueOf(value: String): BinaryOp",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): BinaryOp",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Builtin.Intrinsics",
    "description": "net.exoad.kira.core.Builtin.Intrinsics.valueOf",
    "location": "kira_lang/net.exoad.kira.core/-builtin/-intrinsics/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Builtin.Intrinsics",
      "net.exoad.kira.core.Builtin.Intrinsics.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): GeneratedProvider.OutputTarget",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/-output-target/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): GeneratedProvider.OutputTarget",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Modifiers",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Modifiers",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Modifiers.Context",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Modifiers.Context",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): OutputTargets",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): OutputTargets",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): SemanticScope",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): SemanticScope",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): SemanticSymbolKind",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): SemanticSymbolKind",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Symbols",
    "description": "net.exoad.kira.core.Symbols.valueOf",
    "location": "kira_lang/net.exoad.kira.core/-symbols/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Symbols",
      "net.exoad.kira.core.Symbols.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): Token.Type",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): Token.Type",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.valueOf"
    ]
  },
  {
    "name": "fun valueOf(value: String): UnaryOp",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.valueOf",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/value-of.html",
    "searchKeys": [
      "valueOf",
      "fun valueOf(value: String): UnaryOp",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.valueOf"
    ]
  },
  {
    "name": "fun values(): Array<BinaryOp>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.values",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<BinaryOp>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.values"
    ]
  },
  {
    "name": "fun values(): Array<Builtin.Intrinsics>",
    "description": "net.exoad.kira.core.Builtin.Intrinsics.values",
    "location": "kira_lang/net.exoad.kira.core/-builtin/-intrinsics/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Builtin.Intrinsics>",
      "net.exoad.kira.core.Builtin.Intrinsics.values"
    ]
  },
  {
    "name": "fun values(): Array<GeneratedProvider.OutputTarget>",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.values",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/-output-target/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<GeneratedProvider.OutputTarget>",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.values"
    ]
  },
  {
    "name": "fun values(): Array<Modifiers.Context>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.values",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Modifiers.Context>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.values"
    ]
  },
  {
    "name": "fun values(): Array<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.values",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.values"
    ]
  },
  {
    "name": "fun values(): Array<OutputTargets>",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.values",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<OutputTargets>",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.values"
    ]
  },
  {
    "name": "fun values(): Array<SemanticScope>",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.values",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<SemanticScope>",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.values"
    ]
  },
  {
    "name": "fun values(): Array<SemanticSymbolKind>",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.values",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<SemanticSymbolKind>",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.values"
    ]
  },
  {
    "name": "fun values(): Array<Symbols>",
    "description": "net.exoad.kira.core.Symbols.values",
    "location": "kira_lang/net.exoad.kira.core/-symbols/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Symbols>",
      "net.exoad.kira.core.Symbols.values"
    ]
  },
  {
    "name": "fun values(): Array<Token.Type>",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.values",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<Token.Type>",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.values"
    ]
  },
  {
    "name": "fun values(): Array<UnaryOp>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.values",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/values.html",
    "searchKeys": [
      "values",
      "fun values(): Array<UnaryOp>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.values"
    ]
  },
  {
    "name": "fun visitRootASTNode(rootASTNode: RootASTNode)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitRootASTNode",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-root-a-s-t-node.html",
    "searchKeys": [
      "visitRootASTNode",
      "fun visitRootASTNode(rootASTNode: RootASTNode)",
      "net.exoad.kira.utils.XMLASTVisitor.visitRootASTNode"
    ]
  },
  {
    "name": "fun warn(tag: String, message: Any)",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging.warn",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/-logging/warn.html",
    "searchKeys": [
      "warn",
      "fun warn(tag: String, message: Any)",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging.warn"
    ]
  },
  {
    "name": "fun with(content: String, tokens: List<Token>? = null): SourceContext",
    "description": "net.exoad.kira.source.SourceContext.with",
    "location": "kira_lang/net.exoad.kira.source/-source-context/with.html",
    "searchKeys": [
      "with",
      "fun with(content: String, tokens: List<Token>? = null): SourceContext",
      "net.exoad.kira.source.SourceContext.with"
    ]
  },
  {
    "name": "interface SimpleLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.SimpleLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-simple-literal/index.html",
    "searchKeys": [
      "SimpleLiteral",
      "interface SimpleLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.SimpleLiteral"
    ]
  },
  {
    "name": "lateinit var ast: RootASTNode",
    "description": "net.exoad.kira.source.SourceContext.ast",
    "location": "kira_lang/net.exoad.kira.source/-source-context/ast.html",
    "searchKeys": [
      "ast",
      "lateinit var ast: RootASTNode",
      "net.exoad.kira.source.SourceContext.ast"
    ]
  },
  {
    "name": "lateinit var astOrigins: IdentityHashMap<ASTNode, FileLocation>",
    "description": "net.exoad.kira.source.SourceContext.astOrigins",
    "location": "kira_lang/net.exoad.kira.source/-source-context/ast-origins.html",
    "searchKeys": [
      "astOrigins",
      "lateinit var astOrigins: IdentityHashMap<ASTNode, FileLocation>",
      "net.exoad.kira.source.SourceContext.astOrigins"
    ]
  },
  {
    "name": "lateinit var context: SourceContext",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.context",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/context.html",
    "searchKeys": [
      "context",
      "lateinit var context: SourceContext",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.context"
    ]
  },
  {
    "name": "lateinit var outputFile: String",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.outputFile",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/output-file.html",
    "searchKeys": [
      "outputFile",
      "lateinit var outputFile: String",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.outputFile"
    ]
  },
  {
    "name": "object Builtin",
    "description": "net.exoad.kira.Public.Builtin",
    "location": "kira_lang/net.exoad.kira/-public/-builtin/index.html",
    "searchKeys": [
      "Builtin",
      "object Builtin",
      "net.exoad.kira.Public.Builtin"
    ]
  },
  {
    "name": "object Builtin",
    "description": "net.exoad.kira.core.Builtin",
    "location": "kira_lang/net.exoad.kira.core/-builtin/index.html",
    "searchKeys": [
      "Builtin",
      "object Builtin",
      "net.exoad.kira.core.Builtin"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.Companion",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Companion",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.Companion",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.Companion",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.Companion",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.source.AbsoluteFileLocation.Companion"
    ]
  },
  {
    "name": "object Companion",
    "description": "net.exoad.kira.source.FileLocation.Companion",
    "location": "kira_lang/net.exoad.kira.source/-file-location/-companion/index.html",
    "searchKeys": [
      "Companion",
      "object Companion",
      "net.exoad.kira.source.FileLocation.Companion"
    ]
  },
  {
    "name": "object Diagnostics",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/index.html",
    "searchKeys": [
      "Diagnostics",
      "object Diagnostics",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics"
    ]
  },
  {
    "name": "object DiagnosticsSymbols",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsSymbols",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-symbols/index.html",
    "searchKeys": [
      "DiagnosticsSymbols",
      "object DiagnosticsSymbols",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsSymbols"
    ]
  },
  {
    "name": "object Flags",
    "description": "net.exoad.kira.Public.Flags",
    "location": "kira_lang/net.exoad.kira/-public/-flags/index.html",
    "searchKeys": [
      "Flags",
      "object Flags",
      "net.exoad.kira.Public.Flags"
    ]
  },
  {
    "name": "object GeneratedProvider",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/index.html",
    "searchKeys": [
      "GeneratedProvider",
      "object GeneratedProvider",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider"
    ]
  },
  {
    "name": "object Keywords",
    "description": "net.exoad.kira.core.Keywords",
    "location": "kira_lang/net.exoad.kira.core/-keywords/index.html",
    "searchKeys": [
      "Keywords",
      "object Keywords",
      "net.exoad.kira.core.Keywords"
    ]
  },
  {
    "name": "object KiraCCodeGenerator",
    "description": "net.exoad.kira.compiler.backend.codegen.c.KiraCCodeGenerator",
    "location": "kira_lang/net.exoad.kira.compiler.backend.codegen.c/-kira-c-code-generator/index.html",
    "searchKeys": [
      "KiraCCodeGenerator",
      "object KiraCCodeGenerator",
      "net.exoad.kira.compiler.backend.codegen.c.KiraCCodeGenerator"
    ]
  },
  {
    "name": "object LocaleUtils",
    "description": "net.exoad.kira.utils.LocaleUtils",
    "location": "kira_lang/net.exoad.kira.utils/-locale-utils/index.html",
    "searchKeys": [
      "LocaleUtils",
      "object LocaleUtils",
      "net.exoad.kira.utils.LocaleUtils"
    ]
  },
  {
    "name": "object Logging",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics/-logging/index.html",
    "searchKeys": [
      "Logging",
      "object Logging",
      "net.exoad.kira.compiler.analysis.diagnostics.Diagnostics.Logging"
    ]
  },
  {
    "name": "object NoExpr : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.NoExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-no-expr/index.html",
    "searchKeys": [
      "NoExpr",
      "object NoExpr : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.NoExpr"
    ]
  },
  {
    "name": "object NullLiteral : DataLiteral<Any> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.NullLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-null-literal/index.html",
    "searchKeys": [
      "NullLiteral",
      "object NullLiteral : DataLiteral<Any> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.NullLiteral"
    ]
  },
  {
    "name": "object Public",
    "description": "net.exoad.kira.Public",
    "location": "kira_lang/net.exoad.kira/-public/index.html",
    "searchKeys": [
      "Public",
      "object Public",
      "net.exoad.kira.Public"
    ]
  },
  {
    "name": "object XMLASTVisitor : ASTVisitor",
    "description": "net.exoad.kira.utils.XMLASTVisitor",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/index.html",
    "searchKeys": [
      "XMLASTVisitor",
      "object XMLASTVisitor : ASTVisitor",
      "net.exoad.kira.utils.XMLASTVisitor"
    ]
  },
  {
    "name": "open class AbsoluteFileLocation(val lineNumber: Int, val column: Int, val srcFile: String)",
    "description": "net.exoad.kira.source.AbsoluteFileLocation",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/index.html",
    "searchKeys": [
      "AbsoluteFileLocation",
      "open class AbsoluteFileLocation(val lineNumber: Int, val column: Int, val srcFile: String)",
      "net.exoad.kira.source.AbsoluteFileLocation"
    ]
  },
  {
    "name": "open class AnonymousFunction(val returnTypeSpecifier: TypeSpecifier, val parameters: List<<Error class: unknown class>>, val body: List<Statement>?) : Literal",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/index.html",
    "searchKeys": [
      "AnonymousFunction",
      "open class AnonymousFunction(val returnTypeSpecifier: TypeSpecifier, val parameters: List<<Error class: unknown class>>, val body: List<Statement>?) : Literal",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction"
    ]
  },
  {
    "name": "open class AnonymousIdentifier : Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-identifier/index.html",
    "searchKeys": [
      "AnonymousIdentifier",
      "open class AnonymousIdentifier : Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier"
    ]
  },
  {
    "name": "open class ArrayLiteral(val value: Array<Expr>) : DataLiteral<Array<Expr>> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-array-literal/index.html",
    "searchKeys": [
      "ArrayLiteral",
      "open class ArrayLiteral(val value: Array<Expr>) : DataLiteral<Array<Expr>> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral"
    ]
  },
  {
    "name": "open class AssignmentExpr(val target: Identifier, val value: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-assignment-expr/index.html",
    "searchKeys": [
      "AssignmentExpr",
      "open class AssignmentExpr(val target: Identifier, val value: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr"
    ]
  },
  {
    "name": "open class BoolLiteral(val value: Boolean) : DataLiteral<Boolean> , SimpleLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-bool-literal/index.html",
    "searchKeys": [
      "BoolLiteral",
      "open class BoolLiteral(val value: Boolean) : DataLiteral<Boolean> , SimpleLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral"
    ]
  },
  {
    "name": "open class BreakStatement : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-break-statement/index.html",
    "searchKeys": [
      "BreakStatement",
      "open class BreakStatement : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement"
    ]
  },
  {
    "name": "open class ClassDecl(val name: TypeSpecifier, val modifiers: List<Modifiers> = emptyList(), val members: List<FirstClassDecl> = emptyList(), val parent: TypeSpecifier? = null) : Decl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/index.html",
    "searchKeys": [
      "ClassDecl",
      "open class ClassDecl(val name: TypeSpecifier, val modifiers: List<Modifiers> = emptyList(), val members: List<FirstClassDecl> = emptyList(), val parent: TypeSpecifier? = null) : Decl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl"
    ]
  },
  {
    "name": "open class ContinueStatement : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-continue-statement/index.html",
    "searchKeys": [
      "ContinueStatement",
      "open class ContinueStatement : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement"
    ]
  },
  {
    "name": "open class EnumMemberExpr(val name: Identifier, val value: DataLiteral<*>?) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-enum-member-expr/index.html",
    "searchKeys": [
      "EnumMemberExpr",
      "open class EnumMemberExpr(val name: Identifier, val value: DataLiteral<*>?) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr"
    ]
  },
  {
    "name": "open class FloatLiteral(val value: Double) : DataLiteral<Double> , SimpleLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-float-literal/index.html",
    "searchKeys": [
      "FloatLiteral",
      "open class FloatLiteral(val value: Double) : DataLiteral<Double> , SimpleLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral"
    ]
  },
  {
    "name": "open class ForIterationExpr(val initializer: Identifier, val target: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-expr/index.html",
    "searchKeys": [
      "ForIterationExpr",
      "open class ForIterationExpr(val initializer: Identifier, val target: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr"
    ]
  },
  {
    "name": "open class FunctionCallExpr(val name: Identifier, val positionalParameters: List<FunctionCallPositionalParameterExpr>, val namedParameters: List<FunctionCallNamedParameterExpr>) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/index.html",
    "searchKeys": [
      "FunctionCallExpr",
      "open class FunctionCallExpr(val name: Identifier, val positionalParameters: List<FunctionCallPositionalParameterExpr>, val namedParameters: List<FunctionCallNamedParameterExpr>) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr"
    ]
  },
  {
    "name": "open class FunctionCallNamedParameterExpr(val name: Identifier, val value: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-named-parameter-expr/index.html",
    "searchKeys": [
      "FunctionCallNamedParameterExpr",
      "open class FunctionCallNamedParameterExpr(val name: Identifier, val value: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr"
    ]
  },
  {
    "name": "open class FunctionCallPositionalParameterExpr(val position: Int, val value: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-positional-parameter-expr/index.html",
    "searchKeys": [
      "FunctionCallPositionalParameterExpr",
      "open class FunctionCallPositionalParameterExpr(val position: Int, val value: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr"
    ]
  },
  {
    "name": "open class FunctionDecl(val name: Identifier, val value: AnonymousFunction, val modifiers: List<Modifiers> = emptyList()) : FirstClassDecl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/index.html",
    "searchKeys": [
      "FunctionDecl",
      "open class FunctionDecl(val name: Identifier, val value: AnonymousFunction, val modifiers: List<Modifiers> = emptyList()) : FirstClassDecl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl"
    ]
  },
  {
    "name": "open class FunctionParameterExpr(val name: Identifier, val typeSpecifier: TypeSpecifier, val modifiers: List<Modifiers> = emptyList()) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/index.html",
    "searchKeys": [
      "FunctionParameterExpr",
      "open class FunctionParameterExpr(val name: Identifier, val typeSpecifier: TypeSpecifier, val modifiers: List<Modifiers> = emptyList()) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr"
    ]
  },
  {
    "name": "open class Identifier(val name: String) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/index.html",
    "searchKeys": [
      "Identifier",
      "open class Identifier(val name: String) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier"
    ]
  },
  {
    "name": "open class IfSelectionStatement(condition: Expr, val thenStatements: List<Statement>, val elseBranches: List<IfElseBranchStatementNode> = emptyList()) : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-selection-statement/index.html",
    "searchKeys": [
      "IfSelectionStatement",
      "open class IfSelectionStatement(condition: Expr, val thenStatements: List<Statement>, val elseBranches: List<IfElseBranchStatementNode> = emptyList()) : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement"
    ]
  },
  {
    "name": "open class IntegerLiteral(val value: Long) : DataLiteral<Long> , SimpleLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-integer-literal/index.html",
    "searchKeys": [
      "IntegerLiteral",
      "open class IntegerLiteral(val value: Long) : DataLiteral<Long> , SimpleLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral"
    ]
  },
  {
    "name": "open class IntrinsicCallExpr(val name: Intrinsic, val parameters: List<Expr>) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-intrinsic-call-expr/index.html",
    "searchKeys": [
      "IntrinsicCallExpr",
      "open class IntrinsicCallExpr(val name: Intrinsic, val parameters: List<Expr>) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr"
    ]
  },
  {
    "name": "open class ListLiteral(val value: List<Expr>) : DataLiteral<List<Expr>> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-list-literal/index.html",
    "searchKeys": [
      "ListLiteral",
      "open class ListLiteral(val value: List<Expr>) : DataLiteral<List<Expr>> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral"
    ]
  },
  {
    "name": "open class MapLiteral(val value: Map<Expr, Expr>, val mutable: Boolean) : DataLiteral<Map<Expr, Expr>> ",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-map-literal/index.html",
    "searchKeys": [
      "MapLiteral",
      "open class MapLiteral(val value: Map<Expr, Expr>, val mutable: Boolean) : DataLiteral<Map<Expr, Expr>> ",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral"
    ]
  },
  {
    "name": "open class MemberAccessExpr(val origin: Expr, val member: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-member-access-expr/index.html",
    "searchKeys": [
      "MemberAccessExpr",
      "open class MemberAccessExpr(val origin: Expr, val member: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr"
    ]
  },
  {
    "name": "open class ObjectDecl(val name: Identifier, val modifiers: List<Modifiers> = emptyList(), val members: List<Decl> = emptyList()) : Decl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/index.html",
    "searchKeys": [
      "ObjectDecl",
      "open class ObjectDecl(val name: Identifier, val modifiers: List<Modifiers> = emptyList(), val members: List<Decl> = emptyList()) : Decl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl"
    ]
  },
  {
    "name": "open class RangeExpr(val begin: Expr, val end: Expr) : ForIterationTargetExpr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-range-expr/index.html",
    "searchKeys": [
      "RangeExpr",
      "open class RangeExpr(val begin: Expr, val end: Expr) : ForIterationTargetExpr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr"
    ]
  },
  {
    "name": "open class ReturnStatement(val expr: Expr) : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-return-statement/index.html",
    "searchKeys": [
      "ReturnStatement",
      "open class ReturnStatement(val expr: Expr) : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement"
    ]
  },
  {
    "name": "open class Statement(val expr: Expr) : ASTNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-statement/index.html",
    "searchKeys": [
      "Statement",
      "open class Statement(val expr: Expr) : ASTNode",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement"
    ]
  },
  {
    "name": "open class StringLiteral(val value: String) : DataLiteral<String> , SimpleLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-string-literal/index.html",
    "searchKeys": [
      "StringLiteral",
      "open class StringLiteral(val value: String) : DataLiteral<String> , SimpleLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral"
    ]
  },
  {
    "name": "open class TypeSpecifier(val name: String, val childGenericTypeSpecifier: Array<TypeSpecifier> = emptyArray()) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-type-specifier/index.html",
    "searchKeys": [
      "TypeSpecifier",
      "open class TypeSpecifier(val name: String, val childGenericTypeSpecifier: Array<TypeSpecifier> = emptyArray()) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier"
    ]
  },
  {
    "name": "open class UseStatement(val uri: StringLiteral) : Statement",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-use-statement/index.html",
    "searchKeys": [
      "UseStatement",
      "open class UseStatement(val uri: StringLiteral) : Statement",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement"
    ]
  },
  {
    "name": "open class VariableDecl(val name: Identifier, val typeSpecifier: TypeSpecifier, val value: Expr?, val modifiers: List<Modifiers> = emptyList()) : FirstClassDecl",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/index.html",
    "searchKeys": [
      "VariableDecl",
      "open class VariableDecl(val name: Identifier, val typeSpecifier: TypeSpecifier, val value: Expr?, val modifiers: List<Modifiers> = emptyList()) : FirstClassDecl",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl"
    ]
  },
  {
    "name": "open class WithExpr(val members: List<WithExprMember>) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr/index.html",
    "searchKeys": [
      "WithExpr",
      "open class WithExpr(val members: List<WithExprMember>) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr"
    ]
  },
  {
    "name": "open class WithExprMember(val name: Identifier, val value: Expr) : Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr-member/index.html",
    "searchKeys": [
      "WithExprMember",
      "open class WithExprMember(val name: Identifier, val value: Expr) : Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember"
    ]
  },
  {
    "name": "open operator override fun equals(other: Any?): Boolean",
    "description": "net.exoad.kira.cli.ArgumentOptions.equals",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/equals.html",
    "searchKeys": [
      "equals",
      "open operator override fun equals(other: Any?): Boolean",
      "net.exoad.kira.cli.ArgumentOptions.equals"
    ]
  },
  {
    "name": "open operator override fun equals(other: Any?): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.equals",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-identifier/equals.html",
    "searchKeys": [
      "equals",
      "open operator override fun equals(other: Any?): Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.equals"
    ]
  },
  {
    "name": "open operator override fun equals(other: Any?): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.equals",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/equals.html",
    "searchKeys": [
      "equals",
      "open operator override fun equals(other: Any?): Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.equals"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-root-a-s-t-node/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-module-decl/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-array-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-bool-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-float-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-integer-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-list-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-map-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.NullLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-null-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.NullLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-string-literal/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-type-specifier/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-assignment-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-enum-member-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-named-parameter-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-positional-parameter-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-intrinsic-call-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-member-access-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.NoExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-no-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.NoExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-range-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-cast-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-check-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-unary-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr-member/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-break-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-continue-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-do-while-iteration-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-branch-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-if-branch-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-for-iteration-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-selection-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-return-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-use-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.accept"
    ]
  },
  {
    "name": "open override fun accept(visitor: ASTVisitor)",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.accept",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-while-iteration-statement/accept.html",
    "searchKeys": [
      "accept",
      "open override fun accept(visitor: ASTVisitor)",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.accept"
    ]
  },
  {
    "name": "open override fun hashCode(): Int",
    "description": "net.exoad.kira.cli.ArgumentOptions.hashCode",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/hash-code.html",
    "searchKeys": [
      "hashCode",
      "open override fun hashCode(): Int",
      "net.exoad.kira.cli.ArgumentOptions.hashCode"
    ]
  },
  {
    "name": "open override fun hashCode(): Int",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.hashCode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-identifier/hash-code.html",
    "searchKeys": [
      "hashCode",
      "open override fun hashCode(): Int",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.hashCode"
    ]
  },
  {
    "name": "open override fun hashCode(): Int",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.hashCode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/hash-code.html",
    "searchKeys": [
      "hashCode",
      "open override fun hashCode(): Int",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.hashCode"
    ]
  },
  {
    "name": "open override fun isStub(): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.isStub",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/is-stub.html",
    "searchKeys": [
      "isStub",
      "open override fun isStub(): Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.isStub"
    ]
  },
  {
    "name": "open override fun isStub(): Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.isStub",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/is-stub.html",
    "searchKeys": [
      "isStub",
      "open override fun isStub(): Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.isStub"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.cli.ArgumentOptions.toString",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.cli.ArgumentOptions.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.toString",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.lexer.Token.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-module-decl/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-identifier/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousIdentifier.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-array-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-bool-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-float-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-integer-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-list-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-map-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.NullLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-null-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.NullLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-string-literal/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-type-specifier/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-assignment-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-enum-member-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-named-parameter-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-positional-parameter-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-intrinsic-call-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-member-access-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.NoExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-no-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.NoExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-range-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-cast-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-check-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-unary-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr-member/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-break-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.BreakStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-continue-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ContinueStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-do-while-iteration-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-for-iteration-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-selection-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-return-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-use-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.toString",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-while-iteration-statement/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.core.Symbols.toString",
    "location": "kira_lang/net.exoad.kira.core/-symbols/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.core.Symbols.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.toString",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.source.AbsoluteFileLocation.toString"
    ]
  },
  {
    "name": "open override fun toString(): String",
    "description": "net.exoad.kira.source.FileLocation.toString",
    "location": "kira_lang/net.exoad.kira.source/-file-location/to-string.html",
    "searchKeys": [
      "toString",
      "open override fun toString(): String",
      "net.exoad.kira.source.FileLocation.toString"
    ]
  },
  {
    "name": "open override fun visitArrayLiteral(arrayLiteral: ArrayLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitArrayLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-array-literal.html",
    "searchKeys": [
      "visitArrayLiteral",
      "open override fun visitArrayLiteral(arrayLiteral: ArrayLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitArrayLiteral"
    ]
  },
  {
    "name": "open override fun visitArrayLiteral(arrayLiteral: ArrayLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitArrayLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-array-literal.html",
    "searchKeys": [
      "visitArrayLiteral",
      "open override fun visitArrayLiteral(arrayLiteral: ArrayLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitArrayLiteral"
    ]
  },
  {
    "name": "open override fun visitAssignmentExpr(assignmentExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-assignment-expr.html",
    "searchKeys": [
      "visitAssignmentExpr",
      "open override fun visitAssignmentExpr(assignmentExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitAssignmentExpr"
    ]
  },
  {
    "name": "open override fun visitAssignmentExpr(assignmentExpr: AssignmentExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-assignment-expr.html",
    "searchKeys": [
      "visitAssignmentExpr",
      "open override fun visitAssignmentExpr(assignmentExpr: AssignmentExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitAssignmentExpr"
    ]
  },
  {
    "name": "open override fun visitBinaryExpr(binaryExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitBinaryExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-binary-expr.html",
    "searchKeys": [
      "visitBinaryExpr",
      "open override fun visitBinaryExpr(binaryExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitBinaryExpr"
    ]
  },
  {
    "name": "open override fun visitBinaryExpr(binaryExpr: BinaryExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitBinaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-binary-expr.html",
    "searchKeys": [
      "visitBinaryExpr",
      "open override fun visitBinaryExpr(binaryExpr: BinaryExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitBinaryExpr"
    ]
  },
  {
    "name": "open override fun visitBoolLiteral(boolLiteral: BoolLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitBoolLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-bool-literal.html",
    "searchKeys": [
      "visitBoolLiteral",
      "open override fun visitBoolLiteral(boolLiteral: BoolLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitBoolLiteral"
    ]
  },
  {
    "name": "open override fun visitBoolLiteral(boolLiteral: BoolLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitBoolLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-bool-literal.html",
    "searchKeys": [
      "visitBoolLiteral",
      "open override fun visitBoolLiteral(boolLiteral: BoolLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitBoolLiteral"
    ]
  },
  {
    "name": "open override fun visitBreakStatement(breakStatement: BreakStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitBreakStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-break-statement.html",
    "searchKeys": [
      "visitBreakStatement",
      "open override fun visitBreakStatement(breakStatement: BreakStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitBreakStatement"
    ]
  },
  {
    "name": "open override fun visitBreakStatement(breakStatement: BreakStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitBreakStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-break-statement.html",
    "searchKeys": [
      "visitBreakStatement",
      "open override fun visitBreakStatement(breakStatement: BreakStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitBreakStatement"
    ]
  },
  {
    "name": "open override fun visitClassDecl(classDecl: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitClassDecl",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-class-decl.html",
    "searchKeys": [
      "visitClassDecl",
      "open override fun visitClassDecl(classDecl: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitClassDecl"
    ]
  },
  {
    "name": "open override fun visitClassDecl(classDecl: ClassDecl)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitClassDecl",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-class-decl.html",
    "searchKeys": [
      "visitClassDecl",
      "open override fun visitClassDecl(classDecl: ClassDecl)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitClassDecl"
    ]
  },
  {
    "name": "open override fun visitCompoundAssignmentExpr(compoundAssignmentExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitCompoundAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-compound-assignment-expr.html",
    "searchKeys": [
      "visitCompoundAssignmentExpr",
      "open override fun visitCompoundAssignmentExpr(compoundAssignmentExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitCompoundAssignmentExpr"
    ]
  },
  {
    "name": "open override fun visitCompoundAssignmentExpr(compoundAssignmentExpr: CompoundAssignmentExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitCompoundAssignmentExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-compound-assignment-expr.html",
    "searchKeys": [
      "visitCompoundAssignmentExpr",
      "open override fun visitCompoundAssignmentExpr(compoundAssignmentExpr: CompoundAssignmentExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitCompoundAssignmentExpr"
    ]
  },
  {
    "name": "open override fun visitContinueStatement(continueStatement: ContinueStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitContinueStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-continue-statement.html",
    "searchKeys": [
      "visitContinueStatement",
      "open override fun visitContinueStatement(continueStatement: ContinueStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitContinueStatement"
    ]
  },
  {
    "name": "open override fun visitContinueStatement(continueStatement: ContinueStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitContinueStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-continue-statement.html",
    "searchKeys": [
      "visitContinueStatement",
      "open override fun visitContinueStatement(continueStatement: ContinueStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitContinueStatement"
    ]
  },
  {
    "name": "open override fun visitDoWhileIterationStatement(doWhileIterationStatement: DoWhileIterationStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitDoWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-do-while-iteration-statement.html",
    "searchKeys": [
      "visitDoWhileIterationStatement",
      "open override fun visitDoWhileIterationStatement(doWhileIterationStatement: DoWhileIterationStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitDoWhileIterationStatement"
    ]
  },
  {
    "name": "open override fun visitDoWhileIterationStatement(doWhileIterationStatement: DoWhileIterationStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitDoWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-do-while-iteration-statement.html",
    "searchKeys": [
      "visitDoWhileIterationStatement",
      "open override fun visitDoWhileIterationStatement(doWhileIterationStatement: DoWhileIterationStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitDoWhileIterationStatement"
    ]
  },
  {
    "name": "open override fun visitElseBranchStatement(elseBranchNode: ElseBranchStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitElseBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-else-branch-statement.html",
    "searchKeys": [
      "visitElseBranchStatement",
      "open override fun visitElseBranchStatement(elseBranchNode: ElseBranchStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitElseBranchStatement"
    ]
  },
  {
    "name": "open override fun visitElseBranchStatement(elseBranchNode: ElseBranchStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitElseBranchStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-else-branch-statement.html",
    "searchKeys": [
      "visitElseBranchStatement",
      "open override fun visitElseBranchStatement(elseBranchNode: ElseBranchStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitElseBranchStatement"
    ]
  },
  {
    "name": "open override fun visitEnumDecl(enumDecl: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitEnumDecl",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-enum-decl.html",
    "searchKeys": [
      "visitEnumDecl",
      "open override fun visitEnumDecl(enumDecl: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitEnumDecl"
    ]
  },
  {
    "name": "open override fun visitEnumDecl(enumDecl: EnumDecl)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitEnumDecl",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-enum-decl.html",
    "searchKeys": [
      "visitEnumDecl",
      "open override fun visitEnumDecl(enumDecl: EnumDecl)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitEnumDecl"
    ]
  },
  {
    "name": "open override fun visitEnumMemberExpr(enumMemberExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitEnumMemberExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-enum-member-expr.html",
    "searchKeys": [
      "visitEnumMemberExpr",
      "open override fun visitEnumMemberExpr(enumMemberExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitEnumMemberExpr"
    ]
  },
  {
    "name": "open override fun visitEnumMemberExpr(enumMemberExpr: EnumMemberExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitEnumMemberExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-enum-member-expr.html",
    "searchKeys": [
      "visitEnumMemberExpr",
      "open override fun visitEnumMemberExpr(enumMemberExpr: EnumMemberExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitEnumMemberExpr"
    ]
  },
  {
    "name": "open override fun visitFloatLiteral(floatLiteral: FloatLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFloatLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-float-literal.html",
    "searchKeys": [
      "visitFloatLiteral",
      "open override fun visitFloatLiteral(floatLiteral: FloatLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFloatLiteral"
    ]
  },
  {
    "name": "open override fun visitFloatLiteral(floatLiteral: FloatLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFloatLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-float-literal.html",
    "searchKeys": [
      "visitFloatLiteral",
      "open override fun visitFloatLiteral(floatLiteral: FloatLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFloatLiteral"
    ]
  },
  {
    "name": "open override fun visitForIterationExpr(forIterationExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitForIterationExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-for-iteration-expr.html",
    "searchKeys": [
      "visitForIterationExpr",
      "open override fun visitForIterationExpr(forIterationExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitForIterationExpr"
    ]
  },
  {
    "name": "open override fun visitForIterationExpr(forIterationExpr: ForIterationExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitForIterationExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-for-iteration-expr.html",
    "searchKeys": [
      "visitForIterationExpr",
      "open override fun visitForIterationExpr(forIterationExpr: ForIterationExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitForIterationExpr"
    ]
  },
  {
    "name": "open override fun visitForIterationStatement(forIterationStatement: ForIterationStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitForIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-for-iteration-statement.html",
    "searchKeys": [
      "visitForIterationStatement",
      "open override fun visitForIterationStatement(forIterationStatement: ForIterationStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitForIterationStatement"
    ]
  },
  {
    "name": "open override fun visitForIterationStatement(forIterationStatement: ForIterationStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitForIterationStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-for-iteration-statement.html",
    "searchKeys": [
      "visitForIterationStatement",
      "open override fun visitForIterationStatement(forIterationStatement: ForIterationStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitForIterationStatement"
    ]
  },
  {
    "name": "open override fun visitFunctionCallExpr(functionCallExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFunctionCallExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-function-call-expr.html",
    "searchKeys": [
      "visitFunctionCallExpr",
      "open override fun visitFunctionCallExpr(functionCallExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFunctionCallExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionCallExpr(functionCallExpr: FunctionCallExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-function-call-expr.html",
    "searchKeys": [
      "visitFunctionCallExpr",
      "open override fun visitFunctionCallExpr(functionCallExpr: FunctionCallExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionCallExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionCallNamedParameterExpr(functionCallNamedParameterExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFunctionCallNamedParameterExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-function-call-named-parameter-expr.html",
    "searchKeys": [
      "visitFunctionCallNamedParameterExpr",
      "open override fun visitFunctionCallNamedParameterExpr(functionCallNamedParameterExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFunctionCallNamedParameterExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionCallNamedParameterExpr(functionCallNamedParameterExpr: FunctionCallNamedParameterExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionCallNamedParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-function-call-named-parameter-expr.html",
    "searchKeys": [
      "visitFunctionCallNamedParameterExpr",
      "open override fun visitFunctionCallNamedParameterExpr(functionCallNamedParameterExpr: FunctionCallNamedParameterExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionCallNamedParameterExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionCallPositionalParameterExpr(functionCallPositionalParameterExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFunctionCallPositionalParameterExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-function-call-positional-parameter-expr.html",
    "searchKeys": [
      "visitFunctionCallPositionalParameterExpr",
      "open override fun visitFunctionCallPositionalParameterExpr(functionCallPositionalParameterExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFunctionCallPositionalParameterExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionCallPositionalParameterExpr(functionCallPositionalParameterExpr: FunctionCallPositionalParameterExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionCallPositionalParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-function-call-positional-parameter-expr.html",
    "searchKeys": [
      "visitFunctionCallPositionalParameterExpr",
      "open override fun visitFunctionCallPositionalParameterExpr(functionCallPositionalParameterExpr: FunctionCallPositionalParameterExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionCallPositionalParameterExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionDecl(functionDecl: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFunctionDecl",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-function-decl.html",
    "searchKeys": [
      "visitFunctionDecl",
      "open override fun visitFunctionDecl(functionDecl: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFunctionDecl"
    ]
  },
  {
    "name": "open override fun visitFunctionDecl(functionDecl: FunctionDecl)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionDecl",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-function-decl.html",
    "searchKeys": [
      "visitFunctionDecl",
      "open override fun visitFunctionDecl(functionDecl: FunctionDecl)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionDecl"
    ]
  },
  {
    "name": "open override fun visitFunctionLiteral(functionLiteral: AnonymousFunction)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-function-literal.html",
    "searchKeys": [
      "visitFunctionLiteral",
      "open override fun visitFunctionLiteral(functionLiteral: AnonymousFunction)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionLiteral"
    ]
  },
  {
    "name": "open override fun visitFunctionLiteral(functionLiteral: AnonymousFunction)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFunctionLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-function-literal.html",
    "searchKeys": [
      "visitFunctionLiteral",
      "open override fun visitFunctionLiteral(functionLiteral: AnonymousFunction)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFunctionLiteral"
    ]
  },
  {
    "name": "open override fun visitFunctionParameterExpr(functionParameterExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitFunctionParameterExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-function-parameter-expr.html",
    "searchKeys": [
      "visitFunctionParameterExpr",
      "open override fun visitFunctionParameterExpr(functionParameterExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitFunctionParameterExpr"
    ]
  },
  {
    "name": "open override fun visitFunctionParameterExpr(functionParameterExpr: FunctionParameterExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionParameterExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-function-parameter-expr.html",
    "searchKeys": [
      "visitFunctionParameterExpr",
      "open override fun visitFunctionParameterExpr(functionParameterExpr: FunctionParameterExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitFunctionParameterExpr"
    ]
  },
  {
    "name": "open override fun visitIdentifier(identifier: Identifier)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIdentifier",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-identifier.html",
    "searchKeys": [
      "visitIdentifier",
      "open override fun visitIdentifier(identifier: Identifier)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIdentifier"
    ]
  },
  {
    "name": "open override fun visitIdentifier(identifier: Identifier)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitIdentifier",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-identifier.html",
    "searchKeys": [
      "visitIdentifier",
      "open override fun visitIdentifier(identifier: Identifier)",
      "net.exoad.kira.utils.XMLASTVisitor.visitIdentifier"
    ]
  },
  {
    "name": "open override fun visitIfElseIfBranchStatement(ifElseIfBranchNode: ElseIfBranchStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIfElseIfBranchStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-if-else-if-branch-statement.html",
    "searchKeys": [
      "visitIfElseIfBranchStatement",
      "open override fun visitIfElseIfBranchStatement(ifElseIfBranchNode: ElseIfBranchStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIfElseIfBranchStatement"
    ]
  },
  {
    "name": "open override fun visitIfElseIfBranchStatement(ifElseIfBranchNode: ElseIfBranchStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitIfElseIfBranchStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-if-else-if-branch-statement.html",
    "searchKeys": [
      "visitIfElseIfBranchStatement",
      "open override fun visitIfElseIfBranchStatement(ifElseIfBranchNode: ElseIfBranchStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitIfElseIfBranchStatement"
    ]
  },
  {
    "name": "open override fun visitIfSelectionStatement(ifSelectionStatement: IfSelectionStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIfSelectionStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-if-selection-statement.html",
    "searchKeys": [
      "visitIfSelectionStatement",
      "open override fun visitIfSelectionStatement(ifSelectionStatement: IfSelectionStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIfSelectionStatement"
    ]
  },
  {
    "name": "open override fun visitIfSelectionStatement(ifSelectionStatement: IfSelectionStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitIfSelectionStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-if-selection-statement.html",
    "searchKeys": [
      "visitIfSelectionStatement",
      "open override fun visitIfSelectionStatement(ifSelectionStatement: IfSelectionStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitIfSelectionStatement"
    ]
  },
  {
    "name": "open override fun visitIntegerLiteral(integerLiteral: IntegerLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIntegerLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-integer-literal.html",
    "searchKeys": [
      "visitIntegerLiteral",
      "open override fun visitIntegerLiteral(integerLiteral: IntegerLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIntegerLiteral"
    ]
  },
  {
    "name": "open override fun visitIntegerLiteral(integerLiteral: IntegerLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitIntegerLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-integer-literal.html",
    "searchKeys": [
      "visitIntegerLiteral",
      "open override fun visitIntegerLiteral(integerLiteral: IntegerLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitIntegerLiteral"
    ]
  },
  {
    "name": "open override fun visitIntrinsicCallExpr(intrinsicCallExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitIntrinsicCallExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-intrinsic-call-expr.html",
    "searchKeys": [
      "visitIntrinsicCallExpr",
      "open override fun visitIntrinsicCallExpr(intrinsicCallExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitIntrinsicCallExpr"
    ]
  },
  {
    "name": "open override fun visitIntrinsicCallExpr(intrinsicCallExpr: IntrinsicCallExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIntrinsicCallExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-intrinsic-call-expr.html",
    "searchKeys": [
      "visitIntrinsicCallExpr",
      "open override fun visitIntrinsicCallExpr(intrinsicCallExpr: IntrinsicCallExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitIntrinsicCallExpr"
    ]
  },
  {
    "name": "open override fun visitListLiteral(listLiteral: ListLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitListLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-list-literal.html",
    "searchKeys": [
      "visitListLiteral",
      "open override fun visitListLiteral(listLiteral: ListLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitListLiteral"
    ]
  },
  {
    "name": "open override fun visitListLiteral(listLiteral: ListLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitListLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-list-literal.html",
    "searchKeys": [
      "visitListLiteral",
      "open override fun visitListLiteral(listLiteral: ListLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitListLiteral"
    ]
  },
  {
    "name": "open override fun visitMapLiteral(mapLiteral: MapLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitMapLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-map-literal.html",
    "searchKeys": [
      "visitMapLiteral",
      "open override fun visitMapLiteral(mapLiteral: MapLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitMapLiteral"
    ]
  },
  {
    "name": "open override fun visitMapLiteral(mapLiteral: MapLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitMapLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-map-literal.html",
    "searchKeys": [
      "visitMapLiteral",
      "open override fun visitMapLiteral(mapLiteral: MapLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitMapLiteral"
    ]
  },
  {
    "name": "open override fun visitMemberAccessExpr(memberAccessExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitMemberAccessExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-member-access-expr.html",
    "searchKeys": [
      "visitMemberAccessExpr",
      "open override fun visitMemberAccessExpr(memberAccessExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitMemberAccessExpr"
    ]
  },
  {
    "name": "open override fun visitMemberAccessExpr(memberAccessExpr: MemberAccessExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitMemberAccessExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-member-access-expr.html",
    "searchKeys": [
      "visitMemberAccessExpr",
      "open override fun visitMemberAccessExpr(memberAccessExpr: MemberAccessExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitMemberAccessExpr"
    ]
  },
  {
    "name": "open override fun visitModuleDecl(moduleDecl: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitModuleDecl",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-module-decl.html",
    "searchKeys": [
      "visitModuleDecl",
      "open override fun visitModuleDecl(moduleDecl: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitModuleDecl"
    ]
  },
  {
    "name": "open override fun visitModuleDecl(moduleDecl: ModuleDecl)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitModuleDecl",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-module-decl.html",
    "searchKeys": [
      "visitModuleDecl",
      "open override fun visitModuleDecl(moduleDecl: ModuleDecl)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitModuleDecl"
    ]
  },
  {
    "name": "open override fun visitNoExpr(noExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitNoExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-no-expr.html",
    "searchKeys": [
      "visitNoExpr",
      "open override fun visitNoExpr(noExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitNoExpr"
    ]
  },
  {
    "name": "open override fun visitNoExpr(noExpr: NoExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitNoExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-no-expr.html",
    "searchKeys": [
      "visitNoExpr",
      "open override fun visitNoExpr(noExpr: NoExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitNoExpr"
    ]
  },
  {
    "name": "open override fun visitNullLiteral(nullLiteral: NullLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitNullLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-null-literal.html",
    "searchKeys": [
      "visitNullLiteral",
      "open override fun visitNullLiteral(nullLiteral: NullLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitNullLiteral"
    ]
  },
  {
    "name": "open override fun visitNullLiteral(nullLiteral: NullLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitNullLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-null-literal.html",
    "searchKeys": [
      "visitNullLiteral",
      "open override fun visitNullLiteral(nullLiteral: NullLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitNullLiteral"
    ]
  },
  {
    "name": "open override fun visitObjectDecl(objectDecl: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitObjectDecl",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-object-decl.html",
    "searchKeys": [
      "visitObjectDecl",
      "open override fun visitObjectDecl(objectDecl: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitObjectDecl"
    ]
  },
  {
    "name": "open override fun visitObjectDecl(objectDecl: ObjectDecl)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitObjectDecl",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-object-decl.html",
    "searchKeys": [
      "visitObjectDecl",
      "open override fun visitObjectDecl(objectDecl: ObjectDecl)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitObjectDecl"
    ]
  },
  {
    "name": "open override fun visitRangeExpr(rangeExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitRangeExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-range-expr.html",
    "searchKeys": [
      "visitRangeExpr",
      "open override fun visitRangeExpr(rangeExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitRangeExpr"
    ]
  },
  {
    "name": "open override fun visitRangeExpr(rangeExpr: RangeExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitRangeExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-range-expr.html",
    "searchKeys": [
      "visitRangeExpr",
      "open override fun visitRangeExpr(rangeExpr: RangeExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitRangeExpr"
    ]
  },
  {
    "name": "open override fun visitReturnStatement(returnStatement: ReturnStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitReturnStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-return-statement.html",
    "searchKeys": [
      "visitReturnStatement",
      "open override fun visitReturnStatement(returnStatement: ReturnStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitReturnStatement"
    ]
  },
  {
    "name": "open override fun visitReturnStatement(returnStatement: ReturnStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitReturnStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-return-statement.html",
    "searchKeys": [
      "visitReturnStatement",
      "open override fun visitReturnStatement(returnStatement: ReturnStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitReturnStatement"
    ]
  },
  {
    "name": "open override fun visitStatement(statement: Statement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-statement.html",
    "searchKeys": [
      "visitStatement",
      "open override fun visitStatement(statement: Statement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitStatement"
    ]
  },
  {
    "name": "open override fun visitStatement(statement: Statement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-statement.html",
    "searchKeys": [
      "visitStatement",
      "open override fun visitStatement(statement: Statement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitStatement"
    ]
  },
  {
    "name": "open override fun visitStringLiteral(stringLiteral: StringLiteral)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitStringLiteral",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-string-literal.html",
    "searchKeys": [
      "visitStringLiteral",
      "open override fun visitStringLiteral(stringLiteral: StringLiteral)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitStringLiteral"
    ]
  },
  {
    "name": "open override fun visitStringLiteral(stringLiteral: StringLiteral)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitStringLiteral",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-string-literal.html",
    "searchKeys": [
      "visitStringLiteral",
      "open override fun visitStringLiteral(stringLiteral: StringLiteral)",
      "net.exoad.kira.utils.XMLASTVisitor.visitStringLiteral"
    ]
  },
  {
    "name": "open override fun visitTypeCastExpr(typeCastExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitTypeCastExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-type-cast-expr.html",
    "searchKeys": [
      "visitTypeCastExpr",
      "open override fun visitTypeCastExpr(typeCastExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitTypeCastExpr"
    ]
  },
  {
    "name": "open override fun visitTypeCastExpr(typeCastExpr: TypeCastExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitTypeCastExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-type-cast-expr.html",
    "searchKeys": [
      "visitTypeCastExpr",
      "open override fun visitTypeCastExpr(typeCastExpr: TypeCastExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitTypeCastExpr"
    ]
  },
  {
    "name": "open override fun visitTypeCheckExpr(typeCheckExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitTypeCheckExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-type-check-expr.html",
    "searchKeys": [
      "visitTypeCheckExpr",
      "open override fun visitTypeCheckExpr(typeCheckExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitTypeCheckExpr"
    ]
  },
  {
    "name": "open override fun visitTypeCheckExpr(typeCheckExpr: TypeCheckExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitTypeCheckExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-type-check-expr.html",
    "searchKeys": [
      "visitTypeCheckExpr",
      "open override fun visitTypeCheckExpr(typeCheckExpr: TypeCheckExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitTypeCheckExpr"
    ]
  },
  {
    "name": "open override fun visitTypeSpecifier(typeSpecifier: TypeSpecifier)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitTypeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-type-specifier.html",
    "searchKeys": [
      "visitTypeSpecifier",
      "open override fun visitTypeSpecifier(typeSpecifier: TypeSpecifier)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitTypeSpecifier"
    ]
  },
  {
    "name": "open override fun visitTypeSpecifier(typeSpecifier: TypeSpecifier)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitTypeSpecifier",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-type-specifier.html",
    "searchKeys": [
      "visitTypeSpecifier",
      "open override fun visitTypeSpecifier(typeSpecifier: TypeSpecifier)",
      "net.exoad.kira.utils.XMLASTVisitor.visitTypeSpecifier"
    ]
  },
  {
    "name": "open override fun visitUnaryExpr(unaryExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitUnaryExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-unary-expr.html",
    "searchKeys": [
      "visitUnaryExpr",
      "open override fun visitUnaryExpr(unaryExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitUnaryExpr"
    ]
  },
  {
    "name": "open override fun visitUnaryExpr(unaryExpr: UnaryExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitUnaryExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-unary-expr.html",
    "searchKeys": [
      "visitUnaryExpr",
      "open override fun visitUnaryExpr(unaryExpr: UnaryExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitUnaryExpr"
    ]
  },
  {
    "name": "open override fun visitUseStatement(useStatement: UseStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitUseStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-use-statement.html",
    "searchKeys": [
      "visitUseStatement",
      "open override fun visitUseStatement(useStatement: UseStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitUseStatement"
    ]
  },
  {
    "name": "open override fun visitUseStatement(useStatement: UseStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitUseStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-use-statement.html",
    "searchKeys": [
      "visitUseStatement",
      "open override fun visitUseStatement(useStatement: UseStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitUseStatement"
    ]
  },
  {
    "name": "open override fun visitVariableDecl(variableDecl: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitVariableDecl",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-variable-decl.html",
    "searchKeys": [
      "visitVariableDecl",
      "open override fun visitVariableDecl(variableDecl: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitVariableDecl"
    ]
  },
  {
    "name": "open override fun visitVariableDecl(variableDecl: VariableDecl)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitVariableDecl",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-variable-decl.html",
    "searchKeys": [
      "visitVariableDecl",
      "open override fun visitVariableDecl(variableDecl: VariableDecl)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitVariableDecl"
    ]
  },
  {
    "name": "open override fun visitWhileIterationStatement(whileIterationStatement: WhileIterationStatement)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-while-iteration-statement.html",
    "searchKeys": [
      "visitWhileIterationStatement",
      "open override fun visitWhileIterationStatement(whileIterationStatement: WhileIterationStatement)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitWhileIterationStatement"
    ]
  },
  {
    "name": "open override fun visitWhileIterationStatement(whileIterationStatement: WhileIterationStatement)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitWhileIterationStatement",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-while-iteration-statement.html",
    "searchKeys": [
      "visitWhileIterationStatement",
      "open override fun visitWhileIterationStatement(whileIterationStatement: WhileIterationStatement)",
      "net.exoad.kira.utils.XMLASTVisitor.visitWhileIterationStatement"
    ]
  },
  {
    "name": "open override fun visitWithExpr(withExpr: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitWithExpr",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-with-expr.html",
    "searchKeys": [
      "visitWithExpr",
      "open override fun visitWithExpr(withExpr: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitWithExpr"
    ]
  },
  {
    "name": "open override fun visitWithExpr(withExpr: WithExpr)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitWithExpr",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-with-expr.html",
    "searchKeys": [
      "visitWithExpr",
      "open override fun visitWithExpr(withExpr: WithExpr)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitWithExpr"
    ]
  },
  {
    "name": "open override fun visitWithExprMember(withExprMember: <Error class: unknown class>)",
    "description": "net.exoad.kira.utils.XMLASTVisitor.visitWithExprMember",
    "location": "kira_lang/net.exoad.kira.utils/-x-m-l-a-s-t-visitor/visit-with-expr-member.html",
    "searchKeys": [
      "visitWithExprMember",
      "open override fun visitWithExprMember(withExprMember: <Error class: unknown class>)",
      "net.exoad.kira.utils.XMLASTVisitor.visitWithExprMember"
    ]
  },
  {
    "name": "open override fun visitWithExprMember(withExprMember: WithExprMember)",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitWithExprMember",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-semantic-analyzer/visit-with-expr-member.html",
    "searchKeys": [
      "visitWithExprMember",
      "open override fun visitWithExprMember(withExprMember: WithExprMember)",
      "net.exoad.kira.compiler.analysis.semantic.KiraSemanticAnalyzer.visitWithExprMember"
    ]
  },
  {
    "name": "open override val cause: Throwable? = null",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.cause",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/cause.html",
    "searchKeys": [
      "cause",
      "open override val cause: Throwable? = null",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.cause"
    ]
  },
  {
    "name": "open override val cause: Throwable? = null",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException.cause",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-runtime-exception/cause.html",
    "searchKeys": [
      "cause",
      "open override val cause: Throwable? = null",
      "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException.cause"
    ]
  },
  {
    "name": "open override val expr: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.expr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-return-statement/expr.html",
    "searchKeys": [
      "expr",
      "open override val expr: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ReturnStatement.expr"
    ]
  },
  {
    "name": "open override val message: String",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.message",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/message.html",
    "searchKeys": [
      "message",
      "open override val message: String",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.message"
    ]
  },
  {
    "name": "open override val message: String",
    "description": "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException.message",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-kira-runtime-exception/message.html",
    "searchKeys": [
      "message",
      "open override val message: String",
      "net.exoad.kira.compiler.analysis.semantic.KiraRuntimeException.message"
    ]
  },
  {
    "name": "open override val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/modifiers.html",
    "searchKeys": [
      "modifiers",
      "open override val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.modifiers"
    ]
  },
  {
    "name": "open override val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/modifiers.html",
    "searchKeys": [
      "modifiers",
      "open override val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.modifiers"
    ]
  },
  {
    "name": "open override val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/name.html",
    "searchKeys": [
      "name",
      "open override val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.name"
    ]
  },
  {
    "name": "open override val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-first-class-decl/name.html",
    "searchKeys": [
      "name",
      "open override val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.name"
    ]
  },
  {
    "name": "open override val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/name.html",
    "searchKeys": [
      "name",
      "open override val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.name"
    ]
  },
  {
    "name": "open override val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/name.html",
    "searchKeys": [
      "name",
      "open override val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.name"
    ]
  },
  {
    "name": "open override val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/name.html",
    "searchKeys": [
      "name",
      "open override val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.name"
    ]
  },
  {
    "name": "open override val name: TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/name.html",
    "searchKeys": [
      "name",
      "open override val name: TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.name"
    ]
  },
  {
    "name": "open override val value: Array<Expr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-array-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: Array<Expr>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ArrayLiteral.value"
    ]
  },
  {
    "name": "open override val value: Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-bool-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BoolLiteral.value"
    ]
  },
  {
    "name": "open override val value: Double",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-float-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: Double",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.FloatLiteral.value"
    ]
  },
  {
    "name": "open override val value: List<Expr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-list-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: List<Expr>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.ListLiteral.value"
    ]
  },
  {
    "name": "open override val value: Long",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-integer-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: Long",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.IntegerLiteral.value"
    ]
  },
  {
    "name": "open override val value: Map<Expr, Expr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-map-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: Map<Expr, Expr>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.value"
    ]
  },
  {
    "name": "open override val value: String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-string-literal/value.html",
    "searchKeys": [
      "value",
      "open override val value: String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.StringLiteral.value"
    ]
  },
  {
    "name": "open val body: List<Statement>?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.body",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/body.html",
    "searchKeys": [
      "body",
      "open val body: List<Statement>?",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.body"
    ]
  },
  {
    "name": "open val expr: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.expr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-statement/expr.html",
    "searchKeys": [
      "expr",
      "open val expr: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.Statement.expr"
    ]
  },
  {
    "name": "open val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-first-class-decl/modifiers.html",
    "searchKeys": [
      "modifiers",
      "open val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FirstClassDecl.modifiers"
    ]
  },
  {
    "name": "open val name: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.Decl.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-decl/name.html",
    "searchKeys": [
      "name",
      "open val name: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.Decl.name"
    ]
  },
  {
    "name": "open val name: String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-identifier/name.html",
    "searchKeys": [
      "name",
      "open val name: String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Identifier.name"
    ]
  },
  {
    "name": "open val parameters: List<<Error class: unknown class>>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.parameters",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/parameters.html",
    "searchKeys": [
      "parameters",
      "open val parameters: List<<Error class: unknown class>>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.parameters"
    ]
  },
  {
    "name": "open val returnTypeSpecifier: TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.returnTypeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-anonymous-function/return-type-specifier.html",
    "searchKeys": [
      "returnTypeSpecifier",
      "open val returnTypeSpecifier: TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.AnonymousFunction.returnTypeSpecifier"
    ]
  },
  {
    "name": "open val typeSpecifier: TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.typeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/type-specifier.html",
    "searchKeys": [
      "typeSpecifier",
      "open val typeSpecifier: TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.typeSpecifier"
    ]
  },
  {
    "name": "open val value: AnonymousFunction",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-function-decl/value.html",
    "searchKeys": [
      "value",
      "open val value: AnonymousFunction",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.FunctionDecl.value"
    ]
  },
  {
    "name": "open val value: Expr?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-variable-decl/value.html",
    "searchKeys": [
      "value",
      "open val value: Expr?",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.VariableDecl.value"
    ]
  },
  {
    "name": "open val value: T",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.DataLiteral.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-data-literal/value.html",
    "searchKeys": [
      "value",
      "open val value: T",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.DataLiteral.value"
    ]
  },
  {
    "name": "sealed class IfElseBranchStatementNode : ASTNode",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfElseBranchStatementNode",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-else-branch-statement-node/index.html",
    "searchKeys": [
      "IfElseBranchStatementNode",
      "sealed class IfElseBranchStatementNode : ASTNode",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfElseBranchStatementNode"
    ]
  },
  {
    "name": "sealed class Token",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/index.html",
    "searchKeys": [
      "Token",
      "sealed class Token",
      "net.exoad.kira.compiler.frontend.lexer.Token"
    ]
  },
  {
    "name": "val UNKNOWN: FileLocation",
    "description": "net.exoad.kira.source.FileLocation.Companion.UNKNOWN",
    "location": "kira_lang/net.exoad.kira.source/-file-location/-companion/-u-n-k-n-o-w-n.html",
    "searchKeys": [
      "UNKNOWN",
      "val UNKNOWN: FileLocation",
      "net.exoad.kira.source.FileLocation.Companion.UNKNOWN"
    ]
  },
  {
    "name": "val absoluteFileLocation: AbsoluteFileLocation",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic.absoluteFileLocation",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-intrinsic/absolute-file-location.html",
    "searchKeys": [
      "absoluteFileLocation",
      "val absoluteFileLocation: AbsoluteFileLocation",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic.absoluteFileLocation"
    ]
  },
  {
    "name": "val all: Map<String, Token.Type>",
    "description": "net.exoad.kira.core.Keywords.all",
    "location": "kira_lang/net.exoad.kira.core/-keywords/all.html",
    "searchKeys": [
      "all",
      "val all: Map<String, Token.Type>",
      "net.exoad.kira.core.Keywords.all"
    ]
  },
  {
    "name": "val begin: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.begin",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-range-expr/begin.html",
    "searchKeys": [
      "begin",
      "val begin: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.begin"
    ]
  },
  {
    "name": "val body: List<Statement>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.body",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-for-iteration-statement/body.html",
    "searchKeys": [
      "body",
      "val body: List<Statement>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.body"
    ]
  },
  {
    "name": "val canonicalLocation: FileLocation",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.canonicalLocation",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/canonical-location.html",
    "searchKeys": [
      "canonicalLocation",
      "val canonicalLocation: FileLocation",
      "net.exoad.kira.compiler.frontend.lexer.Token.canonicalLocation"
    ]
  },
  {
    "name": "val canonicalName: String",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.canonicalName",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/canonical-name.html",
    "searchKeys": [
      "canonicalName",
      "val canonicalName: String",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.canonicalName"
    ]
  },
  {
    "name": "val childGenericTypeSpecifier: Array<TypeSpecifier>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.childGenericTypeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-type-specifier/child-generic-type-specifier.html",
    "searchKeys": [
      "childGenericTypeSpecifier",
      "val childGenericTypeSpecifier: Array<TypeSpecifier>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.childGenericTypeSpecifier"
    ]
  },
  {
    "name": "val column: Int",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.column",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/column.html",
    "searchKeys": [
      "column",
      "val column: Int",
      "net.exoad.kira.source.AbsoluteFileLocation.column"
    ]
  },
  {
    "name": "val column: Int",
    "description": "net.exoad.kira.source.FileLocation.column",
    "location": "kira_lang/net.exoad.kira.source/-file-location/column.html",
    "searchKeys": [
      "column",
      "val column: Int",
      "net.exoad.kira.source.FileLocation.column"
    ]
  },
  {
    "name": "val condition: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.condition",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-do-while-iteration-statement/condition.html",
    "searchKeys": [
      "condition",
      "val condition: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.condition"
    ]
  },
  {
    "name": "val condition: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.condition",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-if-branch-statement/condition.html",
    "searchKeys": [
      "condition",
      "val condition: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.condition"
    ]
  },
  {
    "name": "val condition: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.condition",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-while-iteration-statement/condition.html",
    "searchKeys": [
      "condition",
      "val condition: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.condition"
    ]
  },
  {
    "name": "val content: String",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.content",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/content.html",
    "searchKeys": [
      "content",
      "val content: String",
      "net.exoad.kira.compiler.frontend.lexer.Token.content"
    ]
  },
  {
    "name": "val content: String",
    "description": "net.exoad.kira.source.SourceContext.content",
    "location": "kira_lang/net.exoad.kira.source/-source-context/content.html",
    "searchKeys": [
      "content",
      "val content: String",
      "net.exoad.kira.source.SourceContext.content"
    ]
  },
  {
    "name": "val context: Array<Modifiers.Context>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.context",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/context.html",
    "searchKeys": [
      "context",
      "val context: Array<Modifiers.Context>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.context"
    ]
  },
  {
    "name": "val context: SourceContext",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.context",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/context.html",
    "searchKeys": [
      "context",
      "val context: SourceContext",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.context"
    ]
  },
  {
    "name": "val current: Char",
    "description": "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.current",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-character-buffer/current.html",
    "searchKeys": [
      "current",
      "val current: Char",
      "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.current"
    ]
  },
  {
    "name": "val declaredAt: AbsoluteFileLocation",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.declaredAt",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol/declared-at.html",
    "searchKeys": [
      "declaredAt",
      "val declaredAt: AbsoluteFileLocation",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.declaredAt"
    ]
  },
  {
    "name": "val diagnostics: List<DiagnosticsException>",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.diagnostics",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-analyzer-results/diagnostics.html",
    "searchKeys": [
      "diagnostics",
      "val diagnostics: List<DiagnosticsException>",
      "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.diagnostics"
    ]
  },
  {
    "name": "val dumpAST: String?",
    "description": "net.exoad.kira.cli.ArgumentOptions.dumpAST",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/dump-a-s-t.html",
    "searchKeys": [
      "dumpAST",
      "val dumpAST: String?",
      "net.exoad.kira.cli.ArgumentOptions.dumpAST"
    ]
  },
  {
    "name": "val dumpLexerTokens: String?",
    "description": "net.exoad.kira.cli.ArgumentOptions.dumpLexerTokens",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/dump-lexer-tokens.html",
    "searchKeys": [
      "dumpLexerTokens",
      "val dumpLexerTokens: String?",
      "net.exoad.kira.cli.ArgumentOptions.dumpLexerTokens"
    ]
  },
  {
    "name": "val elseBranches: List<IfElseBranchStatementNode>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.elseBranches",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-selection-statement/else-branches.html",
    "searchKeys": [
      "elseBranches",
      "val elseBranches: List<IfElseBranchStatementNode>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.elseBranches"
    ]
  },
  {
    "name": "val end: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.end",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-range-expr/end.html",
    "searchKeys": [
      "end",
      "val end: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.RangeExpr.end"
    ]
  },
  {
    "name": "val entries: EnumEntries<BinaryOp>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.entries",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<BinaryOp>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<Builtin.Intrinsics>",
    "description": "net.exoad.kira.core.Builtin.Intrinsics.entries",
    "location": "kira_lang/net.exoad.kira.core/-builtin/-intrinsics/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<Builtin.Intrinsics>",
      "net.exoad.kira.core.Builtin.Intrinsics.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<GeneratedProvider.OutputTarget>",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.entries",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/-output-target/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<GeneratedProvider.OutputTarget>",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.OutputTarget.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<Modifiers.Context>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.entries",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/-context/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<Modifiers.Context>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.Context.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.entries",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<OutputTargets>",
    "description": "net.exoad.kira.compiler.backend.targets.OutputTargets.entries",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-output-targets/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<OutputTargets>",
      "net.exoad.kira.compiler.backend.targets.OutputTargets.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<SemanticScope>",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticScope.entries",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-scope/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<SemanticScope>",
      "net.exoad.kira.compiler.analysis.semantic.SemanticScope.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<SemanticSymbolKind>",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.entries",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol-kind/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<SemanticSymbolKind>",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbolKind.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<Symbols>",
    "description": "net.exoad.kira.core.Symbols.entries",
    "location": "kira_lang/net.exoad.kira.core/-symbols/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<Symbols>",
      "net.exoad.kira.core.Symbols.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<Token.Type>",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.entries",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<Token.Type>",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.entries"
    ]
  },
  {
    "name": "val entries: EnumEntries<UnaryOp>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.entries",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/entries.html",
    "searchKeys": [
      "entries",
      "val entries: EnumEntries<UnaryOp>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.entries"
    ]
  },
  {
    "name": "val file: String",
    "description": "net.exoad.kira.source.SourceContext.file",
    "location": "kira_lang/net.exoad.kira.source/-source-context/file.html",
    "searchKeys": [
      "file",
      "val file: String",
      "net.exoad.kira.source.SourceContext.file"
    ]
  },
  {
    "name": "val floatTypes: Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.floatTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/float-types.html",
    "searchKeys": [
      "floatTypes",
      "val floatTypes: Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.floatTypes"
    ]
  },
  {
    "name": "val forIterationExpr: ForIterationExpr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.forIterationExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-for-iteration-statement/for-iteration-expr.html",
    "searchKeys": [
      "forIterationExpr",
      "val forIterationExpr: ForIterationExpr",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ForIterationStatement.forIterationExpr"
    ]
  },
  {
    "name": "val initializer: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.initializer",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-expr/initializer.html",
    "searchKeys": [
      "initializer",
      "val initializer: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.initializer"
    ]
  },
  {
    "name": "val integerTypes: Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.integerTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/integer-types.html",
    "searchKeys": [
      "integerTypes",
      "val integerTypes: Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.integerTypes"
    ]
  },
  {
    "name": "val intrinsicKey: Builtin.Intrinsics",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic.intrinsicKey",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-intrinsic/intrinsic-key.html",
    "searchKeys": [
      "intrinsicKey",
      "val intrinsicKey: Builtin.Intrinsics",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Intrinsic.intrinsicKey"
    ]
  },
  {
    "name": "val intrinsicalStandardLibrarySources: Array<String>",
    "description": "net.exoad.kira.Public.Builtin.intrinsicalStandardLibrarySources",
    "location": "kira_lang/net.exoad.kira/-public/-builtin/intrinsical-standard-library-sources.html",
    "searchKeys": [
      "intrinsicalStandardLibrarySources",
      "val intrinsicalStandardLibrarySources: Array<String>",
      "net.exoad.kira.Public.Builtin.intrinsicalStandardLibrarySources"
    ]
  },
  {
    "name": "val isAtEnd: Boolean",
    "description": "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.isAtEnd",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-character-buffer/is-at-end.html",
    "searchKeys": [
      "isAtEnd",
      "val isAtEnd: Boolean",
      "net.exoad.kira.compiler.frontend.lexer.CharacterBuffer.isAtEnd"
    ]
  },
  {
    "name": "val isHealthy: Boolean",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.isHealthy",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-analyzer-results/is-healthy.html",
    "searchKeys": [
      "isHealthy",
      "val isHealthy: Boolean",
      "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.isHealthy"
    ]
  },
  {
    "name": "val kind: SemanticSymbolKind",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.kind",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol/kind.html",
    "searchKeys": [
      "kind",
      "val kind: SemanticSymbolKind",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.kind"
    ]
  },
  {
    "name": "val left: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.left",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/left.html",
    "searchKeys": [
      "left",
      "val left: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.left"
    ]
  },
  {
    "name": "val leftExpr: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.leftExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/left-expr.html",
    "searchKeys": [
      "leftExpr",
      "val leftExpr: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.leftExpr"
    ]
  },
  {
    "name": "val lineComments: List<Int>",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult.lineComments",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-preprocessor-result/line-comments.html",
    "searchKeys": [
      "lineComments",
      "val lineComments: List<Int>",
      "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult.lineComments"
    ]
  },
  {
    "name": "val lineNumber: Int",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.lineNumber",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/line-number.html",
    "searchKeys": [
      "lineNumber",
      "val lineNumber: Int",
      "net.exoad.kira.source.AbsoluteFileLocation.lineNumber"
    ]
  },
  {
    "name": "val lineNumber: Int",
    "description": "net.exoad.kira.source.FileLocation.lineNumber",
    "location": "kira_lang/net.exoad.kira.source/-file-location/line-number.html",
    "searchKeys": [
      "lineNumber",
      "val lineNumber: Int",
      "net.exoad.kira.source.FileLocation.lineNumber"
    ]
  },
  {
    "name": "val literals: Array<Token.Type>",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion.literals",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-companion/literals.html",
    "searchKeys": [
      "literals",
      "val literals: Array<Token.Type>",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion.literals"
    ]
  },
  {
    "name": "val literals: Map<String, Token.Type>",
    "description": "net.exoad.kira.core.Keywords.literals",
    "location": "kira_lang/net.exoad.kira.core/-keywords/literals.html",
    "searchKeys": [
      "literals",
      "val literals: Map<String, Token.Type>",
      "net.exoad.kira.core.Keywords.literals"
    ]
  },
  {
    "name": "val location: FileLocation? = null",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.location",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/location.html",
    "searchKeys": [
      "location",
      "val location: FileLocation? = null",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.location"
    ]
  },
  {
    "name": "val logicalTypes: Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.logicalTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/logical-types.html",
    "searchKeys": [
      "logicalTypes",
      "val logicalTypes: Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.logicalTypes"
    ]
  },
  {
    "name": "val member: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.member",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-member-access-expr/member.html",
    "searchKeys": [
      "member",
      "val member: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.member"
    ]
  },
  {
    "name": "val members: Array<EnumMemberExpr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.members",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/members.html",
    "searchKeys": [
      "members",
      "val members: Array<EnumMemberExpr>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.members"
    ]
  },
  {
    "name": "val members: List<Decl>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.members",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/members.html",
    "searchKeys": [
      "members",
      "val members: List<Decl>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.members"
    ]
  },
  {
    "name": "val members: List<FirstClassDecl>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.members",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/members.html",
    "searchKeys": [
      "members",
      "val members: List<FirstClassDecl>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.members"
    ]
  },
  {
    "name": "val members: List<WithExprMember>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.members",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr/members.html",
    "searchKeys": [
      "members",
      "val members: List<WithExprMember>",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExpr.members"
    ]
  },
  {
    "name": "val modifiers: Array<Token.Type>",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/-companion/modifiers.html",
    "searchKeys": [
      "modifiers",
      "val modifiers: Array<Token.Type>",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.Companion.modifiers"
    ]
  },
  {
    "name": "val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/modifiers.html",
    "searchKeys": [
      "modifiers",
      "val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.modifiers"
    ]
  },
  {
    "name": "val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-enum-decl/modifiers.html",
    "searchKeys": [
      "modifiers",
      "val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.EnumDecl.modifiers"
    ]
  },
  {
    "name": "val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-object-decl/modifiers.html",
    "searchKeys": [
      "modifiers",
      "val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ObjectDecl.modifiers"
    ]
  },
  {
    "name": "val modifiers: List<Modifiers>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.modifiers",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/modifiers.html",
    "searchKeys": [
      "modifiers",
      "val modifiers: List<Modifiers>",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.modifiers"
    ]
  },
  {
    "name": "val mutable: Boolean",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.mutable",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-map-literal/mutable.html",
    "searchKeys": [
      "mutable",
      "val mutable: Boolean",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.MapLiteral.mutable"
    ]
  },
  {
    "name": "val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-enum-member-expr/name.html",
    "searchKeys": [
      "name",
      "val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.name"
    ]
  },
  {
    "name": "val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/name.html",
    "searchKeys": [
      "name",
      "val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.name"
    ]
  },
  {
    "name": "val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-named-parameter-expr/name.html",
    "searchKeys": [
      "name",
      "val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.name"
    ]
  },
  {
    "name": "val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/name.html",
    "searchKeys": [
      "name",
      "val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.name"
    ]
  },
  {
    "name": "val name: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr-member/name.html",
    "searchKeys": [
      "name",
      "val name: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.name"
    ]
  },
  {
    "name": "val name: Intrinsic",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-intrinsic-call-expr/name.html",
    "searchKeys": [
      "name",
      "val name: Intrinsic",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.name",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.name"
    ]
  },
  {
    "name": "val name: String",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.name",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-type-specifier/name.html",
    "searchKeys": [
      "name",
      "val name: String",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.TypeSpecifier.name"
    ]
  },
  {
    "name": "val namedParameters: List<FunctionCallNamedParameterExpr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.namedParameters",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/named-parameters.html",
    "searchKeys": [
      "namedParameters",
      "val namedParameters: List<FunctionCallNamedParameterExpr>",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.namedParameters"
    ]
  },
  {
    "name": "val operand: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.operand",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-unary-expr/operand.html",
    "searchKeys": [
      "operand",
      "val operand: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.operand"
    ]
  },
  {
    "name": "val operator: BinaryOp",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.operator",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/operator.html",
    "searchKeys": [
      "operator",
      "val operator: BinaryOp",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.operator"
    ]
  },
  {
    "name": "val operator: BinaryOp",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.operator",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/operator.html",
    "searchKeys": [
      "operator",
      "val operator: BinaryOp",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.operator"
    ]
  },
  {
    "name": "val operator: UnaryOp",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.operator",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-unary-expr/operator.html",
    "searchKeys": [
      "operator",
      "val operator: UnaryOp",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.UnaryExpr.operator"
    ]
  },
  {
    "name": "val origin: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.origin",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-member-access-expr/origin.html",
    "searchKeys": [
      "origin",
      "val origin: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.MemberAccessExpr.origin"
    ]
  },
  {
    "name": "val parameters: List<Expr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.parameters",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-intrinsic-call-expr/parameters.html",
    "searchKeys": [
      "parameters",
      "val parameters: List<Expr>",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.IntrinsicCallExpr.parameters"
    ]
  },
  {
    "name": "val parent: TypeSpecifier? = null",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.parent",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-class-decl/parent.html",
    "searchKeys": [
      "parent",
      "val parent: TypeSpecifier? = null",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ClassDecl.parent"
    ]
  },
  {
    "name": "val pointerPosition: Int",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.pointerPosition",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/pointer-position.html",
    "searchKeys": [
      "pointerPosition",
      "val pointerPosition: Int",
      "net.exoad.kira.compiler.frontend.lexer.Token.pointerPosition"
    ]
  },
  {
    "name": "val position: Int",
    "description": "net.exoad.kira.compiler.frontend.parser.TokenBufferCheckpoint.position",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser/-token-buffer-checkpoint/position.html",
    "searchKeys": [
      "position",
      "val position: Int",
      "net.exoad.kira.compiler.frontend.parser.TokenBufferCheckpoint.position"
    ]
  },
  {
    "name": "val position: Int",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.position",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-positional-parameter-expr/position.html",
    "searchKeys": [
      "position",
      "val position: Int",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.position"
    ]
  },
  {
    "name": "val positionalParameters: List<FunctionCallPositionalParameterExpr>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.positionalParameters",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-expr/positional-parameters.html",
    "searchKeys": [
      "positionalParameters",
      "val positionalParameters: List<FunctionCallPositionalParameterExpr>",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallExpr.positionalParameters"
    ]
  },
  {
    "name": "val precedence: Int",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.precedence",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/precedence.html",
    "searchKeys": [
      "precedence",
      "val precedence: Int",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.precedence"
    ]
  },
  {
    "name": "val precedence: Int",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.precedence",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/precedence.html",
    "searchKeys": [
      "precedence",
      "val precedence: Int",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.precedence"
    ]
  },
  {
    "name": "val processedContent: String",
    "description": "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult.processedContent",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.preprocessor/-preprocessor-result/processed-content.html",
    "searchKeys": [
      "processedContent",
      "val processedContent: String",
      "net.exoad.kira.compiler.frontend.preprocessor.PreprocessorResult.processedContent"
    ]
  },
  {
    "name": "val rawDiagnosticsRepresentation: String? = null",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.Type.rawDiagnosticsRepresentation",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/-type/raw-diagnostics-representation.html",
    "searchKeys": [
      "rawDiagnosticsRepresentation",
      "val rawDiagnosticsRepresentation: String? = null",
      "net.exoad.kira.compiler.frontend.lexer.Token.Type.rawDiagnosticsRepresentation"
    ]
  },
  {
    "name": "val referenceTypes: Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.referenceTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/reference-types.html",
    "searchKeys": [
      "referenceTypes",
      "val referenceTypes: Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.referenceTypes"
    ]
  },
  {
    "name": "val rep: Char",
    "description": "net.exoad.kira.core.Symbols.rep",
    "location": "kira_lang/net.exoad.kira.core/-symbols/rep.html",
    "searchKeys": [
      "rep",
      "val rep: Char",
      "net.exoad.kira.core.Symbols.rep"
    ]
  },
  {
    "name": "val rep: String",
    "description": "net.exoad.kira.core.Builtin.Intrinsics.rep",
    "location": "kira_lang/net.exoad.kira.core/-builtin/-intrinsics/rep.html",
    "searchKeys": [
      "rep",
      "val rep: String",
      "net.exoad.kira.core.Builtin.Intrinsics.rep"
    ]
  },
  {
    "name": "val reserved: Map<String, Token.Type>",
    "description": "net.exoad.kira.core.Keywords.reserved",
    "location": "kira_lang/net.exoad.kira.core/-keywords/reserved.html",
    "searchKeys": [
      "reserved",
      "val reserved: Map<String, Token.Type>",
      "net.exoad.kira.core.Keywords.reserved"
    ]
  },
  {
    "name": "val right: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.right",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-compound-assignment-expr/right.html",
    "searchKeys": [
      "right",
      "val right: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.CompoundAssignmentExpr.right"
    ]
  },
  {
    "name": "val rightExpr: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.rightExpr",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-binary-expr/right-expr.html",
    "searchKeys": [
      "rightExpr",
      "val rightExpr: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.BinaryExpr.rightExpr"
    ]
  },
  {
    "name": "val selectorLength: Int",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.selectorLength",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/selector-length.html",
    "searchKeys": [
      "selectorLength",
      "val selectorLength: Int",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.selectorLength"
    ]
  },
  {
    "name": "val sequenceTypes: Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.sequenceTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/sequence-types.html",
    "searchKeys": [
      "sequenceTypes",
      "val sequenceTypes: Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.sequenceTypes"
    ]
  },
  {
    "name": "val src: Array<String>",
    "description": "net.exoad.kira.cli.ArgumentOptions.src",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/src.html",
    "searchKeys": [
      "src",
      "val src: Array<String>",
      "net.exoad.kira.cli.ArgumentOptions.src"
    ]
  },
  {
    "name": "val srcFile: String",
    "description": "net.exoad.kira.source.AbsoluteFileLocation.srcFile",
    "location": "kira_lang/net.exoad.kira.source/-absolute-file-location/src-file.html",
    "searchKeys": [
      "srcFile",
      "val srcFile: String",
      "net.exoad.kira.source.AbsoluteFileLocation.srcFile"
    ]
  },
  {
    "name": "val statements: List<ASTNode>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode.statements",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast/-root-a-s-t-node/statements.html",
    "searchKeys": [
      "statements",
      "val statements: List<ASTNode>",
      "net.exoad.kira.compiler.frontend.parser.ast.RootASTNode.statements"
    ]
  },
  {
    "name": "val statements: List<Statement>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.statements",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-do-while-iteration-statement/statements.html",
    "searchKeys": [
      "statements",
      "val statements: List<Statement>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.DoWhileIterationStatement.statements"
    ]
  },
  {
    "name": "val statements: List<Statement>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement.statements",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-branch-statement/statements.html",
    "searchKeys": [
      "statements",
      "val statements: List<Statement>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseBranchStatement.statements"
    ]
  },
  {
    "name": "val statements: List<Statement>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.statements",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-else-if-branch-statement/statements.html",
    "searchKeys": [
      "statements",
      "val statements: List<Statement>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.ElseIfBranchStatement.statements"
    ]
  },
  {
    "name": "val statements: List<Statement>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.statements",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-while-iteration-statement/statements.html",
    "searchKeys": [
      "statements",
      "val statements: List<Statement>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.WhileIterationStatement.statements"
    ]
  },
  {
    "name": "val symbol: Array<Symbols>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.symbol",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-binary-op/symbol.html",
    "searchKeys": [
      "symbol",
      "val symbol: Array<Symbols>",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.BinaryOp.symbol"
    ]
  },
  {
    "name": "val symbol: Symbols",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.symbol",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/symbol.html",
    "searchKeys": [
      "symbol",
      "val symbol: Symbols",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.symbol"
    ]
  },
  {
    "name": "val symbolTable: SymbolTable",
    "description": "net.exoad.kira.compiler.CompilationUnit.symbolTable",
    "location": "kira_lang/net.exoad.kira.compiler/-compilation-unit/symbol-table.html",
    "searchKeys": [
      "symbolTable",
      "val symbolTable: SymbolTable",
      "net.exoad.kira.compiler.CompilationUnit.symbolTable"
    ]
  },
  {
    "name": "val symbolTable: SymbolTable",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.symbolTable",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-analyzer-results/symbol-table.html",
    "searchKeys": [
      "symbolTable",
      "val symbolTable: SymbolTable",
      "net.exoad.kira.compiler.analysis.semantic.SemanticAnalyzerResults.symbolTable"
    ]
  },
  {
    "name": "val tag: String",
    "description": "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.tag",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.diagnostics/-diagnostics-exception/tag.html",
    "searchKeys": [
      "tag",
      "val tag: String",
      "net.exoad.kira.compiler.analysis.diagnostics.DiagnosticsException.tag"
    ]
  },
  {
    "name": "val target: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.target",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-for-iteration-expr/target.html",
    "searchKeys": [
      "target",
      "val target: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.ForIterationExpr.target"
    ]
  },
  {
    "name": "val target: Identifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.target",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-assignment-expr/target.html",
    "searchKeys": [
      "target",
      "val target: Identifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.target"
    ]
  },
  {
    "name": "val thenStatements: List<Statement>",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.thenStatements",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-if-selection-statement/then-statements.html",
    "searchKeys": [
      "thenStatements",
      "val thenStatements: List<Statement>",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.IfSelectionStatement.thenStatements"
    ]
  },
  {
    "name": "val tokenType: Token.Type",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.tokenType",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-modifiers/token-type.html",
    "searchKeys": [
      "tokenType",
      "val tokenType: Token.Type",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.Modifiers.tokenType"
    ]
  },
  {
    "name": "val tokenType: Token.Type",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.tokenType",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.elements/-unary-op/token-type.html",
    "searchKeys": [
      "tokenType",
      "val tokenType: Token.Type",
      "net.exoad.kira.compiler.frontend.parser.ast.elements.UnaryOp.tokenType"
    ]
  },
  {
    "name": "val tokens: List<Token>",
    "description": "net.exoad.kira.source.SourceContext.tokens",
    "location": "kira_lang/net.exoad.kira.source/-source-context/tokens.html",
    "searchKeys": [
      "tokens",
      "val tokens: List<Token>",
      "net.exoad.kira.source.SourceContext.tokens"
    ]
  },
  {
    "name": "val type: Token.Type",
    "description": "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.type",
    "location": "kira_lang/net.exoad.kira.compiler.analysis.semantic/-semantic-symbol/type.html",
    "searchKeys": [
      "type",
      "val type: Token.Type",
      "net.exoad.kira.compiler.analysis.semantic.SemanticSymbol.type"
    ]
  },
  {
    "name": "val type: Token.Type",
    "description": "net.exoad.kira.compiler.frontend.lexer.Token.type",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.lexer/-token/type.html",
    "searchKeys": [
      "type",
      "val type: Token.Type",
      "net.exoad.kira.compiler.frontend.lexer.Token.type"
    ]
  },
  {
    "name": "val type: TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.type",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-cast-expr/type.html",
    "searchKeys": [
      "type",
      "val type: TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.type"
    ]
  },
  {
    "name": "val type: TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.type",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-check-expr/type.html",
    "searchKeys": [
      "type",
      "val type: TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.type"
    ]
  },
  {
    "name": "val typeSpecifier: TypeSpecifier",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.typeSpecifier",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-parameter-expr/type-specifier.html",
    "searchKeys": [
      "typeSpecifier",
      "val typeSpecifier: TypeSpecifier",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionParameterExpr.typeSpecifier"
    ]
  },
  {
    "name": "val unitTypes: Map<String, Array<Token.Type>>",
    "description": "net.exoad.kira.core.Builtin.unitTypes",
    "location": "kira_lang/net.exoad.kira.core/-builtin/unit-types.html",
    "searchKeys": [
      "unitTypes",
      "val unitTypes: Map<String, Array<Token.Type>>",
      "net.exoad.kira.core.Builtin.unitTypes"
    ]
  },
  {
    "name": "val uri: StringLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.uri",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.declarations/-module-decl/uri.html",
    "searchKeys": [
      "uri",
      "val uri: StringLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.declarations.ModuleDecl.uri"
    ]
  },
  {
    "name": "val uri: StringLiteral",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.uri",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.statements/-use-statement/uri.html",
    "searchKeys": [
      "uri",
      "val uri: StringLiteral",
      "net.exoad.kira.compiler.frontend.parser.ast.statements.UseStatement.uri"
    ]
  },
  {
    "name": "val useDiagnostics: Boolean",
    "description": "net.exoad.kira.cli.ArgumentOptions.useDiagnostics",
    "location": "kira_lang/net.exoad.kira.cli/-argument-options/use-diagnostics.html",
    "searchKeys": [
      "useDiagnostics",
      "val useDiagnostics: Boolean",
      "net.exoad.kira.cli.ArgumentOptions.useDiagnostics"
    ]
  },
  {
    "name": "val value: DataLiteral<*>?",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-enum-member-expr/value.html",
    "searchKeys": [
      "value",
      "val value: DataLiteral<*>?",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.EnumMemberExpr.value"
    ]
  },
  {
    "name": "val value: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-assignment-expr/value.html",
    "searchKeys": [
      "value",
      "val value: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.AssignmentExpr.value"
    ]
  },
  {
    "name": "val value: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-named-parameter-expr/value.html",
    "searchKeys": [
      "value",
      "val value: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallNamedParameterExpr.value"
    ]
  },
  {
    "name": "val value: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-function-call-positional-parameter-expr/value.html",
    "searchKeys": [
      "value",
      "val value: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.FunctionCallPositionalParameterExpr.value"
    ]
  },
  {
    "name": "val value: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-cast-expr/value.html",
    "searchKeys": [
      "value",
      "val value: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCastExpr.value"
    ]
  },
  {
    "name": "val value: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-type-check-expr/value.html",
    "searchKeys": [
      "value",
      "val value: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.TypeCheckExpr.value"
    ]
  },
  {
    "name": "val value: Expr",
    "description": "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.value",
    "location": "kira_lang/net.exoad.kira.compiler.frontend.parser.ast.expressions/-with-expr-member/value.html",
    "searchKeys": [
      "value",
      "val value: Expr",
      "net.exoad.kira.compiler.frontend.parser.ast.expressions.WithExprMember.value"
    ]
  },
  {
    "name": "val viewFlags: Set<String>",
    "description": "net.exoad.kira.cli.ArgsParser.viewFlags",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/view-flags.html",
    "searchKeys": [
      "viewFlags",
      "val viewFlags: Set<String>",
      "net.exoad.kira.cli.ArgsParser.viewFlags"
    ]
  },
  {
    "name": "val viewOptions: Map<String, String>",
    "description": "net.exoad.kira.cli.ArgsParser.viewOptions",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/view-options.html",
    "searchKeys": [
      "viewOptions",
      "val viewOptions: Map<String, String>",
      "net.exoad.kira.cli.ArgsParser.viewOptions"
    ]
  },
  {
    "name": "val viewPositionalArgs: List<String>",
    "description": "net.exoad.kira.cli.ArgsParser.viewPositionalArgs",
    "location": "kira_lang/net.exoad.kira.cli/-args-parser/view-positional-args.html",
    "searchKeys": [
      "viewPositionalArgs",
      "val viewPositionalArgs: List<String>",
      "net.exoad.kira.cli.ArgsParser.viewPositionalArgs"
    ]
  },
  {
    "name": "var beVerbose: Boolean",
    "description": "net.exoad.kira.Public.Flags.beVerbose",
    "location": "kira_lang/net.exoad.kira/-public/-flags/be-verbose.html",
    "searchKeys": [
      "beVerbose",
      "var beVerbose: Boolean",
      "net.exoad.kira.Public.Flags.beVerbose"
    ]
  },
  {
    "name": "var enableVisualView: Boolean",
    "description": "net.exoad.kira.Public.Flags.enableVisualView",
    "location": "kira_lang/net.exoad.kira/-public/-flags/enable-visual-view.html",
    "searchKeys": [
      "enableVisualView",
      "var enableVisualView: Boolean",
      "net.exoad.kira.Public.Flags.enableVisualView"
    ]
  },
  {
    "name": "var outputMode: GeneratedProvider.OutputTarget",
    "description": "net.exoad.kira.compiler.backend.targets.GeneratedProvider.outputMode",
    "location": "kira_lang/net.exoad.kira.compiler.backend.targets/-generated-provider/output-mode.html",
    "searchKeys": [
      "outputMode",
      "var outputMode: GeneratedProvider.OutputTarget",
      "net.exoad.kira.compiler.backend.targets.GeneratedProvider.outputMode"
    ]
  },
  {
    "name": "var useDiagnosticsUnicode: Boolean",
    "description": "net.exoad.kira.Public.Flags.useDiagnosticsUnicode",
    "location": "kira_lang/net.exoad.kira/-public/-flags/use-diagnostics-unicode.html",
    "searchKeys": [
      "useDiagnosticsUnicode",
      "var useDiagnosticsUnicode: Boolean",
      "net.exoad.kira.Public.Flags.useDiagnosticsUnicode"
    ]
  }
]